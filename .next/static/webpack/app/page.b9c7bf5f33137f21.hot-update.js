"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./features/editor/scene/droppable.tsx":
/*!*********************************************!*\
  !*** ./features/editor/scene/droppable.tsx ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DroppableArea: function() { return /* binding */ DroppableArea; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _designcombo_events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @designcombo/events */ \"(app-pages-browser)/./node_modules/@designcombo/events/dist/index.es.js\");\n/* harmony import */ var _designcombo_state__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @designcombo/state */ \"(app-pages-browser)/./node_modules/@designcombo/state/dist/index.es.js\");\n/* harmony import */ var _designcombo_timeline__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @designcombo/timeline */ \"(app-pages-browser)/./node_modules/@designcombo/timeline/dist/index.es.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _dnd_kit_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @dnd-kit/core */ \"(app-pages-browser)/./node_modules/@dnd-kit/core/dist/core.esm.js\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/lib/utils */ \"(app-pages-browser)/./lib/utils.ts\");\n/* __next_internal_client_entry_do_not_use__ DroppableArea auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n\n\nvar AcceptedDropTypes;\n(function(AcceptedDropTypes) {\n    AcceptedDropTypes[\"IMAGE\"] = \"image\";\n    AcceptedDropTypes[\"VIDEO\"] = \"video\";\n    AcceptedDropTypes[\"AUDIO\"] = \"audio\";\n})(AcceptedDropTypes || (AcceptedDropTypes = {}));\n// Función para generar un thumbnail a partir de un video\nconst generateVideoThumbnail = (file)=>{\n    return new Promise((resolve, reject)=>{\n        // Crear un elemento de video temporal para generar la miniatura\n        const video = document.createElement(\"video\");\n        video.preload = \"metadata\";\n        // Configurar eventos\n        video.onloadedmetadata = ()=>{\n            // Buscar un fotograma cerca del inicio del video, pero no el primer frame\n            video.currentTime = Math.min(1, video.duration / 10);\n        };\n        video.onloadeddata = ()=>{\n            try {\n                // Crear un canvas para capturar el fotograma actual\n                const canvas = document.createElement(\"canvas\");\n                canvas.width = video.videoWidth;\n                canvas.height = video.videoHeight;\n                // Dibujar el fotograma actual en el canvas\n                const ctx = canvas.getContext(\"2d\");\n                ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n                // Convertir el canvas a una URL de datos (thumbnail)\n                const dataUrl = canvas.toDataURL(\"image/jpeg\", 0.8);\n                // Liberar recursos\n                URL.revokeObjectURL(video.src);\n                resolve(dataUrl);\n            } catch (error) {\n                console.error(\"Error generando thumbnail:\", error);\n                reject(error);\n            }\n        };\n        video.onerror = ()=>{\n            console.error(\"Error cargando video para thumbnail\");\n            URL.revokeObjectURL(video.src);\n            reject(new Error(\"Error loading video\"));\n        };\n        // Establecer la fuente del video\n        video.src = URL.createObjectURL(file);\n    });\n};\n// Función para crear un thumbnail para una imagen\nconst createImagePreview = (file)=>{\n    return new Promise((resolve, reject)=>{\n        const reader = new FileReader();\n        reader.onload = ()=>{\n            if (typeof reader.result === \"string\") {\n                resolve(reader.result);\n            } else {\n                reject(new Error(\"No se pudo convertir la imagen a dataURL\"));\n            }\n        };\n        reader.onerror = ()=>{\n            reject(new Error(\"Error al leer el archivo\"));\n        };\n        reader.readAsDataURL(file);\n    });\n};\nconst useDragAndDrop = (onDragStateChange)=>{\n    _s();\n    const [isPointerInside, setIsPointerInside] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(false);\n    const [isDraggingOver, setIsDraggingOver] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(false);\n    const handleDropFile = async (file)=>{\n        const id = (0,_designcombo_timeline__WEBPACK_IMPORTED_MODULE_3__.generateId)();\n        try {\n            // Determinar el tipo de archivo\n            if (file.type.startsWith(\"image/\")) {\n                // Procesar imagen\n                const imageUrl = URL.createObjectURL(file);\n                const thumbnailUrl = await createImagePreview(file);\n                (0,_designcombo_events__WEBPACK_IMPORTED_MODULE_1__.dispatch)(_designcombo_state__WEBPACK_IMPORTED_MODULE_2__.ADD_IMAGE, {\n                    payload: {\n                        id,\n                        details: {\n                            src: imageUrl\n                        },\n                        metadata: {\n                            previewUrl: thumbnailUrl,\n                            fileName: file.name\n                        }\n                    }\n                });\n            } else if (file.type.startsWith(\"video/\")) {\n                // Procesar video\n                const videoUrl = URL.createObjectURL(file);\n                let thumbnailUrl;\n                try {\n                    thumbnailUrl = await generateVideoThumbnail(file);\n                } catch (error) {\n                    console.error(\"Error generando thumbnail para video:\", error);\n                    thumbnailUrl = videoUrl; // Usar el video como su propio thumbnail si falla\n                }\n                (0,_designcombo_events__WEBPACK_IMPORTED_MODULE_1__.dispatch)(_designcombo_state__WEBPACK_IMPORTED_MODULE_2__.ADD_VIDEO, {\n                    payload: {\n                        id,\n                        details: {\n                            src: videoUrl\n                        },\n                        metadata: {\n                            previewUrl: thumbnailUrl,\n                            fileName: file.name\n                        }\n                    }\n                });\n            } else if (file.type.startsWith(\"audio/\")) {\n                // Procesar audio\n                const audioUrl = URL.createObjectURL(file);\n                (0,_designcombo_events__WEBPACK_IMPORTED_MODULE_1__.dispatch)(_designcombo_state__WEBPACK_IMPORTED_MODULE_2__.ADD_AUDIO, {\n                    payload: {\n                        id,\n                        details: {\n                            src: audioUrl\n                        },\n                        metadata: {\n                            fileName: file.name\n                        }\n                    }\n                });\n            }\n        } catch (error) {\n            console.error(\"Error procesando archivo arrastrado:\", error);\n        }\n    };\n    const handleDrop = (0,react__WEBPACK_IMPORTED_MODULE_4__.useCallback)((draggedData)=>{\n        const payload = {\n            ...draggedData,\n            id: (0,_designcombo_timeline__WEBPACK_IMPORTED_MODULE_3__.generateId)()\n        };\n        switch(draggedData.type){\n            case \"image\":\n                (0,_designcombo_events__WEBPACK_IMPORTED_MODULE_1__.dispatch)(_designcombo_state__WEBPACK_IMPORTED_MODULE_2__.ADD_IMAGE, {\n                    payload\n                });\n                break;\n            case \"video\":\n                (0,_designcombo_events__WEBPACK_IMPORTED_MODULE_1__.dispatch)(_designcombo_state__WEBPACK_IMPORTED_MODULE_2__.ADD_VIDEO, {\n                    payload\n                });\n                break;\n            case \"audio\":\n                (0,_designcombo_events__WEBPACK_IMPORTED_MODULE_1__.dispatch)(_designcombo_state__WEBPACK_IMPORTED_MODULE_2__.ADD_AUDIO, {\n                    payload\n                });\n                break;\n        }\n    }, []);\n    const onDragEnter = (0,react__WEBPACK_IMPORTED_MODULE_4__.useCallback)((e)=>{\n        e.preventDefault();\n        try {\n            var _e_dataTransfer, _e_dataTransfer1;\n            // Check if this is a file being dragged\n            if (((_e_dataTransfer = e.dataTransfer) === null || _e_dataTransfer === void 0 ? void 0 : _e_dataTransfer.items) && e.dataTransfer.items.length > 0) {\n                for(let i = 0; i < e.dataTransfer.items.length; i++){\n                    if (e.dataTransfer.items[i].kind === \"file\") {\n                        setIsDraggingOver(true);\n                        setIsPointerInside(true);\n                        onDragStateChange === null || onDragStateChange === void 0 ? void 0 : onDragStateChange(true);\n                        return;\n                    }\n                }\n            }\n            // Otherwise, check for dragged JSON data\n            const draggedDataString = (_e_dataTransfer1 = e.dataTransfer) === null || _e_dataTransfer1 === void 0 ? void 0 : _e_dataTransfer1.types[0];\n            if (!draggedDataString) return;\n            const draggedData = JSON.parse(draggedDataString);\n            if (!Object.values(AcceptedDropTypes).includes(draggedData.type)) return;\n            setIsDraggingOver(true);\n            setIsPointerInside(true);\n            onDragStateChange === null || onDragStateChange === void 0 ? void 0 : onDragStateChange(true);\n        } catch (error) {\n            console.error(\"Error parsing dragged data:\", error);\n        }\n    }, [\n        onDragStateChange\n    ]);\n    const onDragOver = (0,react__WEBPACK_IMPORTED_MODULE_4__.useCallback)((e)=>{\n        e.preventDefault(); // Importante: permite el drop\n        if (isPointerInside) {\n            setIsDraggingOver(true);\n            onDragStateChange === null || onDragStateChange === void 0 ? void 0 : onDragStateChange(true);\n        }\n    }, [\n        isPointerInside,\n        onDragStateChange\n    ]);\n    const onDrop = (0,react__WEBPACK_IMPORTED_MODULE_4__.useCallback)((e)=>{\n        if (!isDraggingOver) return;\n        e.preventDefault();\n        setIsDraggingOver(false);\n        onDragStateChange === null || onDragStateChange === void 0 ? void 0 : onDragStateChange(false);\n        try {\n            var _e_dataTransfer, _e_dataTransfer1;\n            // Primero, verificar si se están soltando archivos\n            if (((_e_dataTransfer = e.dataTransfer) === null || _e_dataTransfer === void 0 ? void 0 : _e_dataTransfer.files) && e.dataTransfer.files.length > 0) {\n                for(let i = 0; i < e.dataTransfer.files.length; i++){\n                    const file = e.dataTransfer.files[i];\n                    handleDropFile(file);\n                }\n                return;\n            }\n            // Si no son archivos, procesar como datos arrastrados\n            const draggedDataString = (_e_dataTransfer1 = e.dataTransfer) === null || _e_dataTransfer1 === void 0 ? void 0 : _e_dataTransfer1.types[0];\n            const draggedData = JSON.parse(e.dataTransfer.getData(draggedDataString));\n            handleDrop(draggedData);\n        } catch (error) {\n            console.error(\"Error parsing dropped data:\", error);\n        }\n    }, [\n        isDraggingOver,\n        onDragStateChange,\n        handleDrop\n    ]);\n    const onDragLeave = (0,react__WEBPACK_IMPORTED_MODULE_4__.useCallback)((e)=>{\n        e.preventDefault();\n        if (!e.currentTarget.contains(e.relatedTarget)) {\n            setIsDraggingOver(false);\n            setIsPointerInside(false);\n            onDragStateChange === null || onDragStateChange === void 0 ? void 0 : onDragStateChange(false);\n        }\n    }, [\n        onDragStateChange\n    ]);\n    return {\n        onDragEnter,\n        onDragOver,\n        onDrop,\n        onDragLeave,\n        isDraggingOver\n    };\n};\n_s(useDragAndDrop, \"03hvRWIfLzDd/Cy1Zohx8Tx+x1U=\");\nfunction DroppableArea(param) {\n    let { id, children, style, className, onDragStateChange } = param;\n    _s1();\n    // Usar useDroppable para compatibilidad con @dnd-kit\n    const { isOver, setNodeRef } = (0,_dnd_kit_core__WEBPACK_IMPORTED_MODULE_5__.useDroppable)({\n        id\n    });\n    // Usar nuestros propios handlers para drag-and-drop de archivos externos\n    const { onDragEnter, onDragOver, onDrop, onDragLeave } = useDragAndDrop(onDragStateChange || (isOver ? ()=>true : undefined));\n    if (onDragStateChange) {\n        onDragStateChange(isOver);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: setNodeRef,\n        style: style,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_6__.cn)(\"relative\", className),\n        onDragEnter: onDragEnter,\n        onDragOver: onDragOver,\n        onDrop: onDrop,\n        onDragLeave: onDragLeave,\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\scene\\\\droppable.tsx\",\n        lineNumber: 294,\n        columnNumber: 5\n    }, this);\n}\n_s1(DroppableArea, \"3g+wbRpZYIpGuMhcblJMJU5prI8=\", false, function() {\n    return [\n        _dnd_kit_core__WEBPACK_IMPORTED_MODULE_5__.useDroppable,\n        useDragAndDrop\n    ];\n});\n_c = DroppableArea;\nvar _c;\n$RefreshReg$(_c, \"DroppableArea\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./features/editor/scene/droppable.tsx\n"));

/***/ })

});