"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./features/editor/timeline/items/image.ts":
/*!*************************************************!*\
  !*** ./features/editor/timeline/items/image.ts ***!
  \*************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _designcombo_timeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @designcombo/timeline */ \"(app-pages-browser)/./node_modules/@designcombo/timeline/dist/index.es.js\");\n/* harmony import */ var _controls__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../controls */ \"(app-pages-browser)/./features/editor/timeline/controls/index.ts\");\n\n\nclass Image extends _designcombo_timeline__WEBPACK_IMPORTED_MODULE_0__.Image {\n    static createControls() {\n        return {\n            controls: (0,_controls__WEBPACK_IMPORTED_MODULE_1__.createResizeControls)()\n        };\n    }\n    _render(ctx) {\n        var _this_details;\n        // Verificar si este elemento debe ocultarse en la timeline\n        if ((_this_details = this.details) === null || _this_details === void 0 ? void 0 : _this_details.hideInTimeline) {\n            // No renderizar el elemento en la timeline, pero mantenerlo en el modelo\n            return;\n        }\n        // Si no está oculto, renderizarlo normalmente\n        super._render(ctx);\n        this.updateSelected(ctx);\n    }\n    async loadImage() {\n        try {\n            var _this_canvas;\n            console.log(\"[DEBUG Image] Cargando imagen:\", this.src.substring(0, 30) + \"...\");\n            const img = await _designcombo_timeline__WEBPACK_IMPORTED_MODULE_0__.util.loadImage(this.src).catch((error)=>{\n                var _this_metadata;\n                console.error(\"[ERROR Image] Error cargando imagen principal:\", error);\n                // Si hay metadata con previewUrl, intentar usar esa como fallback\n                if ((_this_metadata = this.metadata) === null || _this_metadata === void 0 ? void 0 : _this_metadata.previewUrl) {\n                    console.log(\"[DEBUG Image] Intentando cargar desde previewUrl\");\n                    return _designcombo_timeline__WEBPACK_IMPORTED_MODULE_0__.util.loadImage(this.metadata.previewUrl);\n                }\n                throw error;\n            });\n            const imgHeight = img.height;\n            const rectHeight = this.height;\n            const scaleY = rectHeight / imgHeight;\n            const pattern = new _designcombo_timeline__WEBPACK_IMPORTED_MODULE_0__.Pattern({\n                source: img,\n                repeat: \"repeat-x\",\n                patternTransform: [\n                    scaleY,\n                    0,\n                    0,\n                    scaleY,\n                    0,\n                    0\n                ]\n            });\n            this.set(\"fill\", pattern);\n            (_this_canvas = this.canvas) === null || _this_canvas === void 0 ? void 0 : _this_canvas.requestRenderAll();\n            console.log(\"[DEBUG Image] Imagen cargada correctamente\");\n        } catch (error) {\n            var _this_canvas1;\n            console.error(\"[ERROR Image] No se pudo cargar la imagen:\", error);\n            // Si falla todo, establecer un patrón de color gris como fallback\n            const fillColor = \"#666666\";\n            this.set(\"fill\", fillColor);\n            (_this_canvas1 = this.canvas) === null || _this_canvas1 === void 0 ? void 0 : _this_canvas1.requestRenderAll();\n        }\n    }\n    setSrc(src) {\n        var _this_canvas;\n        this.src = src;\n        this.loadImage();\n        (_this_canvas = this.canvas) === null || _this_canvas === void 0 ? void 0 : _this_canvas.requestRenderAll();\n    }\n    constructor(props){\n        super(props);\n        this.metadata = props.metadata;\n        this.loadImage();\n    }\n}\nImage.type = \"Image\";\n/* harmony default export */ __webpack_exports__[\"default\"] = (Image);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ZlYXR1cmVzL2VkaXRvci90aW1lbGluZS9pdGVtcy9pbWFnZS50cyIsIm1hcHBpbmdzIjoiOzs7QUFNK0I7QUFDb0I7QUFRbkQsTUFBTUEsY0FBY0Msd0RBQVNBO0lBSTNCLE9BQU9JLGlCQUF3RDtRQUM3RCxPQUFPO1lBQUVDLFVBQVVGLCtEQUFvQkE7UUFBRztJQUM1QztJQVFPRyxRQUFRQyxHQUE2QixFQUFFO1lBRXhDO1FBREosMkRBQTJEO1FBQzNELEtBQUksb0JBQUksQ0FBQ0MsT0FBTyxjQUFaLGtEQUFjQyxjQUFjLEVBQUU7WUFDaEMseUVBQXlFO1lBQ3pFO1FBQ0Y7UUFFQSw4Q0FBOEM7UUFDOUMsS0FBSyxDQUFDSCxRQUFRQztRQUNkLElBQUksQ0FBQ0csY0FBYyxDQUFDSDtJQUN0QjtJQUVBLE1BQWFJLFlBQVk7UUFDdkIsSUFBSTtnQkF1QkY7WUF0QkFDLFFBQVFDLEdBQUcsQ0FBQyxrQ0FBa0MsSUFBSSxDQUFDQyxHQUFHLENBQUNDLFNBQVMsQ0FBQyxHQUFHLE1BQU07WUFFMUUsTUFBTUMsTUFBTSxNQUFNZCx1REFBSUEsQ0FBQ1MsU0FBUyxDQUFDLElBQUksQ0FBQ0csR0FBRyxFQUFFRyxLQUFLLENBQUNDLENBQUFBO29CQUkzQztnQkFISk4sUUFBUU0sS0FBSyxDQUFDLGtEQUFrREE7Z0JBRWhFLGtFQUFrRTtnQkFDbEUsS0FBSSxxQkFBSSxDQUFDQyxRQUFRLGNBQWIsb0RBQWVDLFVBQVUsRUFBRTtvQkFDN0JSLFFBQVFDLEdBQUcsQ0FBQztvQkFDWixPQUFPWCx1REFBSUEsQ0FBQ1MsU0FBUyxDQUFDLElBQUksQ0FBQ1EsUUFBUSxDQUFDQyxVQUFVO2dCQUNoRDtnQkFDQSxNQUFNRjtZQUNSO1lBRUEsTUFBTUcsWUFBWUwsSUFBSU0sTUFBTTtZQUM1QixNQUFNQyxhQUFhLElBQUksQ0FBQ0QsTUFBTTtZQUM5QixNQUFNRSxTQUFTRCxhQUFhRjtZQUM1QixNQUFNSSxVQUFVLElBQUl4QiwwREFBT0EsQ0FBQztnQkFDMUJ5QixRQUFRVjtnQkFDUlcsUUFBUTtnQkFDUkMsa0JBQWtCO29CQUFDSjtvQkFBUTtvQkFBRztvQkFBR0E7b0JBQVE7b0JBQUc7aUJBQUU7WUFDaEQ7WUFDQSxJQUFJLENBQUNLLEdBQUcsQ0FBQyxRQUFRSjthQUNqQixtQkFBSSxDQUFDSyxNQUFNLGNBQVgsZ0RBQWFDLGdCQUFnQjtZQUM3Qm5CLFFBQVFDLEdBQUcsQ0FBQztRQUNkLEVBQUUsT0FBT0ssT0FBTztnQkFLZDtZQUpBTixRQUFRTSxLQUFLLENBQUMsOENBQThDQTtZQUM1RCxrRUFBa0U7WUFDbEUsTUFBTWMsWUFBWTtZQUNsQixJQUFJLENBQUNILEdBQUcsQ0FBQyxRQUFRRzthQUNqQixvQkFBSSxDQUFDRixNQUFNLGNBQVgsa0RBQWFDLGdCQUFnQjtRQUMvQjtJQUNGO0lBRU9FLE9BQU9uQixHQUFXLEVBQUU7WUFHekI7UUFGQSxJQUFJLENBQUNBLEdBQUcsR0FBR0E7UUFDWCxJQUFJLENBQUNILFNBQVM7U0FDZCxtQkFBSSxDQUFDbUIsTUFBTSxjQUFYLGdEQUFhQyxnQkFBZ0I7SUFDL0I7SUF6REFHLFlBQVlDLEtBQXlCLENBQUU7UUFDckMsS0FBSyxDQUFDQTtRQUNOLElBQUksQ0FBQ2hCLFFBQVEsR0FBR2dCLE1BQU1oQixRQUFRO1FBQzlCLElBQUksQ0FBQ1IsU0FBUztJQUNoQjtBQXNERjtBQWxFTVosTUFDR3FDLE9BQU87QUFtRWhCLCtEQUFlckMsS0FBS0EsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9mZWF0dXJlcy9lZGl0b3IvdGltZWxpbmUvaXRlbXMvaW1hZ2UudHM/ZDY4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIENvbnRyb2wsXHJcbiAgSW1hZ2UgYXMgSW1hZ2VCYXNlLFxyXG4gIEltYWdlUHJvcHMsXHJcbiAgUGF0dGVybixcclxuICB1dGlsLFxyXG59IGZyb20gXCJAZGVzaWduY29tYm8vdGltZWxpbmVcIjtcclxuaW1wb3J0IHsgY3JlYXRlUmVzaXplQ29udHJvbHMgfSBmcm9tIFwiLi4vY29udHJvbHNcIjtcclxuaW1wb3J0IHsgSU1ldGFkYXRhIH0gZnJvbSBcIkBkZXNpZ25jb21iby90eXBlc1wiO1xyXG5cclxuLy8gTW9kaWZpY2Ftb3MgbGEgaW50ZXJmYXogZGUgcHJvcHMgcGFyYSBpbmNsdWlyIG1ldGFkYXRhXHJcbmludGVyZmFjZSBFeHRlbmRlZEltYWdlUHJvcHMgZXh0ZW5kcyBJbWFnZVByb3BzIHtcclxuICBtZXRhZGF0YT86IFBhcnRpYWw8SU1ldGFkYXRhPjtcclxufVxyXG5cclxuY2xhc3MgSW1hZ2UgZXh0ZW5kcyBJbWFnZUJhc2Uge1xyXG4gIHN0YXRpYyB0eXBlID0gXCJJbWFnZVwiO1xyXG4gIHB1YmxpYyBtZXRhZGF0YT86IFBhcnRpYWw8SU1ldGFkYXRhPjtcclxuXHJcbiAgc3RhdGljIGNyZWF0ZUNvbnRyb2xzKCk6IHsgY29udHJvbHM6IFJlY29yZDxzdHJpbmcsIENvbnRyb2w+IH0ge1xyXG4gICAgcmV0dXJuIHsgY29udHJvbHM6IGNyZWF0ZVJlc2l6ZUNvbnRyb2xzKCkgfTtcclxuICB9XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByb3BzOiBFeHRlbmRlZEltYWdlUHJvcHMpIHtcclxuICAgIHN1cGVyKHByb3BzKTtcclxuICAgIHRoaXMubWV0YWRhdGEgPSBwcm9wcy5tZXRhZGF0YTtcclxuICAgIHRoaXMubG9hZEltYWdlKCk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgX3JlbmRlcihjdHg6IENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRCkge1xyXG4gICAgLy8gVmVyaWZpY2FyIHNpIGVzdGUgZWxlbWVudG8gZGViZSBvY3VsdGFyc2UgZW4gbGEgdGltZWxpbmVcclxuICAgIGlmICh0aGlzLmRldGFpbHM/LmhpZGVJblRpbWVsaW5lKSB7XHJcbiAgICAgIC8vIE5vIHJlbmRlcml6YXIgZWwgZWxlbWVudG8gZW4gbGEgdGltZWxpbmUsIHBlcm8gbWFudGVuZXJsbyBlbiBlbCBtb2RlbG9cclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFNpIG5vIGVzdMOhIG9jdWx0bywgcmVuZGVyaXphcmxvIG5vcm1hbG1lbnRlXHJcbiAgICBzdXBlci5fcmVuZGVyKGN0eCk7XHJcbiAgICB0aGlzLnVwZGF0ZVNlbGVjdGVkKGN0eCk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYXN5bmMgbG9hZEltYWdlKCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc29sZS5sb2coXCJbREVCVUcgSW1hZ2VdIENhcmdhbmRvIGltYWdlbjpcIiwgdGhpcy5zcmMuc3Vic3RyaW5nKDAsIDMwKSArIFwiLi4uXCIpO1xyXG5cclxuICAgICAgY29uc3QgaW1nID0gYXdhaXQgdXRpbC5sb2FkSW1hZ2UodGhpcy5zcmMpLmNhdGNoKGVycm9yID0+IHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKFwiW0VSUk9SIEltYWdlXSBFcnJvciBjYXJnYW5kbyBpbWFnZW4gcHJpbmNpcGFsOlwiLCBlcnJvcik7XHJcblxyXG4gICAgICAgIC8vIFNpIGhheSBtZXRhZGF0YSBjb24gcHJldmlld1VybCwgaW50ZW50YXIgdXNhciBlc2EgY29tbyBmYWxsYmFja1xyXG4gICAgICAgIGlmICh0aGlzLm1ldGFkYXRhPy5wcmV2aWV3VXJsKSB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIltERUJVRyBJbWFnZV0gSW50ZW50YW5kbyBjYXJnYXIgZGVzZGUgcHJldmlld1VybFwiKTtcclxuICAgICAgICAgIHJldHVybiB1dGlsLmxvYWRJbWFnZSh0aGlzLm1ldGFkYXRhLnByZXZpZXdVcmwpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBjb25zdCBpbWdIZWlnaHQgPSBpbWcuaGVpZ2h0O1xyXG4gICAgICBjb25zdCByZWN0SGVpZ2h0ID0gdGhpcy5oZWlnaHQ7XHJcbiAgICAgIGNvbnN0IHNjYWxlWSA9IHJlY3RIZWlnaHQgLyBpbWdIZWlnaHQ7XHJcbiAgICAgIGNvbnN0IHBhdHRlcm4gPSBuZXcgUGF0dGVybih7XHJcbiAgICAgICAgc291cmNlOiBpbWcsXHJcbiAgICAgICAgcmVwZWF0OiBcInJlcGVhdC14XCIsXHJcbiAgICAgICAgcGF0dGVyblRyYW5zZm9ybTogW3NjYWxlWSwgMCwgMCwgc2NhbGVZLCAwLCAwXSxcclxuICAgICAgfSk7XHJcbiAgICAgIHRoaXMuc2V0KFwiZmlsbFwiLCBwYXR0ZXJuKTtcclxuICAgICAgdGhpcy5jYW52YXM/LnJlcXVlc3RSZW5kZXJBbGwoKTtcclxuICAgICAgY29uc29sZS5sb2coXCJbREVCVUcgSW1hZ2VdIEltYWdlbiBjYXJnYWRhIGNvcnJlY3RhbWVudGVcIik7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKFwiW0VSUk9SIEltYWdlXSBObyBzZSBwdWRvIGNhcmdhciBsYSBpbWFnZW46XCIsIGVycm9yKTtcclxuICAgICAgLy8gU2kgZmFsbGEgdG9kbywgZXN0YWJsZWNlciB1biBwYXRyw7NuIGRlIGNvbG9yIGdyaXMgY29tbyBmYWxsYmFja1xyXG4gICAgICBjb25zdCBmaWxsQ29sb3IgPSBcIiM2NjY2NjZcIjtcclxuICAgICAgdGhpcy5zZXQoXCJmaWxsXCIsIGZpbGxDb2xvcik7XHJcbiAgICAgIHRoaXMuY2FudmFzPy5yZXF1ZXN0UmVuZGVyQWxsKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0U3JjKHNyYzogc3RyaW5nKSB7XHJcbiAgICB0aGlzLnNyYyA9IHNyYztcclxuICAgIHRoaXMubG9hZEltYWdlKCk7XHJcbiAgICB0aGlzLmNhbnZhcz8ucmVxdWVzdFJlbmRlckFsbCgpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgSW1hZ2U7XHJcbiJdLCJuYW1lcyI6WyJJbWFnZSIsIkltYWdlQmFzZSIsIlBhdHRlcm4iLCJ1dGlsIiwiY3JlYXRlUmVzaXplQ29udHJvbHMiLCJjcmVhdGVDb250cm9scyIsImNvbnRyb2xzIiwiX3JlbmRlciIsImN0eCIsImRldGFpbHMiLCJoaWRlSW5UaW1lbGluZSIsInVwZGF0ZVNlbGVjdGVkIiwibG9hZEltYWdlIiwiY29uc29sZSIsImxvZyIsInNyYyIsInN1YnN0cmluZyIsImltZyIsImNhdGNoIiwiZXJyb3IiLCJtZXRhZGF0YSIsInByZXZpZXdVcmwiLCJpbWdIZWlnaHQiLCJoZWlnaHQiLCJyZWN0SGVpZ2h0Iiwic2NhbGVZIiwicGF0dGVybiIsInNvdXJjZSIsInJlcGVhdCIsInBhdHRlcm5UcmFuc2Zvcm0iLCJzZXQiLCJjYW52YXMiLCJyZXF1ZXN0UmVuZGVyQWxsIiwiZmlsbENvbG9yIiwic2V0U3JjIiwiY29uc3RydWN0b3IiLCJwcm9wcyIsInR5cGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./features/editor/timeline/items/image.ts\n"));

/***/ })

});