"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./features/editor/timeline/selection-modal.tsx":
/*!******************************************************!*\
  !*** ./features/editor/timeline/selection-modal.tsx ***!
  \******************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _designcombo_events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @designcombo/events */ \"(app-pages-browser)/./node_modules/@designcombo/events/dist/index.es.js\");\n/* harmony import */ var _items_timeline__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./items/timeline */ \"(app-pages-browser)/./features/editor/timeline/items/timeline.ts\");\n/* harmony import */ var _services_ai_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/ai-service */ \"(app-pages-browser)/./features/editor/services/ai-service.ts\");\n/* harmony import */ var _services_command_executor_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../services/command-executor-service */ \"(app-pages-browser)/./features/editor/services/command-executor-service.ts\");\n/* harmony import */ var _designcombo_timeline__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @designcombo/timeline */ \"(app-pages-browser)/./node_modules/@designcombo/timeline/dist/index.es.js\");\n/* harmony import */ var _designcombo_state__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @designcombo/state */ \"(app-pages-browser)/./node_modules/@designcombo/state/dist/index.es.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n/**\n * Modal que se muestra cuando se seleccionan elementos por arrastre en la timeline\n * Proporciona una interfaz simple para enviar comandos mediante texto\n */ const SelectionModal = ()=>{\n    _s();\n    const [visible, setVisible] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [position, setPosition] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        x: 0,\n        y: 0\n    });\n    const [selectedItems, setSelectedItems] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isSending, setIsSending] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [lastActionInfo, setLastActionInfo] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [showActionInfo, setShowActionInfo] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [actionSuccess, setActionSuccess] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const modalRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const textareaRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Estado para el chat\n    const [chatMessages, setChatMessages] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [chatInput, setChatInput] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    // Estado para rastrear imágenes añadidas a la timeline\n    const [addedScreenshots, setAddedScreenshots] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // Estado para rastrear transiciones añadidas a la timeline\n    const [addedTransitions, setAddedTransitions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Suscribirse al evento de selección por arrastre\n        const selectionEvents = _designcombo_events__WEBPACK_IMPORTED_MODULE_2__.subject.pipe((0,_designcombo_events__WEBPACK_IMPORTED_MODULE_2__.filter)((param)=>{\n            let { key } = param;\n            return key === _items_timeline__WEBPACK_IMPORTED_MODULE_3__.TIMELINE_SELECTION_MODAL;\n        }));\n        const subscription = selectionEvents.subscribe((event)=>{\n            var _event_value;\n            const payload = (_event_value = event.value) === null || _event_value === void 0 ? void 0 : _event_value.payload;\n            console.log(\"Selection modal event received:\", payload);\n            if (payload && payload.selectedItems && payload.selectedItems.length > 0) {\n                setSelectedItems(payload.selectedItems);\n                // Ajustar la posición para que el modal sea visible\n                setPosition({\n                    x: Math.min(payload.position.x, window.innerWidth - 350),\n                    y: Math.min(payload.position.y, window.innerHeight - 350)\n                });\n                // Resetear estados\n                setChatMessages([]);\n                setChatInput(\"\");\n                setLastActionInfo(null);\n                setActionSuccess(null);\n                setVisible(true);\n                // Enfocar el textarea cuando el modal se abre\n                setTimeout(()=>{\n                    if (textareaRef.current) {\n                        textareaRef.current.focus();\n                    }\n                }, 100);\n            }\n        });\n        // Manejar clic fuera del modal para cerrarlo\n        const handleClickOutside = (event)=>{\n            if (modalRef.current && !modalRef.current.contains(event.target)) {\n                setVisible(false);\n            }\n        };\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return ()=>{\n            subscription.unsubscribe();\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, []);\n    const handleClose = ()=>{\n        setVisible(false);\n    };\n    // Función para agregar una transición al video\n    const applyTransition = async (transitionPath)=>{\n        try {\n            // Calcular tiempos para la transición\n            // Por defecto, usar la duración del elemento seleccionado\n            let startTime = 0;\n            let endTime = 5;\n            // Obtener el CommandExecutor\n            const commandExecutor = _services_command_executor_service__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getExecutor();\n            if (!commandExecutor) {\n                console.error(\"CommandExecutor no disponible\");\n                return {\n                    success: false,\n                    details: \"CommandExecutor no disponible\"\n                };\n            }\n            // Si hay elementos seleccionados, usar sus tiempos\n            if (selectedItems && selectedItems.length > 0) {\n                // Obtener el primer elemento seleccionado\n                const firstItem = selectedItems[0];\n                // Intentar obtener los tiempos del elemento\n                if (firstItem.display) {\n                    startTime = (firstItem.display.from || 0) / 1000; // convertir de ms a segundos\n                    endTime = (firstItem.display.to || startTime * 1000 + 5000) / 1000; // convertir de ms a segundos\n                }\n            }\n            // Determinar si estamos manejando un GIF o un video\n            const isGif = transitionPath.toLowerCase().endsWith(\".gif\");\n            if (isGif) {\n                try {\n                    // Para GIFs, vamos a crear un elemento de tipo \"imagen\" con una \"T\" encima\n                    // para indicar que es una transición\n                    const transitionId = (0,_designcombo_timeline__WEBPACK_IMPORTED_MODULE_6__.generateId)();\n                    // Crear payload para la imagen de transición\n                    const transitionPayload = {\n                        id: transitionId,\n                        display: {\n                            from: startTime * 1000,\n                            to: endTime * 1000 // Convertir a milisegundos\n                        },\n                        type: \"image\",\n                        details: {\n                            src: transitionPath,\n                            width: 150,\n                            height: 90,\n                            opacity: 100,\n                            scaleMode: \"fit\",\n                            left: 0.5,\n                            top: 0.5,\n                            originX: \"center\",\n                            originY: \"center\",\n                            // Usamos metadata para indicar que es una transición\n                            metadata: {\n                                isTransition: true,\n                                label: \"T\" // Para mostrar una \"T\" sobre la thumbnail\n                            }\n                        }\n                    };\n                    // Añadir el elemento a la timeline\n                    (0,_designcombo_events__WEBPACK_IMPORTED_MODULE_2__.dispatch)(_designcombo_state__WEBPACK_IMPORTED_MODULE_7__.ADD_IMAGE, {\n                        payload: transitionPayload,\n                        options: {\n                            scaleMode: \"fit\",\n                            position: {\n                                x: 0.5,\n                                y: 0.5\n                            },\n                            trackId: \"transitions\"\n                        }\n                    });\n                    // Después de añadir el elemento de transición, crear un elemento de texto con \"T\"\n                    // para identificarlo visualmente\n                    const textPayload = {\n                        id: (0,_designcombo_timeline__WEBPACK_IMPORTED_MODULE_6__.generateId)(),\n                        display: {\n                            from: startTime * 1000,\n                            to: endTime * 1000\n                        },\n                        type: \"text\",\n                        details: {\n                            text: \"T\",\n                            fontSize: 32,\n                            fontFamily: \"Arial\",\n                            color: \"#FFFFFF\",\n                            width: 150,\n                            height: 90,\n                            textAlign: \"center\",\n                            backgroundColor: \"rgba(156, 90, 250, 0.5)\",\n                            borderRadius: 4,\n                            left: 0.5,\n                            top: 0.5,\n                            originX: \"center\",\n                            originY: \"center\",\n                            // Establecemos una referencia al elemento de transición\n                            parentId: transitionId\n                        }\n                    };\n                    // Añadir la etiqueta \"T\" como un elemento separado que se mueve con la transición\n                    (0,_designcombo_events__WEBPACK_IMPORTED_MODULE_2__.dispatch)(_designcombo_state__WEBPACK_IMPORTED_MODULE_7__.ADD_TEXT, {\n                        payload: textPayload,\n                        options: {\n                            trackId: \"transitions\"\n                        }\n                    });\n                    console.log(\"Transici\\xf3n GIF a\\xf1adida como thumbnail en la timeline desde \".concat(startTime, \"s hasta \").concat(endTime, \"s\"));\n                } catch (error) {\n                    console.error(\"Error al aplicar transici\\xf3n GIF:\", error);\n                    throw error;\n                }\n            } else {\n                // Para videos (MP4, etc.), seguimos usando addVideo\n                await commandExecutor.addVideo(transitionPath, {\n                    startTime,\n                    endTime\n                });\n                console.log(\"Transici\\xf3n de video a\\xf1adida desde \".concat(startTime, \"s hasta \").concat(endTime, \"s\"));\n            }\n            // Registrar la transición añadida\n            setAddedTransitions((prev)=>[\n                    ...prev,\n                    transitionPath\n                ]);\n            return {\n                success: true,\n                details: \"Transici\\xf3n aplicada desde \".concat(startTime.toFixed(1), \"s hasta \").concat(endTime.toFixed(1), \"s\")\n            };\n        } catch (error) {\n            console.error(\"Error al a\\xf1adir transici\\xf3n:\", error);\n            return {\n                success: false,\n                details: \"Error al a\\xf1adir transici\\xf3n: \".concat(error instanceof Error ? error.message : String(error))\n            };\n        }\n    };\n    // Función para enviar un mensaje y procesarlo sin mostrar chat\n    const sendCommand = async ()=>{\n        if (!chatInput.trim()) return;\n        const userMessage = {\n            role: \"user\",\n            content: chatInput,\n            timestamp: new Date()\n        };\n        // Añadir el mensaje del usuario al chat interno (para lógica, no se muestra)\n        setChatMessages([\n            ...chatMessages,\n            userMessage\n        ]);\n        setChatInput(\"\");\n        setIsSending(true);\n        setLastActionInfo(null);\n        setShowActionInfo(false);\n        setActionSuccess(null);\n        try {\n            // Enviar el mensaje a la API\n            const response = await _services_ai_service__WEBPACK_IMPORTED_MODULE_4__[\"default\"].sendChatMessage({\n                message: chatInput,\n                selectedItems: selectedItems\n            });\n            if (response.success && response.response) {\n                var _response_applyTransitionDetection, _response_urlAnalysis;\n                let actionSuccessful = true; // Por defecto asumimos éxito\n                let operationDetails = \"\";\n                let screenshotToAdd = null;\n                let detectionInfo = null;\n                let startTime = 0;\n                let endTime = 5;\n                let actionDetected = false;\n                // Verificar si debemos aplicar una transición\n                if (((_response_applyTransitionDetection = response.applyTransitionDetection) === null || _response_applyTransitionDetection === void 0 ? void 0 : _response_applyTransitionDetection.detected) && response.applyTransitionDetection.confidence > 0.2 && response.applyTransitionDetection.transitionPath) {\n                    actionDetected = true;\n                    // Aplicar la transición\n                    const transitionResult = await applyTransition(response.applyTransitionDetection.transitionPath);\n                    actionSuccessful = transitionResult.success;\n                    operationDetails = transitionResult.details;\n                    // Detalles de la detección para referenciar\n                    detectionInfo = {\n                        detected: response.applyTransitionDetection.detected,\n                        confidence: response.applyTransitionDetection.confidence,\n                        reason: response.applyTransitionDetection.reason\n                    };\n                } else if (response.showScreenshotDetection && ((_response_urlAnalysis = response.urlAnalysis) === null || _response_urlAnalysis === void 0 ? void 0 : _response_urlAnalysis.containsURLs) && response.urlAnalysis.screenshots && response.urlAnalysis.screenshots.length > 0) {\n                    // Comprobar si la detección es positiva con confianza suficiente\n                    if (response.showScreenshotDetection.detected && response.showScreenshotDetection.confidence > 0.2) {\n                        actionDetected = true;\n                        // Seleccionar la primera captura disponible\n                        const firstScreenshot = response.urlAnalysis.screenshots[0];\n                        screenshotToAdd = firstScreenshot;\n                        // Guardar información de detección\n                        detectionInfo = {\n                            detected: response.showScreenshotDetection.detected,\n                            confidence: response.showScreenshotDetection.confidence,\n                            reason: response.showScreenshotDetection.reason\n                        };\n                        // Calcular tiempos para la imagen\n                        // Por defecto, usar la duración del elemento seleccionado\n                        startTime = 0;\n                        endTime = 5;\n                        // Añadir la captura a la timeline utilizando el CommandExecutorService\n                        const commandExecutor = _services_command_executor_service__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getExecutor();\n                        if (commandExecutor) {\n                            try {\n                                // Si hay elementos seleccionados, usar sus tiempos\n                                if (selectedItems && selectedItems.length > 0) {\n                                    // Obtener el primer elemento seleccionado\n                                    const firstItem = selectedItems[0];\n                                    // Intentar obtener los tiempos del elemento\n                                    if (firstItem.display) {\n                                        startTime = (firstItem.display.from || 0) / 1000; // convertir de ms a segundos\n                                        endTime = (firstItem.display.to || startTime * 1000 + 5000) / 1000; // convertir de ms a segundos\n                                    }\n                                }\n                                // Añadir la imagen a la timeline\n                                await commandExecutor.addImage(firstScreenshot.screenshotPath, {\n                                    startTime,\n                                    endTime\n                                });\n                                // Registrar la captura añadida\n                                setAddedScreenshots((prev)=>[\n                                        ...prev,\n                                        firstScreenshot\n                                    ]);\n                                // Detalles de la operación\n                                operationDetails = \"Captura aplicada a la timeline desde \".concat(startTime.toFixed(1), \"s hasta \").concat(endTime.toFixed(1), \"s\");\n                                console.log(\"Imagen a\\xf1adida a la timeline desde \".concat(startTime, \"s hasta \").concat(endTime, \"s: \").concat(firstScreenshot.screenshotPath));\n                            } catch (error) {\n                                console.error(\"Error al a\\xf1adir imagen a la timeline:\", error);\n                                actionSuccessful = false;\n                                operationDetails = \"Error al a\\xf1adir imagen: \".concat(error instanceof Error ? error.message : String(error));\n                            }\n                        } else {\n                            console.error(\"CommandExecutor no disponible\");\n                            actionSuccessful = false;\n                            operationDetails = \"CommandExecutor no disponible\";\n                        }\n                    }\n                }\n                // Establecer estado final según el resultado\n                setActionSuccess(actionSuccessful);\n                // Componer el mensaje informativo\n                let actionMessage;\n                if (actionDetected) {\n                    // Si se detectó una acción específica (como agregar captura o transición)\n                    actionMessage = actionSuccessful ? screenshotToAdd ? \"✨ \".concat(operationDetails || \"Captura aplicada correctamente\") : \"✨ \".concat(operationDetails || \"Transici\\xf3n aplicada correctamente\") : \"❌ Error: \".concat(operationDetails || \"No se pudo completar la operaci\\xf3n.\");\n                } else {\n                    // Si no se detectó ninguna acción específica, mostrar un mensaje predeterminado\n                    actionMessage = \"ℹ️ Esta \\xe1rea es para ejecutar acciones espec\\xedficas en la timeline. Si deseas conversar, por favor utiliza el chat.\";\n                    setActionSuccess(null); // Neutro, ni éxito ni error\n                }\n                setLastActionInfo(actionMessage);\n                setShowActionInfo(true);\n                // Añadir la respuesta del asistente al chat interno (no se muestra)\n                const assistantMessage = {\n                    role: \"assistant\",\n                    content: response.response + (actionDetected && actionSuccessful ? screenshotToAdd ? \"\\n\\n✅ **Captura de pantalla aplicada a la timeline**\\n- URL: \".concat(screenshotToAdd.url, \"\\n- Tiempo: desde \").concat(startTime, \"s hasta \").concat(endTime, \"s\\n- Confianza: \").concat(Math.round((detectionInfo === null || detectionInfo === void 0 ? void 0 : detectionInfo.confidence) * 100), \"%\") : \"\\n\\n✅ **Transici\\xf3n aplicada a la timeline**\\n- Tiempo: desde \".concat(startTime, \"s hasta \").concat(endTime, \"s\\n- Confianza: \").concat(Math.round((detectionInfo === null || detectionInfo === void 0 ? void 0 : detectionInfo.confidence) * 100), \"%\") : \"\"),\n                    timestamp: new Date(),\n                    detectionInfo: detectionInfo\n                };\n                setChatMessages((prevMessages)=>[\n                        ...prevMessages,\n                        assistantMessage\n                    ]);\n                // Ocultar la información de acción después de 4 segundos\n                setTimeout(()=>{\n                    setShowActionInfo(false);\n                }, 4000);\n            } else {\n                // Mostrar mensaje de error brevemente\n                setActionSuccess(false);\n                setLastActionInfo(\"❌ Error: \".concat(response.error || \"No se pudo procesar tu mensaje.\"));\n                setShowActionInfo(true);\n                setTimeout(()=>{\n                    setShowActionInfo(false);\n                }, 3000);\n            }\n        } catch (error) {\n            console.error(\"Error al enviar mensaje:\", error);\n            // Mostrar mensaje de error brevemente\n            setActionSuccess(false);\n            setLastActionInfo(\"❌ Error: \".concat(error instanceof Error ? error.message : \"Error de comunicaci\\xf3n con el servicio de IA.\"));\n            setShowActionInfo(true);\n            setTimeout(()=>{\n                setShowActionInfo(false);\n            }, 3000);\n        } finally{\n            setIsSending(false);\n        }\n    };\n    // Función para manejar el envío del mensaje con Enter\n    const handleKeyPress = (e)=>{\n        if (e.key === \"Enter\" && !e.shiftKey) {\n            e.preventDefault();\n            sendCommand();\n        }\n    };\n    if (!visible) return null;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: modalRef,\n        style: {\n            position: \"fixed\",\n            left: position.x,\n            top: position.y,\n            zIndex: 9999,\n            background: \"linear-gradient(135deg, rgba(35, 20, 60, 0.95) 0%, rgba(45, 25, 85, 0.95) 100%)\",\n            borderRadius: \"12px\",\n            boxShadow: \"0 8px 32px rgba(0, 0, 0, 0.6), 0 0 0 1px rgba(156, 90, 250, 0.3)\",\n            padding: \"20px\",\n            width: \"380px\",\n            color: \"white\",\n            fontFamily: \"Inter, system-ui, sans-serif\",\n            border: \"1px solid rgba(156, 90, 250, 0.6)\",\n            backdropFilter: \"blur(10px)\",\n            animation: \"fadeIn 0.3s ease\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"style\", {\n                children: \"\\n          @keyframes fadeIn {\\n            from { opacity: 0; transform: scale(0.95); }\\n            to { opacity: 1; transform: scale(1); }\\n          }\\n          @keyframes pulse {\\n            0% { box-shadow: 0 0 0 0 rgba(156, 90, 250, 0.5); }\\n            70% { box-shadow: 0 0 0 10px rgba(156, 90, 250, 0); }\\n            100% { box-shadow: 0 0 0 0 rgba(156, 90, 250, 0); }\\n          }\\n          @keyframes glow {\\n            0% { border-color: rgba(156, 90, 250, 0.6); }\\n            50% { border-color: rgba(156, 90, 250, 0.9); }\\n            100% { border-color: rgba(156, 90, 250, 0.6); }\\n          }\\n          @keyframes spin {\\n            0% { transform: rotate(0deg); }\\n            100% { transform: rotate(360deg); }\\n          }\\n        \"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                lineNumber: 489,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    marginBottom: \"16px\",\n                    borderBottom: \"1px solid rgba(156, 90, 250, 0.4)\",\n                    paddingBottom: \"12px\",\n                    position: \"relative\"\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            position: \"absolute\",\n                            bottom: \"-1px\",\n                            left: \"0\",\n                            width: \"60%\",\n                            height: \"1px\",\n                            background: \"linear-gradient(90deg, rgba(156, 90, 250, 0.8) 0%, rgba(156, 90, 250, 0) 100%)\",\n                            animation: \"glow 1.5s infinite alternate\"\n                        }\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                        lineNumber: 521,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                        style: {\n                            margin: 0,\n                            fontSize: \"18px\",\n                            fontWeight: \"600\",\n                            color: \"rgba(156, 90, 250, 1.0)\",\n                            textShadow: \"0 2px 4px rgba(0,0,0,0.3)\"\n                        },\n                        children: selectedItems.length > 1 ? \"\".concat(selectedItems.length, \" elementos seleccionados\") : \"Elemento seleccionado\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                        lineNumber: 531,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            display: \"flex\",\n                            gap: \"8px\"\n                        },\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: handleClose,\n                            style: {\n                                background: \"rgba(156, 90, 250, 0.2)\",\n                                border: \"none\",\n                                borderRadius: \"50%\",\n                                color: \"rgba(255, 255, 255, 0.9)\",\n                                cursor: \"pointer\",\n                                fontSize: \"16px\",\n                                padding: \"5px\",\n                                width: \"24px\",\n                                height: \"24px\",\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                lineHeight: \"1\",\n                                transition: \"all 0.2s ease\"\n                            },\n                            onMouseOver: (e)=>{\n                                e.currentTarget.style.background = \"rgba(156, 90, 250, 0.4)\";\n                                e.currentTarget.style.transform = \"scale(1.1)\";\n                            },\n                            onMouseOut: (e)=>{\n                                e.currentTarget.style.background = \"rgba(156, 90, 250, 0.2)\";\n                                e.currentTarget.style.transform = \"scale(1)\";\n                            },\n                            children: \"\\xd7\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                            lineNumber: 541,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                        lineNumber: 540,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                lineNumber: 512,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    marginTop: \"12px\",\n                    marginBottom: \"16px\"\n                },\n                children: [\n                    showActionInfo && lastActionInfo && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            padding: \"12px\",\n                            marginBottom: \"16px\",\n                            background: actionSuccess === false ? \"linear-gradient(to right, rgba(220, 50, 50, 0.15), rgba(220, 50, 50, 0.05))\" : actionSuccess === true ? \"linear-gradient(to right, rgba(70, 200, 120, 0.15), rgba(70, 200, 120, 0.05))\" : \"linear-gradient(to right, rgba(156, 90, 250, 0.15), rgba(156, 90, 250, 0.05))\",\n                            borderRadius: \"8px\",\n                            fontSize: \"14px\",\n                            border: \"1px solid \".concat(actionSuccess === false ? \"rgba(220, 50, 50, 0.3)\" : actionSuccess === true ? \"rgba(70, 200, 120, 0.3)\" : \"rgba(156, 90, 250, 0.3)\"),\n                            boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.1)\",\n                            transition: \"all 0.3s ease\",\n                            animation: actionSuccess ? \"pulse 2s infinite\" : \"\",\n                            color: actionSuccess === false ? \"rgba(255, 220, 220, 0.9)\" : actionSuccess === true ? \"rgba(220, 255, 230, 0.9)\" : \"rgba(240, 230, 255, 0.9)\"\n                        },\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                display: \"flex\",\n                                alignItems: \"flex-start\",\n                                gap: \"8px\"\n                            },\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    style: {\n                                        flexShrink: 0,\n                                        marginTop: \"2px\"\n                                    },\n                                    children: actionSuccess === false ? \"❌\" : actionSuccess === true ? \"✨\" : \"ℹ️\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                                    lineNumber: 605,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: lastActionInfo\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                                    lineNumber: 615,\n                                    columnNumber: 15\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                            lineNumber: 600,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                        lineNumber: 576,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            gap: \"12px\",\n                            borderTop: \"1px solid rgba(156, 90, 250, 0.2)\",\n                            paddingTop: \"16px\",\n                            position: \"relative\"\n                        },\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n                                ref: textareaRef,\n                                value: chatInput,\n                                onChange: (e)=>setChatInput(e.target.value),\n                                onKeyDown: handleKeyPress,\n                                disabled: isSending,\n                                placeholder: \"Escribe un comando... (ej: 'aplica captura a la timeline' o 'a\\xf1ade transici\\xf3n')\",\n                                style: {\n                                    width: \"100%\",\n                                    height: \"80px\",\n                                    background: \"rgba(30, 15, 50, 0.5)\",\n                                    border: \"1px solid rgba(156, 90, 250, 0.4)\",\n                                    borderRadius: \"8px\",\n                                    padding: \"12px 14px\",\n                                    color: \"white\",\n                                    fontSize: \"14px\",\n                                    outline: \"none\",\n                                    resize: \"none\",\n                                    transition: \"border-color 0.3s ease, box-shadow 0.3s ease\",\n                                    boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.2) inset\",\n                                    fontFamily: \"Inter, system-ui, sans-serif\",\n                                    lineHeight: \"1.5\"\n                                },\n                                onFocus: (e)=>{\n                                    e.target.style.borderColor = \"rgba(156, 90, 250, 0.8)\";\n                                    e.target.style.boxShadow = \"0 2px 8px rgba(0, 0, 0, 0.2) inset, 0 0 0 2px rgba(156, 90, 250, 0.1)\";\n                                },\n                                onBlur: (e)=>{\n                                    e.target.style.borderColor = \"rgba(156, 90, 250, 0.4)\";\n                                    e.target.style.boxShadow = \"0 2px 8px rgba(0, 0, 0, 0.2) inset\";\n                                }\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                                lineNumber: 628,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: sendCommand,\n                                disabled: isSending || !chatInput.trim(),\n                                style: {\n                                    background: isSending || !chatInput.trim() ? \"rgba(156, 90, 250, 0.3)\" : \"linear-gradient(135deg, rgba(156, 90, 250, 0.8) 0%, rgba(120, 60, 220, 0.9) 100%)\",\n                                    border: \"none\",\n                                    borderRadius: \"8px\",\n                                    color: \"white\",\n                                    cursor: isSending || !chatInput.trim() ? \"not-allowed\" : \"pointer\",\n                                    padding: \"12px 16px\",\n                                    fontSize: \"14px\",\n                                    fontWeight: \"500\",\n                                    transition: \"all 0.2s ease\",\n                                    boxShadow: isSending || !chatInput.trim() ? \"none\" : \"0 4px 12px rgba(156, 90, 250, 0.3)\",\n                                    textShadow: \"0 1px 2px rgba(0,0,0,0.2)\"\n                                },\n                                onMouseOver: (e)=>{\n                                    if (!isSending && chatInput.trim()) {\n                                        e.currentTarget.style.transform = \"translateY(-2px)\";\n                                        e.currentTarget.style.boxShadow = \"0 6px 16px rgba(156, 90, 250, 0.4)\";\n                                    }\n                                },\n                                onMouseOut: (e)=>{\n                                    if (!isSending && chatInput.trim()) {\n                                        e.currentTarget.style.transform = \"translateY(0)\";\n                                        e.currentTarget.style.boxShadow = \"0 4px 12px rgba(156, 90, 250, 0.3)\";\n                                    }\n                                },\n                                children: isSending ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    style: {\n                                        display: \"flex\",\n                                        alignItems: \"center\",\n                                        justifyContent: \"center\",\n                                        gap: \"8px\"\n                                    },\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            style: {\n                                                width: \"14px\",\n                                                height: \"14px\",\n                                                borderRadius: \"50%\",\n                                                border: \"2px solid rgba(255,255,255,0.3)\",\n                                                borderTopColor: \"white\",\n                                                animation: \"spin 1s linear infinite\"\n                                            }\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                                            lineNumber: 695,\n                                            columnNumber: 17\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            children: \"Procesando...\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                                            lineNumber: 703,\n                                            columnNumber: 17\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                                    lineNumber: 694,\n                                    columnNumber: 15\n                                }, undefined) : \"Ejecutar\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                                lineNumber: 660,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                        lineNumber: 620,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                lineNumber: 574,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n        lineNumber: 470,\n        columnNumber: 5\n    }, undefined);\n};\n_s(SelectionModal, \"oQ1cOUXGdA9wm6cej/uyO/5xVYM=\");\n_c = SelectionModal;\n/* harmony default export */ __webpack_exports__[\"default\"] = (SelectionModal);\nvar _c;\n$RefreshReg$(_c, \"SelectionModal\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./features/editor/timeline/selection-modal.tsx\n"));

/***/ })

});