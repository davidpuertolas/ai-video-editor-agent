"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./features/editor/hooks/use-pointer-drag.tsx":
/*!****************************************************!*\
  !*** ./features/editor/hooks/use-pointer-drag.tsx ***!
  \****************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   usePointerDrag: function() { return /* binding */ usePointerDrag; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _s = $RefreshSig$();\n\nfunction usePointerDrag(options) {\n    _s();\n    const [dragState, setDragState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(undefined);\n    const [isDragging, setIsDragging] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [isStarted, setIsStarted] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const infoRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n        x: 0,\n        y: 0,\n        startedAt: 0,\n        dragging: false\n    });\n    const optionsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(options);\n    const dragStateRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(dragState);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        optionsRef.current = options;\n    }, [\n        options\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        dragStateRef.current = dragState;\n    }, [\n        dragState\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!isStarted) {\n            return;\n        }\n        const { stopPropagation = true, preventDefault = true, onClick, onStart, onMove, onEnd, dragPredicate } = optionsRef.current;\n        const getData = (e)=>{\n            const { x: startX, y: startY, startedAt, initialEvent } = infoRef.current;\n            const deltaX = e.clientX - startX;\n            const deltaY = e.clientY - startY;\n            console.log(\"usePointerDrag - getData:\", {\n                x: e.clientX,\n                y: e.clientY,\n                deltaX,\n                deltaY,\n                startX,\n                startY\n            });\n            return {\n                x: e.clientX,\n                y: e.clientY,\n                state: dragStateRef.current,\n                setState: setDragState,\n                deltaX,\n                deltaY,\n                startX,\n                startY,\n                startedAt,\n                initialEvent,\n                distance: Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2)),\n                event: e\n            };\n        };\n        const handleEvent = (e)=>{\n            if (preventDefault) e.preventDefault();\n            if (stopPropagation) e.stopPropagation();\n        };\n        const handleMove = (e)=>{\n            const data = getData(e);\n            if (!infoRef.current.dragging) {\n                if (!dragPredicate || dragPredicate(data)) {\n                    console.log(\"usePointerDrag - Drag started:\", data);\n                    handleEvent(e);\n                    infoRef.current.dragging = true;\n                    onStart === null || onStart === void 0 ? void 0 : onStart(data);\n                }\n            } else {\n                console.log(\"usePointerDrag - Dragging:\", {\n                    x: data.x,\n                    y: data.y,\n                    deltaX: data.deltaX,\n                    deltaY: data.deltaY\n                });\n                handleEvent(e);\n                onMove === null || onMove === void 0 ? void 0 : onMove(data);\n            }\n        };\n        const handleUp = (e)=>{\n            const data = getData(e);\n            if (infoRef.current.dragging) {\n                console.log(\"usePointerDrag - Drag ended:\", data);\n                handleEvent(e);\n                onEnd === null || onEnd === void 0 ? void 0 : onEnd(data);\n            } else {\n                console.log(\"usePointerDrag - Click (no drag):\", data);\n                onClick === null || onClick === void 0 ? void 0 : onClick(data);\n            }\n            infoRef.current.dragging = false;\n            setDragState(undefined);\n            setIsDragging(false);\n            setIsStarted(false);\n        };\n        document.addEventListener(\"pointermove\", handleMove);\n        document.addEventListener(\"pointerup\", handleUp);\n        return ()=>{\n            document.removeEventListener(\"pointermove\", handleMove);\n            document.removeEventListener(\"pointerup\", handleUp);\n        };\n    }, [\n        isStarted\n    ]);\n    const startDragging = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((state)=>{\n        setDragState(state);\n        setIsStarted(true);\n        setIsDragging(true);\n        infoRef.current.dragging = true;\n    }, [\n        setDragState,\n        setIsStarted,\n        setIsDragging\n    ]);\n    const dragProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((state)=>{\n        return {\n            onPointerDown: (e)=>{\n                var _optionsRef_current_onBeforeStart, _optionsRef_current;\n                setDragState(state);\n                setIsStarted(true);\n                setIsDragging(true);\n                const now = Date.now();\n                infoRef.current = {\n                    x: e.clientX,\n                    y: e.clientY,\n                    startedAt: now,\n                    dragging: false,\n                    initialEvent: e.nativeEvent\n                };\n                if (optionsRef.current.pointerDownPreventDefault) {\n                    e.preventDefault();\n                }\n                if (optionsRef.current.pointerDownStopPropagation) {\n                    e.stopPropagation();\n                }\n                (_optionsRef_current_onBeforeStart = (_optionsRef_current = optionsRef.current).onBeforeStart) === null || _optionsRef_current_onBeforeStart === void 0 ? void 0 : _optionsRef_current_onBeforeStart.call(_optionsRef_current, {\n                    x: e.clientX,\n                    y: e.clientY,\n                    state: state,\n                    setState: setDragState,\n                    deltaX: 0,\n                    deltaY: 0,\n                    startX: e.clientX,\n                    startY: e.clientY,\n                    startedAt: now,\n                    initialEvent: e.nativeEvent,\n                    distance: 0,\n                    event: e.nativeEvent\n                });\n            }\n        };\n    }, [\n        setDragState,\n        setIsStarted\n    ]);\n    return {\n        startDragging,\n        dragState,\n        isDragging,\n        dragProps\n    };\n}\n_s(usePointerDrag, \"VCy0KyrP1/+FTiojBSvYXs9Uxts=\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./features/editor/hooks/use-pointer-drag.tsx\n"));

/***/ })

});