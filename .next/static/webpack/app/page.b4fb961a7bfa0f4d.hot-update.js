"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./features/editor/timeline/selection-modal.tsx":
/*!******************************************************!*\
  !*** ./features/editor/timeline/selection-modal.tsx ***!
  \******************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _designcombo_events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @designcombo/events */ \"(app-pages-browser)/./node_modules/@designcombo/events/dist/index.es.js\");\n/* harmony import */ var _items_timeline__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./items/timeline */ \"(app-pages-browser)/./features/editor/timeline/items/timeline.ts\");\n/* harmony import */ var _services_ai_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/ai-service */ \"(app-pages-browser)/./features/editor/services/ai-service.ts\");\n/* harmony import */ var _services_command_executor_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../services/command-executor-service */ \"(app-pages-browser)/./features/editor/services/command-executor-service.ts\");\n/* harmony import */ var _designcombo_timeline__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @designcombo/timeline */ \"(app-pages-browser)/./node_modules/@designcombo/timeline/dist/index.es.js\");\n/* harmony import */ var _designcombo_state__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @designcombo/state */ \"(app-pages-browser)/./node_modules/@designcombo/state/dist/index.es.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n/**\n * Modal que se muestra cuando se seleccionan elementos por arrastre en la timeline\n * Proporciona una interfaz simple para enviar comandos mediante texto\n */ const SelectionModal = ()=>{\n    _s();\n    const [visible, setVisible] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [position, setPosition] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        x: 0,\n        y: 0\n    });\n    const [selectedItems, setSelectedItems] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isSending, setIsSending] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [lastActionInfo, setLastActionInfo] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [showActionInfo, setShowActionInfo] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [actionSuccess, setActionSuccess] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const modalRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const textareaRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Estado para el chat\n    const [chatMessages, setChatMessages] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [chatInput, setChatInput] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    // Estado para rastrear imágenes añadidas a la timeline\n    const [addedScreenshots, setAddedScreenshots] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // Estado para rastrear transiciones añadidas a la timeline\n    const [addedTransitions, setAddedTransitions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Suscribirse al evento de selección por arrastre\n        const selectionEvents = _designcombo_events__WEBPACK_IMPORTED_MODULE_2__.subject.pipe((0,_designcombo_events__WEBPACK_IMPORTED_MODULE_2__.filter)((param)=>{\n            let { key } = param;\n            return key === _items_timeline__WEBPACK_IMPORTED_MODULE_3__.TIMELINE_SELECTION_MODAL;\n        }));\n        const subscription = selectionEvents.subscribe((event)=>{\n            var _event_value;\n            const payload = (_event_value = event.value) === null || _event_value === void 0 ? void 0 : _event_value.payload;\n            console.log(\"Selection modal event received:\", payload);\n            if (payload && payload.selectedItems && payload.selectedItems.length > 0) {\n                setSelectedItems(payload.selectedItems);\n                // Ajustar la posición para que el modal sea visible\n                setPosition({\n                    x: Math.min(payload.position.x, window.innerWidth - 350),\n                    y: Math.min(payload.position.y, window.innerHeight - 350)\n                });\n                // Resetear estados\n                setChatMessages([]);\n                setChatInput(\"\");\n                setLastActionInfo(null);\n                setActionSuccess(null);\n                setVisible(true);\n                // Enfocar el textarea cuando el modal se abre\n                setTimeout(()=>{\n                    if (textareaRef.current) {\n                        textareaRef.current.focus();\n                    }\n                }, 100);\n            }\n        });\n        // Manejar clic fuera del modal para cerrarlo\n        const handleClickOutside = (event)=>{\n            if (modalRef.current && !modalRef.current.contains(event.target)) {\n                setVisible(false);\n            }\n        };\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return ()=>{\n            subscription.unsubscribe();\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, []);\n    const handleClose = ()=>{\n        setVisible(false);\n    };\n    // Función para agregar una transición al video\n    const applyTransition = async (transitionPath)=>{\n        try {\n            // Calcular tiempos para la transición\n            // Por defecto, usar la duración del elemento seleccionado\n            let startTime = 0;\n            let endTime = 5;\n            // Si hay elementos seleccionados, usar sus tiempos\n            if (selectedItems && selectedItems.length > 0) {\n                // Obtener el primer elemento seleccionado\n                const firstItem = selectedItems[0];\n                // Intentar obtener los tiempos del elemento\n                if (firstItem.display) {\n                    startTime = (firstItem.display.from || 0) / 1000; // convertir de ms a segundos\n                    endTime = (firstItem.display.to || startTime * 1000 + 5000) / 1000; // convertir de ms a segundos\n                }\n            }\n            // Determinar si estamos manejando un GIF o un video\n            const isGif = transitionPath.toLowerCase().endsWith(\".gif\");\n            if (isGif) {\n                try {\n                    // Para GIFs, crear dos elementos:\n                    // 1. Un elemento principal con la transición a tamaño completo (no visible en timeline)\n                    // 2. Una miniatura con etiqueta \"T\" para mostrar en la timeline\n                    // 1. Enviar el GIF principal a tamaño completo (cubre todo el canvas)\n                    const mainTransitionId = (0,_designcombo_timeline__WEBPACK_IMPORTED_MODULE_6__.generateId)();\n                    // Crear el payload para la transición a pantalla completa\n                    const mainTransitionPayload = {\n                        id: mainTransitionId,\n                        display: {\n                            from: startTime * 1000,\n                            to: endTime * 1000 // Convertir a milisegundos\n                        },\n                        type: \"image\",\n                        details: {\n                            src: transitionPath,\n                            width: 1920,\n                            height: 1080,\n                            opacity: 100,\n                            scaleMode: \"cover\",\n                            left: 0.5,\n                            top: 0.5,\n                            originX: \"center\",\n                            originY: \"center\",\n                            metadata: {\n                                isTransition: true,\n                                fullScreen: true\n                            }\n                        }\n                    };\n                    // Añadir el elemento GIF principal al timeline con dispatch directo\n                    (0,_designcombo_events__WEBPACK_IMPORTED_MODULE_2__.dispatch)(_designcombo_state__WEBPACK_IMPORTED_MODULE_7__.ADD_IMAGE, {\n                        payload: mainTransitionPayload,\n                        options: {\n                            scaleMode: \"cover\",\n                            position: {\n                                x: 0.5,\n                                y: 0.5\n                            },\n                            trackId: \"transitions\"\n                        }\n                    });\n                    // 2. Crear un elemento de miniatura para mostrar en la timeline\n                    const thumbnailId = (0,_designcombo_timeline__WEBPACK_IMPORTED_MODULE_6__.generateId)();\n                    const thumbnailPayload = {\n                        id: thumbnailId,\n                        display: {\n                            from: startTime * 1000,\n                            to: endTime * 1000\n                        },\n                        type: \"image\",\n                        details: {\n                            src: transitionPath,\n                            width: 150,\n                            height: 90,\n                            opacity: 100,\n                            scaleMode: \"fit\",\n                            left: 0.5,\n                            top: 0.5,\n                            originX: \"center\",\n                            originY: \"center\",\n                            metadata: {\n                                isThumbnail: true,\n                                relatedToId: mainTransitionId,\n                                isTransition: true\n                            }\n                        }\n                    };\n                    // Añadir la miniatura a la timeline\n                    (0,_designcombo_events__WEBPACK_IMPORTED_MODULE_2__.dispatch)(_designcombo_state__WEBPACK_IMPORTED_MODULE_7__.ADD_IMAGE, {\n                        payload: thumbnailPayload,\n                        options: {\n                            position: {\n                                x: 0.5,\n                                y: 0.5\n                            },\n                            trackId: \"transitions\"\n                        }\n                    });\n                    // Añadir la etiqueta \"T\" sobre la miniatura\n                    const textId = (0,_designcombo_timeline__WEBPACK_IMPORTED_MODULE_6__.generateId)();\n                    const textPayload = {\n                        id: textId,\n                        display: {\n                            from: startTime * 1000,\n                            to: endTime * 1000\n                        },\n                        type: \"text\",\n                        details: {\n                            text: \"T\",\n                            fontSize: 32,\n                            fontFamily: \"Arial\",\n                            fontWeight: \"bold\",\n                            color: \"#FFFFFF\",\n                            width: 150,\n                            height: 90,\n                            textAlign: \"center\",\n                            backgroundColor: \"rgba(156, 90, 250, 0.5)\",\n                            borderRadius: 4,\n                            left: 0.5,\n                            top: 0.5,\n                            originX: \"center\",\n                            originY: \"center\",\n                            metadata: {\n                                isTransitionLabel: true,\n                                relatedToId: thumbnailId\n                            }\n                        }\n                    };\n                    // Añadir la etiqueta \"T\" al timeline\n                    (0,_designcombo_events__WEBPACK_IMPORTED_MODULE_2__.dispatch)(_designcombo_state__WEBPACK_IMPORTED_MODULE_7__.ADD_TEXT, {\n                        payload: textPayload,\n                        options: {\n                            trackId: \"transitions\"\n                        }\n                    });\n                    console.log(\"Transici\\xf3n GIF a\\xf1adida a pantalla completa y como thumbnail desde \".concat(startTime, \"s hasta \").concat(endTime, \"s\"));\n                } catch (error) {\n                    console.error(\"Error al aplicar transici\\xf3n GIF:\", error);\n                    throw error;\n                }\n            } else {\n                // Para videos (MP4, etc.), seguimos usando addVideo\n                const commandExecutor = _services_command_executor_service__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getExecutor();\n                if (!commandExecutor) {\n                    console.error(\"CommandExecutor no disponible\");\n                    return {\n                        success: false,\n                        details: \"CommandExecutor no disponible\"\n                    };\n                }\n                await commandExecutor.addVideo(transitionPath, {\n                    startTime,\n                    endTime\n                });\n                console.log(\"Transici\\xf3n de video a\\xf1adida desde \".concat(startTime, \"s hasta \").concat(endTime, \"s\"));\n            }\n            // Registrar la transición añadida\n            setAddedTransitions((prev)=>[\n                    ...prev,\n                    transitionPath\n                ]);\n            return {\n                success: true,\n                details: \"Transici\\xf3n aplicada desde \".concat(startTime.toFixed(1), \"s hasta \").concat(endTime.toFixed(1), \"s\")\n            };\n        } catch (error) {\n            console.error(\"Error al a\\xf1adir transici\\xf3n:\", error);\n            return {\n                success: false,\n                details: \"Error al a\\xf1adir transici\\xf3n: \".concat(error instanceof Error ? error.message : String(error))\n            };\n        }\n    };\n    // Función para enviar un mensaje y procesarlo sin mostrar chat\n    const sendCommand = async ()=>{\n        if (!chatInput.trim()) return;\n        const userMessage = {\n            role: \"user\",\n            content: chatInput,\n            timestamp: new Date()\n        };\n        // Añadir el mensaje del usuario al chat interno (para lógica, no se muestra)\n        setChatMessages([\n            ...chatMessages,\n            userMessage\n        ]);\n        setChatInput(\"\");\n        setIsSending(true);\n        setLastActionInfo(null);\n        setShowActionInfo(false);\n        setActionSuccess(null);\n        try {\n            // Enviar el mensaje a la API\n            const response = await _services_ai_service__WEBPACK_IMPORTED_MODULE_4__[\"default\"].sendChatMessage({\n                message: chatInput,\n                selectedItems: selectedItems\n            });\n            if (response.success && response.response) {\n                var _response_applyTransitionDetection, _response_urlAnalysis;\n                let actionSuccessful = true; // Por defecto asumimos éxito\n                let operationDetails = \"\";\n                let screenshotToAdd = null;\n                let detectionInfo = null;\n                let startTime = 0;\n                let endTime = 5;\n                let actionDetected = false;\n                // Verificar si debemos aplicar una transición\n                if (((_response_applyTransitionDetection = response.applyTransitionDetection) === null || _response_applyTransitionDetection === void 0 ? void 0 : _response_applyTransitionDetection.detected) && response.applyTransitionDetection.confidence > 0.2 && response.applyTransitionDetection.transitionPath) {\n                    actionDetected = true;\n                    // Aplicar la transición\n                    const transitionResult = await applyTransition(response.applyTransitionDetection.transitionPath);\n                    actionSuccessful = transitionResult.success;\n                    operationDetails = transitionResult.details;\n                    // Detalles de la detección para referenciar\n                    detectionInfo = {\n                        detected: response.applyTransitionDetection.detected,\n                        confidence: response.applyTransitionDetection.confidence,\n                        reason: response.applyTransitionDetection.reason\n                    };\n                } else if (response.showScreenshotDetection && ((_response_urlAnalysis = response.urlAnalysis) === null || _response_urlAnalysis === void 0 ? void 0 : _response_urlAnalysis.containsURLs) && response.urlAnalysis.screenshots && response.urlAnalysis.screenshots.length > 0) {\n                    // Comprobar si la detección es positiva con confianza suficiente\n                    if (response.showScreenshotDetection.detected && response.showScreenshotDetection.confidence > 0.2) {\n                        actionDetected = true;\n                        // Seleccionar la primera captura disponible\n                        const firstScreenshot = response.urlAnalysis.screenshots[0];\n                        screenshotToAdd = firstScreenshot;\n                        // Guardar información de detección\n                        detectionInfo = {\n                            detected: response.showScreenshotDetection.detected,\n                            confidence: response.showScreenshotDetection.confidence,\n                            reason: response.showScreenshotDetection.reason\n                        };\n                        // Calcular tiempos para la imagen\n                        // Por defecto, usar la duración del elemento seleccionado\n                        startTime = 0;\n                        endTime = 5;\n                        // Añadir la captura a la timeline utilizando el CommandExecutorService\n                        const commandExecutor = _services_command_executor_service__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getExecutor();\n                        if (commandExecutor) {\n                            try {\n                                // Si hay elementos seleccionados, usar sus tiempos\n                                if (selectedItems && selectedItems.length > 0) {\n                                    // Obtener el primer elemento seleccionado\n                                    const firstItem = selectedItems[0];\n                                    // Intentar obtener los tiempos del elemento\n                                    if (firstItem.display) {\n                                        startTime = (firstItem.display.from || 0) / 1000; // convertir de ms a segundos\n                                        endTime = (firstItem.display.to || startTime * 1000 + 5000) / 1000; // convertir de ms a segundos\n                                    }\n                                }\n                                // Añadir la imagen a la timeline\n                                await commandExecutor.addImage(firstScreenshot.screenshotPath, {\n                                    startTime,\n                                    endTime\n                                });\n                                // Registrar la captura añadida\n                                setAddedScreenshots((prev)=>[\n                                        ...prev,\n                                        firstScreenshot\n                                    ]);\n                                // Detalles de la operación\n                                operationDetails = \"Captura aplicada a la timeline desde \".concat(startTime.toFixed(1), \"s hasta \").concat(endTime.toFixed(1), \"s\");\n                                console.log(\"Imagen a\\xf1adida a la timeline desde \".concat(startTime, \"s hasta \").concat(endTime, \"s: \").concat(firstScreenshot.screenshotPath));\n                            } catch (error) {\n                                console.error(\"Error al a\\xf1adir imagen a la timeline:\", error);\n                                actionSuccessful = false;\n                                operationDetails = \"Error al a\\xf1adir imagen: \".concat(error instanceof Error ? error.message : String(error));\n                            }\n                        } else {\n                            console.error(\"CommandExecutor no disponible\");\n                            actionSuccessful = false;\n                            operationDetails = \"CommandExecutor no disponible\";\n                        }\n                    }\n                }\n                // Establecer estado final según el resultado\n                setActionSuccess(actionSuccessful);\n                // Componer el mensaje informativo\n                let actionMessage;\n                if (actionDetected) {\n                    // Si se detectó una acción específica (como agregar captura o transición)\n                    actionMessage = actionSuccessful ? screenshotToAdd ? \"✨ \".concat(operationDetails || \"Captura aplicada correctamente\") : \"✨ \".concat(operationDetails || \"Transici\\xf3n aplicada correctamente\") : \"❌ Error: \".concat(operationDetails || \"No se pudo completar la operaci\\xf3n.\");\n                } else {\n                    // Si no se detectó ninguna acción específica, mostrar un mensaje predeterminado\n                    actionMessage = \"ℹ️ Esta \\xe1rea es para ejecutar acciones espec\\xedficas en la timeline. Si deseas conversar, por favor utiliza el chat.\";\n                    setActionSuccess(null); // Neutro, ni éxito ni error\n                }\n                setLastActionInfo(actionMessage);\n                setShowActionInfo(true);\n                // Añadir la respuesta del asistente al chat interno (no se muestra)\n                const assistantMessage = {\n                    role: \"assistant\",\n                    content: response.response + (actionDetected && actionSuccessful ? screenshotToAdd ? \"\\n\\n✅ **Captura de pantalla aplicada a la timeline**\\n- URL: \".concat(screenshotToAdd.url, \"\\n- Tiempo: desde \").concat(startTime, \"s hasta \").concat(endTime, \"s\\n- Confianza: \").concat(Math.round((detectionInfo === null || detectionInfo === void 0 ? void 0 : detectionInfo.confidence) * 100), \"%\") : \"\\n\\n✅ **Transici\\xf3n aplicada a la timeline**\\n- Tiempo: desde \".concat(startTime, \"s hasta \").concat(endTime, \"s\\n- Confianza: \").concat(Math.round((detectionInfo === null || detectionInfo === void 0 ? void 0 : detectionInfo.confidence) * 100), \"%\") : \"\"),\n                    timestamp: new Date(),\n                    detectionInfo: detectionInfo\n                };\n                setChatMessages((prevMessages)=>[\n                        ...prevMessages,\n                        assistantMessage\n                    ]);\n                // Ocultar la información de acción después de 4 segundos\n                setTimeout(()=>{\n                    setShowActionInfo(false);\n                }, 4000);\n            } else {\n                // Mostrar mensaje de error brevemente\n                setActionSuccess(false);\n                setLastActionInfo(\"❌ Error: \".concat(response.error || \"No se pudo procesar tu mensaje.\"));\n                setShowActionInfo(true);\n                setTimeout(()=>{\n                    setShowActionInfo(false);\n                }, 3000);\n            }\n        } catch (error) {\n            console.error(\"Error al enviar mensaje:\", error);\n            // Mostrar mensaje de error brevemente\n            setActionSuccess(false);\n            setLastActionInfo(\"❌ Error: \".concat(error instanceof Error ? error.message : \"Error de comunicaci\\xf3n con el servicio de IA.\"));\n            setShowActionInfo(true);\n            setTimeout(()=>{\n                setShowActionInfo(false);\n            }, 3000);\n        } finally{\n            setIsSending(false);\n        }\n    };\n    // Función para manejar el envío del mensaje con Enter\n    const handleKeyPress = (e)=>{\n        if (e.key === \"Enter\" && !e.shiftKey) {\n            e.preventDefault();\n            sendCommand();\n        }\n    };\n    if (!visible) return null;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: modalRef,\n        style: {\n            position: \"fixed\",\n            left: position.x,\n            top: position.y,\n            zIndex: 9999,\n            background: \"linear-gradient(135deg, rgba(35, 20, 60, 0.95) 0%, rgba(45, 25, 85, 0.95) 100%)\",\n            borderRadius: \"12px\",\n            boxShadow: \"0 8px 32px rgba(0, 0, 0, 0.6), 0 0 0 1px rgba(156, 90, 250, 0.3)\",\n            padding: \"20px\",\n            width: \"380px\",\n            color: \"white\",\n            fontFamily: \"Inter, system-ui, sans-serif\",\n            border: \"1px solid rgba(156, 90, 250, 0.6)\",\n            backdropFilter: \"blur(10px)\",\n            animation: \"fadeIn 0.3s ease\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"style\", {\n                children: \"\\n          @keyframes fadeIn {\\n            from { opacity: 0; transform: scale(0.95); }\\n            to { opacity: 1; transform: scale(1); }\\n          }\\n          @keyframes pulse {\\n            0% { box-shadow: 0 0 0 0 rgba(156, 90, 250, 0.5); }\\n            70% { box-shadow: 0 0 0 10px rgba(156, 90, 250, 0); }\\n            100% { box-shadow: 0 0 0 0 rgba(156, 90, 250, 0); }\\n          }\\n          @keyframes glow {\\n            0% { border-color: rgba(156, 90, 250, 0.6); }\\n            50% { border-color: rgba(156, 90, 250, 0.9); }\\n            100% { border-color: rgba(156, 90, 250, 0.6); }\\n          }\\n          @keyframes spin {\\n            0% { transform: rotate(0deg); }\\n            100% { transform: rotate(360deg); }\\n          }\\n        \"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                lineNumber: 529,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    marginBottom: \"16px\",\n                    borderBottom: \"1px solid rgba(156, 90, 250, 0.4)\",\n                    paddingBottom: \"12px\",\n                    position: \"relative\"\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            position: \"absolute\",\n                            bottom: \"-1px\",\n                            left: \"0\",\n                            width: \"60%\",\n                            height: \"1px\",\n                            background: \"linear-gradient(90deg, rgba(156, 90, 250, 0.8) 0%, rgba(156, 90, 250, 0) 100%)\",\n                            animation: \"glow 1.5s infinite alternate\"\n                        }\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                        lineNumber: 561,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                        style: {\n                            margin: 0,\n                            fontSize: \"18px\",\n                            fontWeight: \"600\",\n                            color: \"rgba(156, 90, 250, 1.0)\",\n                            textShadow: \"0 2px 4px rgba(0,0,0,0.3)\"\n                        },\n                        children: selectedItems.length > 1 ? \"\".concat(selectedItems.length, \" elementos seleccionados\") : \"Elemento seleccionado\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                        lineNumber: 571,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            display: \"flex\",\n                            gap: \"8px\"\n                        },\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: handleClose,\n                            style: {\n                                background: \"rgba(156, 90, 250, 0.2)\",\n                                border: \"none\",\n                                borderRadius: \"50%\",\n                                color: \"rgba(255, 255, 255, 0.9)\",\n                                cursor: \"pointer\",\n                                fontSize: \"16px\",\n                                padding: \"5px\",\n                                width: \"24px\",\n                                height: \"24px\",\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                lineHeight: \"1\",\n                                transition: \"all 0.2s ease\"\n                            },\n                            onMouseOver: (e)=>{\n                                e.currentTarget.style.background = \"rgba(156, 90, 250, 0.4)\";\n                                e.currentTarget.style.transform = \"scale(1.1)\";\n                            },\n                            onMouseOut: (e)=>{\n                                e.currentTarget.style.background = \"rgba(156, 90, 250, 0.2)\";\n                                e.currentTarget.style.transform = \"scale(1)\";\n                            },\n                            children: \"\\xd7\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                            lineNumber: 581,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                        lineNumber: 580,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                lineNumber: 552,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    marginTop: \"12px\",\n                    marginBottom: \"16px\"\n                },\n                children: [\n                    showActionInfo && lastActionInfo && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            padding: \"12px\",\n                            marginBottom: \"16px\",\n                            background: actionSuccess === false ? \"linear-gradient(to right, rgba(220, 50, 50, 0.15), rgba(220, 50, 50, 0.05))\" : actionSuccess === true ? \"linear-gradient(to right, rgba(70, 200, 120, 0.15), rgba(70, 200, 120, 0.05))\" : \"linear-gradient(to right, rgba(156, 90, 250, 0.15), rgba(156, 90, 250, 0.05))\",\n                            borderRadius: \"8px\",\n                            fontSize: \"14px\",\n                            border: \"1px solid \".concat(actionSuccess === false ? \"rgba(220, 50, 50, 0.3)\" : actionSuccess === true ? \"rgba(70, 200, 120, 0.3)\" : \"rgba(156, 90, 250, 0.3)\"),\n                            boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.1)\",\n                            transition: \"all 0.3s ease\",\n                            animation: actionSuccess ? \"pulse 2s infinite\" : \"\",\n                            color: actionSuccess === false ? \"rgba(255, 220, 220, 0.9)\" : actionSuccess === true ? \"rgba(220, 255, 230, 0.9)\" : \"rgba(240, 230, 255, 0.9)\"\n                        },\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                display: \"flex\",\n                                alignItems: \"flex-start\",\n                                gap: \"8px\"\n                            },\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    style: {\n                                        flexShrink: 0,\n                                        marginTop: \"2px\"\n                                    },\n                                    children: actionSuccess === false ? \"❌\" : actionSuccess === true ? \"✨\" : \"ℹ️\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                                    lineNumber: 645,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: lastActionInfo\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                                    lineNumber: 655,\n                                    columnNumber: 15\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                            lineNumber: 640,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                        lineNumber: 616,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            gap: \"12px\",\n                            borderTop: \"1px solid rgba(156, 90, 250, 0.2)\",\n                            paddingTop: \"16px\",\n                            position: \"relative\"\n                        },\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n                                ref: textareaRef,\n                                value: chatInput,\n                                onChange: (e)=>setChatInput(e.target.value),\n                                onKeyDown: handleKeyPress,\n                                disabled: isSending,\n                                placeholder: \"Escribe un comando... (ej: 'aplica captura a la timeline' o 'a\\xf1ade transici\\xf3n')\",\n                                style: {\n                                    width: \"100%\",\n                                    height: \"80px\",\n                                    background: \"rgba(30, 15, 50, 0.5)\",\n                                    border: \"1px solid rgba(156, 90, 250, 0.4)\",\n                                    borderRadius: \"8px\",\n                                    padding: \"12px 14px\",\n                                    color: \"white\",\n                                    fontSize: \"14px\",\n                                    outline: \"none\",\n                                    resize: \"none\",\n                                    transition: \"border-color 0.3s ease, box-shadow 0.3s ease\",\n                                    boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.2) inset\",\n                                    fontFamily: \"Inter, system-ui, sans-serif\",\n                                    lineHeight: \"1.5\"\n                                },\n                                onFocus: (e)=>{\n                                    e.target.style.borderColor = \"rgba(156, 90, 250, 0.8)\";\n                                    e.target.style.boxShadow = \"0 2px 8px rgba(0, 0, 0, 0.2) inset, 0 0 0 2px rgba(156, 90, 250, 0.1)\";\n                                },\n                                onBlur: (e)=>{\n                                    e.target.style.borderColor = \"rgba(156, 90, 250, 0.4)\";\n                                    e.target.style.boxShadow = \"0 2px 8px rgba(0, 0, 0, 0.2) inset\";\n                                }\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                                lineNumber: 668,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: sendCommand,\n                                disabled: isSending || !chatInput.trim(),\n                                style: {\n                                    background: isSending || !chatInput.trim() ? \"rgba(156, 90, 250, 0.3)\" : \"linear-gradient(135deg, rgba(156, 90, 250, 0.8) 0%, rgba(120, 60, 220, 0.9) 100%)\",\n                                    border: \"none\",\n                                    borderRadius: \"8px\",\n                                    color: \"white\",\n                                    cursor: isSending || !chatInput.trim() ? \"not-allowed\" : \"pointer\",\n                                    padding: \"12px 16px\",\n                                    fontSize: \"14px\",\n                                    fontWeight: \"500\",\n                                    transition: \"all 0.2s ease\",\n                                    boxShadow: isSending || !chatInput.trim() ? \"none\" : \"0 4px 12px rgba(156, 90, 250, 0.3)\",\n                                    textShadow: \"0 1px 2px rgba(0,0,0,0.2)\"\n                                },\n                                onMouseOver: (e)=>{\n                                    if (!isSending && chatInput.trim()) {\n                                        e.currentTarget.style.transform = \"translateY(-2px)\";\n                                        e.currentTarget.style.boxShadow = \"0 6px 16px rgba(156, 90, 250, 0.4)\";\n                                    }\n                                },\n                                onMouseOut: (e)=>{\n                                    if (!isSending && chatInput.trim()) {\n                                        e.currentTarget.style.transform = \"translateY(0)\";\n                                        e.currentTarget.style.boxShadow = \"0 4px 12px rgba(156, 90, 250, 0.3)\";\n                                    }\n                                },\n                                children: isSending ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    style: {\n                                        display: \"flex\",\n                                        alignItems: \"center\",\n                                        justifyContent: \"center\",\n                                        gap: \"8px\"\n                                    },\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            style: {\n                                                width: \"14px\",\n                                                height: \"14px\",\n                                                borderRadius: \"50%\",\n                                                border: \"2px solid rgba(255,255,255,0.3)\",\n                                                borderTopColor: \"white\",\n                                                animation: \"spin 1s linear infinite\"\n                                            }\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                                            lineNumber: 735,\n                                            columnNumber: 17\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            children: \"Procesando...\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                                            lineNumber: 743,\n                                            columnNumber: 17\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                                    lineNumber: 734,\n                                    columnNumber: 15\n                                }, undefined) : \"Ejecutar\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                                lineNumber: 700,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                        lineNumber: 660,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n                lineNumber: 614,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\timeline\\\\selection-modal.tsx\",\n        lineNumber: 510,\n        columnNumber: 5\n    }, undefined);\n};\n_s(SelectionModal, \"oQ1cOUXGdA9wm6cej/uyO/5xVYM=\");\n_c = SelectionModal;\n/* harmony default export */ __webpack_exports__[\"default\"] = (SelectionModal);\nvar _c;\n$RefreshReg$(_c, \"SelectionModal\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ZlYXR1cmVzL2VkaXRvci90aW1lbGluZS9zZWxlY3Rpb24tbW9kYWwudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUEyRDtBQUNLO0FBQ0o7QUFDYjtBQUMyQjtBQUN2QjtBQUNpQjtBQStDcEU7OztDQUdDLEdBQ0QsTUFBTWEsaUJBQTJCOztJQUMvQixNQUFNLENBQUNDLFNBQVNDLFdBQVcsR0FBR2IsK0NBQVFBLENBQUM7SUFDdkMsTUFBTSxDQUFDYyxVQUFVQyxZQUFZLEdBQUdmLCtDQUFRQSxDQUFXO1FBQUVnQixHQUFHO1FBQUdDLEdBQUc7SUFBRTtJQUNoRSxNQUFNLENBQUNDLGVBQWVDLGlCQUFpQixHQUFHbkIsK0NBQVFBLENBQVEsRUFBRTtJQUM1RCxNQUFNLENBQUNvQixXQUFXQyxhQUFhLEdBQUdyQiwrQ0FBUUEsQ0FBQztJQUMzQyxNQUFNLENBQUNzQixnQkFBZ0JDLGtCQUFrQixHQUFHdkIsK0NBQVFBLENBQWdCO0lBQ3BFLE1BQU0sQ0FBQ3dCLGdCQUFnQkMsa0JBQWtCLEdBQUd6QiwrQ0FBUUEsQ0FBQztJQUNyRCxNQUFNLENBQUMwQixlQUFlQyxpQkFBaUIsR0FBRzNCLCtDQUFRQSxDQUFpQjtJQUNuRSxNQUFNNEIsV0FBVzNCLDZDQUFNQSxDQUFpQjtJQUN4QyxNQUFNNEIsY0FBYzVCLDZDQUFNQSxDQUFzQjtJQUVoRCxzQkFBc0I7SUFDdEIsTUFBTSxDQUFDNkIsY0FBY0MsZ0JBQWdCLEdBQUcvQiwrQ0FBUUEsQ0FBZ0IsRUFBRTtJQUNsRSxNQUFNLENBQUNnQyxXQUFXQyxhQUFhLEdBQUdqQywrQ0FBUUEsQ0FBQztJQUUzQyx1REFBdUQ7SUFDdkQsTUFBTSxDQUFDa0Msa0JBQWtCQyxvQkFBb0IsR0FBR25DLCtDQUFRQSxDQUEwQyxFQUFFO0lBRXBHLDJEQUEyRDtJQUMzRCxNQUFNLENBQUNvQyxrQkFBa0JDLG9CQUFvQixHQUFHckMsK0NBQVFBLENBQVcsRUFBRTtJQUVyRUQsZ0RBQVNB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L0I7b0NBQ1gsSUFBSSxDQUFDcEksYUFBYVksVUFBVXlGLElBQUksSUFBSTt3Q0FDbEMrQixFQUFFNkIsYUFBYSxDQUFDeEIsS0FBSyxDQUFDeUIsU0FBUyxHQUFHO3dDQUNsQzlCLEVBQUU2QixhQUFhLENBQUN4QixLQUFLLENBQUNHLFNBQVMsR0FBRztvQ0FDcEM7Z0NBQ0Y7MENBRUM1SSwwQkFDQyw4REFBQ3VJO29DQUFJRSxPQUFPO3dDQUFFdkYsU0FBUzt3Q0FBUWdHLFlBQVk7d0NBQVVELGdCQUFnQjt3Q0FBVVMsS0FBSztvQ0FBTTs7c0RBQ3hGLDhEQUFDbkI7NENBQUlFLE9BQU87Z0RBQ1YzRSxPQUFPO2dEQUNQQyxRQUFRO2dEQUNSeUIsY0FBYztnREFDZHNELFFBQVE7Z0RBQ1JxQyxnQkFBZ0I7Z0RBQ2hCbkMsV0FBVzs0Q0FDYjs7Ozs7O3NEQUNBLDhEQUFDb0M7c0RBQUs7Ozs7Ozs7Ozs7O2dEQUVOOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFNaEI7R0FyckJNN0w7S0FBQUE7QUF1ckJOLCtEQUFlQSxjQUFjQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2ZlYXR1cmVzL2VkaXRvci90aW1lbGluZS9zZWxlY3Rpb24tbW9kYWwudHN4PzgwNDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUsIHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGZpbHRlciwgc3ViamVjdCwgZGlzcGF0Y2ggfSBmcm9tIFwiQGRlc2lnbmNvbWJvL2V2ZW50c1wiO1xuaW1wb3J0IHsgVElNRUxJTkVfU0VMRUNUSU9OX01PREFMIH0gZnJvbSAnLi9pdGVtcy90aW1lbGluZSc7XG5pbXBvcnQgQUlTZXJ2aWNlIGZyb20gJy4uL3NlcnZpY2VzL2FpLXNlcnZpY2UnO1xuaW1wb3J0IENvbW1hbmRFeGVjdXRvclNlcnZpY2UgZnJvbSAnLi4vc2VydmljZXMvY29tbWFuZC1leGVjdXRvci1zZXJ2aWNlJztcbmltcG9ydCB7IGdlbmVyYXRlSWQgfSBmcm9tIFwiQGRlc2lnbmNvbWJvL3RpbWVsaW5lXCI7XG5pbXBvcnQgeyBBRERfSU1BR0UsIEFERF9WSURFTywgQUREX1RFWFQgfSBmcm9tIFwiQGRlc2lnbmNvbWJvL3N0YXRlXCI7XG5cbmludGVyZmFjZSBQb3NpdGlvbiB7XG4gIHg6IG51bWJlcjtcbiAgeTogbnVtYmVyO1xufVxuXG5pbnRlcmZhY2UgU2VsZWN0ZWRJdGVtcyB7XG4gIHNlbGVjdGVkSXRlbXM6IGFueVtdO1xuICBwb3NpdGlvbjogUG9zaXRpb247XG4gIHNvdXJjZTogc3RyaW5nO1xufVxuXG5pbnRlcmZhY2UgVVJMQW5hbHlzaXNSZXN1bHQge1xuICBjb250YWluc1VSTHM6IGJvb2xlYW47XG4gIHVybHM6IHN0cmluZ1tdO1xuICBzY3JlZW5zaG90cz86IFVSTFNjcmVlbnNob3RJbmZvW107XG59XG5cbmludGVyZmFjZSBVUkxTY3JlZW5zaG90SW5mbyB7XG4gIHVybDogc3RyaW5nO1xuICBzY3JlZW5zaG90UGF0aDogc3RyaW5nO1xufVxuXG4vLyBJbnRlcmZheiBwYXJhIGRldGVjY2nDs24gZGUgdHJhbnNpY2lvbmVzXG5pbnRlcmZhY2UgVHJhbnNpdGlvbkRldGVjdGlvblJlc3VsdCB7XG4gIGRldGVjdGVkOiBib29sZWFuO1xuICBjb25maWRlbmNlOiBudW1iZXI7XG4gIHJlYXNvbjogc3RyaW5nO1xuICB0cmFuc2l0aW9uUGF0aD86IHN0cmluZztcbn1cblxuLy8gSW50ZXJmYXogcGFyYSBtZW5zYWplcyBkZSBjaGF0XG5pbnRlcmZhY2UgQ2hhdE1lc3NhZ2Uge1xuICByb2xlOiAndXNlcicgfCAnYXNzaXN0YW50JztcbiAgY29udGVudDogc3RyaW5nO1xuICB0aW1lc3RhbXA6IERhdGU7XG4gIC8vIFNpIGVsIG1lbnNhamUgbW9zdHLDsyBjYXB0dXJhIGRlIHBhbnRhbGxhLCBndWFyZGFyIGluZm9ybWFjacOzblxuICBzaG93U2NyZWVuc2hvdD86IGJvb2xlYW47XG4gIHNjcmVlbnNob3RVcmw/OiBzdHJpbmc7XG4gIGRldGVjdGlvbkluZm8/OiB7XG4gICAgZGV0ZWN0ZWQ6IGJvb2xlYW47XG4gICAgY29uZmlkZW5jZTogbnVtYmVyO1xuICAgIHJlYXNvbjogc3RyaW5nO1xuICB9O1xufVxuXG4vKipcbiAqIE1vZGFsIHF1ZSBzZSBtdWVzdHJhIGN1YW5kbyBzZSBzZWxlY2Npb25hbiBlbGVtZW50b3MgcG9yIGFycmFzdHJlIGVuIGxhIHRpbWVsaW5lXG4gKiBQcm9wb3JjaW9uYSB1bmEgaW50ZXJmYXogc2ltcGxlIHBhcmEgZW52aWFyIGNvbWFuZG9zIG1lZGlhbnRlIHRleHRvXG4gKi9cbmNvbnN0IFNlbGVjdGlvbk1vZGFsOiBSZWFjdC5GQyA9ICgpID0+IHtcbiAgY29uc3QgW3Zpc2libGUsIHNldFZpc2libGVdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbcG9zaXRpb24sIHNldFBvc2l0aW9uXSA9IHVzZVN0YXRlPFBvc2l0aW9uPih7IHg6IDAsIHk6IDAgfSk7XG4gIGNvbnN0IFtzZWxlY3RlZEl0ZW1zLCBzZXRTZWxlY3RlZEl0ZW1zXSA9IHVzZVN0YXRlPGFueVtdPihbXSk7XG4gIGNvbnN0IFtpc1NlbmRpbmcsIHNldElzU2VuZGluZ10gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtsYXN0QWN0aW9uSW5mbywgc2V0TGFzdEFjdGlvbkluZm9dID0gdXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IFtzaG93QWN0aW9uSW5mbywgc2V0U2hvd0FjdGlvbkluZm9dID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbYWN0aW9uU3VjY2Vzcywgc2V0QWN0aW9uU3VjY2Vzc10gPSB1c2VTdGF0ZTxib29sZWFuIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IG1vZGFsUmVmID0gdXNlUmVmPEhUTUxEaXZFbGVtZW50PihudWxsKTtcbiAgY29uc3QgdGV4dGFyZWFSZWYgPSB1c2VSZWY8SFRNTFRleHRBcmVhRWxlbWVudD4obnVsbCk7XG5cbiAgLy8gRXN0YWRvIHBhcmEgZWwgY2hhdFxuICBjb25zdCBbY2hhdE1lc3NhZ2VzLCBzZXRDaGF0TWVzc2FnZXNdID0gdXNlU3RhdGU8Q2hhdE1lc3NhZ2VbXT4oW10pO1xuICBjb25zdCBbY2hhdElucHV0LCBzZXRDaGF0SW5wdXRdID0gdXNlU3RhdGUoJycpO1xuXG4gIC8vIEVzdGFkbyBwYXJhIHJhc3RyZWFyIGltw6FnZW5lcyBhw7FhZGlkYXMgYSBsYSB0aW1lbGluZVxuICBjb25zdCBbYWRkZWRTY3JlZW5zaG90cywgc2V0QWRkZWRTY3JlZW5zaG90c10gPSB1c2VTdGF0ZTx7dXJsOiBzdHJpbmcsIHNjcmVlbnNob3RQYXRoOiBzdHJpbmd9W10+KFtdKTtcblxuICAvLyBFc3RhZG8gcGFyYSByYXN0cmVhciB0cmFuc2ljaW9uZXMgYcOxYWRpZGFzIGEgbGEgdGltZWxpbmVcbiAgY29uc3QgW2FkZGVkVHJhbnNpdGlvbnMsIHNldEFkZGVkVHJhbnNpdGlvbnNdID0gdXNlU3RhdGU8c3RyaW5nW10+KFtdKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIC8vIFN1c2NyaWJpcnNlIGFsIGV2ZW50byBkZSBzZWxlY2Npw7NuIHBvciBhcnJhc3RyZVxuICAgIGNvbnN0IHNlbGVjdGlvbkV2ZW50cyA9IHN1YmplY3QucGlwZShcbiAgICAgIGZpbHRlcigoeyBrZXkgfSkgPT4ga2V5ID09PSBUSU1FTElORV9TRUxFQ1RJT05fTU9EQUwpXG4gICAgKTtcblxuICAgIGNvbnN0IHN1YnNjcmlwdGlvbiA9IHNlbGVjdGlvbkV2ZW50cy5zdWJzY3JpYmUoKGV2ZW50KSA9PiB7XG4gICAgICBjb25zdCBwYXlsb2FkID0gZXZlbnQudmFsdWU/LnBheWxvYWQgYXMgU2VsZWN0ZWRJdGVtcztcbiAgICAgIGNvbnNvbGUubG9nKCdTZWxlY3Rpb24gbW9kYWwgZXZlbnQgcmVjZWl2ZWQ6JywgcGF5bG9hZCk7XG5cbiAgICAgIGlmIChwYXlsb2FkICYmIHBheWxvYWQuc2VsZWN0ZWRJdGVtcyAmJiBwYXlsb2FkLnNlbGVjdGVkSXRlbXMubGVuZ3RoID4gMCkge1xuICAgICAgICBzZXRTZWxlY3RlZEl0ZW1zKHBheWxvYWQuc2VsZWN0ZWRJdGVtcyk7XG5cbiAgICAgICAgLy8gQWp1c3RhciBsYSBwb3NpY2nDs24gcGFyYSBxdWUgZWwgbW9kYWwgc2VhIHZpc2libGVcbiAgICAgICAgc2V0UG9zaXRpb24oe1xuICAgICAgICAgIHg6IE1hdGgubWluKHBheWxvYWQucG9zaXRpb24ueCwgd2luZG93LmlubmVyV2lkdGggLSAzNTApLFxuICAgICAgICAgIHk6IE1hdGgubWluKHBheWxvYWQucG9zaXRpb24ueSwgd2luZG93LmlubmVySGVpZ2h0IC0gMzUwKVxuICAgICAgICB9KTtcblxuICAgICAgICAvLyBSZXNldGVhciBlc3RhZG9zXG4gICAgICAgIHNldENoYXRNZXNzYWdlcyhbXSk7XG4gICAgICAgIHNldENoYXRJbnB1dCgnJyk7XG4gICAgICAgIHNldExhc3RBY3Rpb25JbmZvKG51bGwpO1xuICAgICAgICBzZXRBY3Rpb25TdWNjZXNzKG51bGwpO1xuICAgICAgICBzZXRWaXNpYmxlKHRydWUpO1xuXG4gICAgICAgIC8vIEVuZm9jYXIgZWwgdGV4dGFyZWEgY3VhbmRvIGVsIG1vZGFsIHNlIGFicmVcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgaWYgKHRleHRhcmVhUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgICAgIHRleHRhcmVhUmVmLmN1cnJlbnQuZm9jdXMoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sIDEwMCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvLyBNYW5lamFyIGNsaWMgZnVlcmEgZGVsIG1vZGFsIHBhcmEgY2VycmFybG9cbiAgICBjb25zdCBoYW5kbGVDbGlja091dHNpZGUgPSAoZXZlbnQ6IE1vdXNlRXZlbnQpID0+IHtcbiAgICAgIGlmIChtb2RhbFJlZi5jdXJyZW50ICYmICFtb2RhbFJlZi5jdXJyZW50LmNvbnRhaW5zKGV2ZW50LnRhcmdldCBhcyBOb2RlKSkge1xuICAgICAgICBzZXRWaXNpYmxlKGZhbHNlKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgaGFuZGxlQ2xpY2tPdXRzaWRlKTtcblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBzdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIGhhbmRsZUNsaWNrT3V0c2lkZSk7XG4gICAgfTtcbiAgfSwgW10pO1xuXG4gIGNvbnN0IGhhbmRsZUNsb3NlID0gKCkgPT4ge1xuICAgIHNldFZpc2libGUoZmFsc2UpO1xuICB9O1xuXG4gIC8vIEZ1bmNpw7NuIHBhcmEgYWdyZWdhciB1bmEgdHJhbnNpY2nDs24gYWwgdmlkZW9cbiAgY29uc3QgYXBwbHlUcmFuc2l0aW9uID0gYXN5bmMgKHRyYW5zaXRpb25QYXRoOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbjsgZGV0YWlsczogc3RyaW5nIH0+ID0+IHtcbiAgICB0cnkge1xuICAgICAgLy8gQ2FsY3VsYXIgdGllbXBvcyBwYXJhIGxhIHRyYW5zaWNpw7NuXG4gICAgICAvLyBQb3IgZGVmZWN0bywgdXNhciBsYSBkdXJhY2nDs24gZGVsIGVsZW1lbnRvIHNlbGVjY2lvbmFkb1xuICAgICAgbGV0IHN0YXJ0VGltZSA9IDA7XG4gICAgICBsZXQgZW5kVGltZSA9IDU7XG5cbiAgICAgIC8vIFNpIGhheSBlbGVtZW50b3Mgc2VsZWNjaW9uYWRvcywgdXNhciBzdXMgdGllbXBvc1xuICAgICAgaWYgKHNlbGVjdGVkSXRlbXMgJiYgc2VsZWN0ZWRJdGVtcy5sZW5ndGggPiAwKSB7XG4gICAgICAgIC8vIE9idGVuZXIgZWwgcHJpbWVyIGVsZW1lbnRvIHNlbGVjY2lvbmFkb1xuICAgICAgICBjb25zdCBmaXJzdEl0ZW0gPSBzZWxlY3RlZEl0ZW1zWzBdO1xuXG4gICAgICAgIC8vIEludGVudGFyIG9idGVuZXIgbG9zIHRpZW1wb3MgZGVsIGVsZW1lbnRvXG4gICAgICAgIGlmIChmaXJzdEl0ZW0uZGlzcGxheSkge1xuICAgICAgICAgIHN0YXJ0VGltZSA9IChmaXJzdEl0ZW0uZGlzcGxheS5mcm9tIHx8IDApIC8gMTAwMDsgLy8gY29udmVydGlyIGRlIG1zIGEgc2VndW5kb3NcbiAgICAgICAgICBlbmRUaW1lID0gKGZpcnN0SXRlbS5kaXNwbGF5LnRvIHx8IChzdGFydFRpbWUgKiAxMDAwICsgNTAwMCkpIC8gMTAwMDsgLy8gY29udmVydGlyIGRlIG1zIGEgc2VndW5kb3NcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBEZXRlcm1pbmFyIHNpIGVzdGFtb3MgbWFuZWphbmRvIHVuIEdJRiBvIHVuIHZpZGVvXG4gICAgICBjb25zdCBpc0dpZiA9IHRyYW5zaXRpb25QYXRoLnRvTG93ZXJDYXNlKCkuZW5kc1dpdGgoJy5naWYnKTtcblxuICAgICAgaWYgKGlzR2lmKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gUGFyYSBHSUZzLCBjcmVhciBkb3MgZWxlbWVudG9zOlxuICAgICAgICAgIC8vIDEuIFVuIGVsZW1lbnRvIHByaW5jaXBhbCBjb24gbGEgdHJhbnNpY2nDs24gYSB0YW1hw7FvIGNvbXBsZXRvIChubyB2aXNpYmxlIGVuIHRpbWVsaW5lKVxuICAgICAgICAgIC8vIDIuIFVuYSBtaW5pYXR1cmEgY29uIGV0aXF1ZXRhIFwiVFwiIHBhcmEgbW9zdHJhciBlbiBsYSB0aW1lbGluZVxuXG4gICAgICAgICAgLy8gMS4gRW52aWFyIGVsIEdJRiBwcmluY2lwYWwgYSB0YW1hw7FvIGNvbXBsZXRvIChjdWJyZSB0b2RvIGVsIGNhbnZhcylcbiAgICAgICAgICBjb25zdCBtYWluVHJhbnNpdGlvbklkID0gZ2VuZXJhdGVJZCgpO1xuXG4gICAgICAgICAgLy8gQ3JlYXIgZWwgcGF5bG9hZCBwYXJhIGxhIHRyYW5zaWNpw7NuIGEgcGFudGFsbGEgY29tcGxldGFcbiAgICAgICAgICBjb25zdCBtYWluVHJhbnNpdGlvblBheWxvYWQgPSB7XG4gICAgICAgICAgICBpZDogbWFpblRyYW5zaXRpb25JZCxcbiAgICAgICAgICAgIGRpc3BsYXk6IHtcbiAgICAgICAgICAgICAgZnJvbTogc3RhcnRUaW1lICogMTAwMCwgLy8gQ29udmVydGlyIGEgbWlsaXNlZ3VuZG9zXG4gICAgICAgICAgICAgIHRvOiBlbmRUaW1lICogMTAwMCAgICAgLy8gQ29udmVydGlyIGEgbWlsaXNlZ3VuZG9zXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdHlwZTogJ2ltYWdlJyxcbiAgICAgICAgICAgIGRldGFpbHM6IHtcbiAgICAgICAgICAgICAgc3JjOiB0cmFuc2l0aW9uUGF0aCxcbiAgICAgICAgICAgICAgd2lkdGg6IDE5MjAsXG4gICAgICAgICAgICAgIGhlaWdodDogMTA4MCxcbiAgICAgICAgICAgICAgb3BhY2l0eTogMTAwLFxuICAgICAgICAgICAgICBzY2FsZU1vZGU6IFwiY292ZXJcIiwgLy8gQ3VicmlyIHRvZGEgbGEgcGFudGFsbGFcbiAgICAgICAgICAgICAgbGVmdDogMC41LCAvLyBDZW50cmFkbyBob3Jpem9udGFsbWVudGVcbiAgICAgICAgICAgICAgdG9wOiAwLjUsICAvLyBDZW50cmFkbyB2ZXJ0aWNhbG1lbnRlXG4gICAgICAgICAgICAgIG9yaWdpblg6IFwiY2VudGVyXCIsIC8vIE9yaWdlbiBlbiBlbCBjZW50cm9cbiAgICAgICAgICAgICAgb3JpZ2luWTogXCJjZW50ZXJcIiwgLy8gT3JpZ2VuIGVuIGVsIGNlbnRyb1xuICAgICAgICAgICAgICBtZXRhZGF0YToge1xuICAgICAgICAgICAgICAgIGlzVHJhbnNpdGlvbjogdHJ1ZSxcbiAgICAgICAgICAgICAgICBmdWxsU2NyZWVuOiB0cnVlXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfTtcblxuICAgICAgICAgIC8vIEHDsWFkaXIgZWwgZWxlbWVudG8gR0lGIHByaW5jaXBhbCBhbCB0aW1lbGluZSBjb24gZGlzcGF0Y2ggZGlyZWN0b1xuICAgICAgICAgIGRpc3BhdGNoKEFERF9JTUFHRSwge1xuICAgICAgICAgICAgcGF5bG9hZDogbWFpblRyYW5zaXRpb25QYXlsb2FkLFxuICAgICAgICAgICAgb3B0aW9uczoge1xuICAgICAgICAgICAgICBzY2FsZU1vZGU6IFwiY292ZXJcIixcbiAgICAgICAgICAgICAgcG9zaXRpb246IHsgeDogMC41LCB5OiAwLjUgfSxcbiAgICAgICAgICAgICAgdHJhY2tJZDogXCJ0cmFuc2l0aW9uc1wiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgLy8gMi4gQ3JlYXIgdW4gZWxlbWVudG8gZGUgbWluaWF0dXJhIHBhcmEgbW9zdHJhciBlbiBsYSB0aW1lbGluZVxuICAgICAgICAgIGNvbnN0IHRodW1ibmFpbElkID0gZ2VuZXJhdGVJZCgpO1xuICAgICAgICAgIGNvbnN0IHRodW1ibmFpbFBheWxvYWQgPSB7XG4gICAgICAgICAgICBpZDogdGh1bWJuYWlsSWQsXG4gICAgICAgICAgICBkaXNwbGF5OiB7XG4gICAgICAgICAgICAgIGZyb206IHN0YXJ0VGltZSAqIDEwMDAsXG4gICAgICAgICAgICAgIHRvOiBlbmRUaW1lICogMTAwMFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHR5cGU6ICdpbWFnZScsXG4gICAgICAgICAgICBkZXRhaWxzOiB7XG4gICAgICAgICAgICAgIHNyYzogdHJhbnNpdGlvblBhdGgsXG4gICAgICAgICAgICAgIHdpZHRoOiAxNTAsIC8vIFRhbWHDsW8gZGUgbWluaWF0dXJhXG4gICAgICAgICAgICAgIGhlaWdodDogOTAsIC8vIFByb3BvcmNpw7NuIDE2OjkgYXByb3hpbWFkYVxuICAgICAgICAgICAgICBvcGFjaXR5OiAxMDAsXG4gICAgICAgICAgICAgIHNjYWxlTW9kZTogXCJmaXRcIiwgLy8gTWFudGVuZXIgcHJvcG9yY2nDs25cbiAgICAgICAgICAgICAgbGVmdDogMC41LFxuICAgICAgICAgICAgICB0b3A6IDAuNSxcbiAgICAgICAgICAgICAgb3JpZ2luWDogXCJjZW50ZXJcIixcbiAgICAgICAgICAgICAgb3JpZ2luWTogXCJjZW50ZXJcIixcbiAgICAgICAgICAgICAgbWV0YWRhdGE6IHtcbiAgICAgICAgICAgICAgICBpc1RodW1ibmFpbDogdHJ1ZSxcbiAgICAgICAgICAgICAgICByZWxhdGVkVG9JZDogbWFpblRyYW5zaXRpb25JZCxcbiAgICAgICAgICAgICAgICBpc1RyYW5zaXRpb246IHRydWVcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9O1xuXG4gICAgICAgICAgLy8gQcOxYWRpciBsYSBtaW5pYXR1cmEgYSBsYSB0aW1lbGluZVxuICAgICAgICAgIGRpc3BhdGNoKEFERF9JTUFHRSwge1xuICAgICAgICAgICAgcGF5bG9hZDogdGh1bWJuYWlsUGF5bG9hZCxcbiAgICAgICAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgICAgICAgcG9zaXRpb246IHsgeDogMC41LCB5OiAwLjUgfSxcbiAgICAgICAgICAgICAgdHJhY2tJZDogXCJ0cmFuc2l0aW9uc1wiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgLy8gQcOxYWRpciBsYSBldGlxdWV0YSBcIlRcIiBzb2JyZSBsYSBtaW5pYXR1cmFcbiAgICAgICAgICBjb25zdCB0ZXh0SWQgPSBnZW5lcmF0ZUlkKCk7XG4gICAgICAgICAgY29uc3QgdGV4dFBheWxvYWQgPSB7XG4gICAgICAgICAgICBpZDogdGV4dElkLFxuICAgICAgICAgICAgZGlzcGxheToge1xuICAgICAgICAgICAgICBmcm9tOiBzdGFydFRpbWUgKiAxMDAwLFxuICAgICAgICAgICAgICB0bzogZW5kVGltZSAqIDEwMDBcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB0eXBlOiAndGV4dCcsXG4gICAgICAgICAgICBkZXRhaWxzOiB7XG4gICAgICAgICAgICAgIHRleHQ6IFwiVFwiLFxuICAgICAgICAgICAgICBmb250U2l6ZTogMzIsXG4gICAgICAgICAgICAgIGZvbnRGYW1pbHk6IFwiQXJpYWxcIixcbiAgICAgICAgICAgICAgZm9udFdlaWdodDogXCJib2xkXCIsXG4gICAgICAgICAgICAgIGNvbG9yOiBcIiNGRkZGRkZcIixcbiAgICAgICAgICAgICAgd2lkdGg6IDE1MCxcbiAgICAgICAgICAgICAgaGVpZ2h0OiA5MCxcbiAgICAgICAgICAgICAgdGV4dEFsaWduOiBcImNlbnRlclwiLFxuICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSgxNTYsIDkwLCAyNTAsIDAuNSlcIiwgLy8gRm9uZG8gc2VtaXRyYW5zcGFyZW50ZSBww7pycHVyYVxuICAgICAgICAgICAgICBib3JkZXJSYWRpdXM6IDQsXG4gICAgICAgICAgICAgIGxlZnQ6IDAuNSxcbiAgICAgICAgICAgICAgdG9wOiAwLjUsXG4gICAgICAgICAgICAgIG9yaWdpblg6IFwiY2VudGVyXCIsXG4gICAgICAgICAgICAgIG9yaWdpblk6IFwiY2VudGVyXCIsXG4gICAgICAgICAgICAgIG1ldGFkYXRhOiB7XG4gICAgICAgICAgICAgICAgaXNUcmFuc2l0aW9uTGFiZWw6IHRydWUsXG4gICAgICAgICAgICAgICAgcmVsYXRlZFRvSWQ6IHRodW1ibmFpbElkXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfTtcblxuICAgICAgICAgIC8vIEHDsWFkaXIgbGEgZXRpcXVldGEgXCJUXCIgYWwgdGltZWxpbmVcbiAgICAgICAgICBkaXNwYXRjaChBRERfVEVYVCwge1xuICAgICAgICAgICAgcGF5bG9hZDogdGV4dFBheWxvYWQsXG4gICAgICAgICAgICBvcHRpb25zOiB7XG4gICAgICAgICAgICAgIHRyYWNrSWQ6IFwidHJhbnNpdGlvbnNcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIGNvbnNvbGUubG9nKGBUcmFuc2ljacOzbiBHSUYgYcOxYWRpZGEgYSBwYW50YWxsYSBjb21wbGV0YSB5IGNvbW8gdGh1bWJuYWlsIGRlc2RlICR7c3RhcnRUaW1lfXMgaGFzdGEgJHtlbmRUaW1lfXNgKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgYWwgYXBsaWNhciB0cmFuc2ljacOzbiBHSUY6XCIsIGVycm9yKTtcbiAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gUGFyYSB2aWRlb3MgKE1QNCwgZXRjLiksIHNlZ3VpbW9zIHVzYW5kbyBhZGRWaWRlb1xuICAgICAgICBjb25zdCBjb21tYW5kRXhlY3V0b3IgPSBDb21tYW5kRXhlY3V0b3JTZXJ2aWNlLmdldEV4ZWN1dG9yKCk7XG4gICAgICAgIGlmICghY29tbWFuZEV4ZWN1dG9yKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihcIkNvbW1hbmRFeGVjdXRvciBubyBkaXNwb25pYmxlXCIpO1xuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICAgIGRldGFpbHM6IFwiQ29tbWFuZEV4ZWN1dG9yIG5vIGRpc3BvbmlibGVcIlxuICAgICAgICAgIH07XG4gICAgICAgIH1cblxuICAgICAgICBhd2FpdCBjb21tYW5kRXhlY3V0b3IuYWRkVmlkZW8odHJhbnNpdGlvblBhdGgsIHtcbiAgICAgICAgICBzdGFydFRpbWUsXG4gICAgICAgICAgZW5kVGltZVxuICAgICAgICB9KTtcblxuICAgICAgICBjb25zb2xlLmxvZyhgVHJhbnNpY2nDs24gZGUgdmlkZW8gYcOxYWRpZGEgZGVzZGUgJHtzdGFydFRpbWV9cyBoYXN0YSAke2VuZFRpbWV9c2ApO1xuICAgICAgfVxuXG4gICAgICAvLyBSZWdpc3RyYXIgbGEgdHJhbnNpY2nDs24gYcOxYWRpZGFcbiAgICAgIHNldEFkZGVkVHJhbnNpdGlvbnMocHJldiA9PiBbLi4ucHJldiwgdHJhbnNpdGlvblBhdGhdKTtcblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgZGV0YWlsczogYFRyYW5zaWNpw7NuIGFwbGljYWRhIGRlc2RlICR7c3RhcnRUaW1lLnRvRml4ZWQoMSl9cyBoYXN0YSAke2VuZFRpbWUudG9GaXhlZCgxKX1zYFxuICAgICAgfTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGFsIGHDsWFkaXIgdHJhbnNpY2nDs246XCIsIGVycm9yKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBkZXRhaWxzOiBgRXJyb3IgYWwgYcOxYWRpciB0cmFuc2ljacOzbjogJHtlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6IFN0cmluZyhlcnJvcil9YFxuICAgICAgfTtcbiAgICB9XG4gIH07XG5cbiAgLy8gRnVuY2nDs24gcGFyYSBlbnZpYXIgdW4gbWVuc2FqZSB5IHByb2Nlc2FybG8gc2luIG1vc3RyYXIgY2hhdFxuICBjb25zdCBzZW5kQ29tbWFuZCA9IGFzeW5jICgpID0+IHtcbiAgICBpZiAoIWNoYXRJbnB1dC50cmltKCkpIHJldHVybjtcblxuICAgIGNvbnN0IHVzZXJNZXNzYWdlOiBDaGF0TWVzc2FnZSA9IHtcbiAgICAgIHJvbGU6ICd1c2VyJyxcbiAgICAgIGNvbnRlbnQ6IGNoYXRJbnB1dCxcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKVxuICAgIH07XG5cbiAgICAvLyBBw7FhZGlyIGVsIG1lbnNhamUgZGVsIHVzdWFyaW8gYWwgY2hhdCBpbnRlcm5vIChwYXJhIGzDs2dpY2EsIG5vIHNlIG11ZXN0cmEpXG4gICAgc2V0Q2hhdE1lc3NhZ2VzKFsuLi5jaGF0TWVzc2FnZXMsIHVzZXJNZXNzYWdlXSk7XG4gICAgc2V0Q2hhdElucHV0KCcnKTtcbiAgICBzZXRJc1NlbmRpbmcodHJ1ZSk7XG4gICAgc2V0TGFzdEFjdGlvbkluZm8obnVsbCk7XG4gICAgc2V0U2hvd0FjdGlvbkluZm8oZmFsc2UpO1xuICAgIHNldEFjdGlvblN1Y2Nlc3MobnVsbCk7XG5cbiAgICB0cnkge1xuICAgICAgLy8gRW52aWFyIGVsIG1lbnNhamUgYSBsYSBBUElcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgQUlTZXJ2aWNlLnNlbmRDaGF0TWVzc2FnZSh7XG4gICAgICAgIG1lc3NhZ2U6IGNoYXRJbnB1dCxcbiAgICAgICAgc2VsZWN0ZWRJdGVtczogc2VsZWN0ZWRJdGVtc1xuICAgICAgfSk7XG5cbiAgICAgIGlmIChyZXNwb25zZS5zdWNjZXNzICYmIHJlc3BvbnNlLnJlc3BvbnNlKSB7XG4gICAgICAgIGxldCBhY3Rpb25TdWNjZXNzZnVsID0gdHJ1ZTsgLy8gUG9yIGRlZmVjdG8gYXN1bWltb3Mgw6l4aXRvXG4gICAgICAgIGxldCBvcGVyYXRpb25EZXRhaWxzID0gJyc7XG4gICAgICAgIGxldCBzY3JlZW5zaG90VG9BZGQgPSBudWxsO1xuICAgICAgICBsZXQgZGV0ZWN0aW9uSW5mbyA9IG51bGw7XG4gICAgICAgIGxldCBzdGFydFRpbWUgPSAwO1xuICAgICAgICBsZXQgZW5kVGltZSA9IDU7XG4gICAgICAgIGxldCBhY3Rpb25EZXRlY3RlZCA9IGZhbHNlO1xuXG4gICAgICAgIC8vIFZlcmlmaWNhciBzaSBkZWJlbW9zIGFwbGljYXIgdW5hIHRyYW5zaWNpw7NuXG4gICAgICAgIGlmIChyZXNwb25zZS5hcHBseVRyYW5zaXRpb25EZXRlY3Rpb24/LmRldGVjdGVkICYmXG4gICAgICAgICAgICByZXNwb25zZS5hcHBseVRyYW5zaXRpb25EZXRlY3Rpb24uY29uZmlkZW5jZSA+IDAuMiAmJlxuICAgICAgICAgICAgcmVzcG9uc2UuYXBwbHlUcmFuc2l0aW9uRGV0ZWN0aW9uLnRyYW5zaXRpb25QYXRoKSB7XG5cbiAgICAgICAgICBhY3Rpb25EZXRlY3RlZCA9IHRydWU7XG5cbiAgICAgICAgICAvLyBBcGxpY2FyIGxhIHRyYW5zaWNpw7NuXG4gICAgICAgICAgY29uc3QgdHJhbnNpdGlvblJlc3VsdCA9IGF3YWl0IGFwcGx5VHJhbnNpdGlvbihyZXNwb25zZS5hcHBseVRyYW5zaXRpb25EZXRlY3Rpb24udHJhbnNpdGlvblBhdGgpO1xuXG4gICAgICAgICAgYWN0aW9uU3VjY2Vzc2Z1bCA9IHRyYW5zaXRpb25SZXN1bHQuc3VjY2VzcztcbiAgICAgICAgICBvcGVyYXRpb25EZXRhaWxzID0gdHJhbnNpdGlvblJlc3VsdC5kZXRhaWxzO1xuXG4gICAgICAgICAgLy8gRGV0YWxsZXMgZGUgbGEgZGV0ZWNjacOzbiBwYXJhIHJlZmVyZW5jaWFyXG4gICAgICAgICAgZGV0ZWN0aW9uSW5mbyA9IHtcbiAgICAgICAgICAgIGRldGVjdGVkOiByZXNwb25zZS5hcHBseVRyYW5zaXRpb25EZXRlY3Rpb24uZGV0ZWN0ZWQsXG4gICAgICAgICAgICBjb25maWRlbmNlOiByZXNwb25zZS5hcHBseVRyYW5zaXRpb25EZXRlY3Rpb24uY29uZmlkZW5jZSxcbiAgICAgICAgICAgIHJlYXNvbjogcmVzcG9uc2UuYXBwbHlUcmFuc2l0aW9uRGV0ZWN0aW9uLnJlYXNvblxuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgLy8gVmVyaWZpY2FyIHNpIGRlYmVtb3MgYXBsaWNhciB1bmEgY2FwdHVyYSBkZSBwYW50YWxsYSBhIGxhIHRpbWVsaW5lXG4gICAgICAgIGVsc2UgaWYgKHJlc3BvbnNlLnNob3dTY3JlZW5zaG90RGV0ZWN0aW9uICYmXG4gICAgICAgICAgICByZXNwb25zZS51cmxBbmFseXNpcz8uY29udGFpbnNVUkxzICYmXG4gICAgICAgICAgICByZXNwb25zZS51cmxBbmFseXNpcy5zY3JlZW5zaG90cyAmJlxuICAgICAgICAgICAgcmVzcG9uc2UudXJsQW5hbHlzaXMuc2NyZWVuc2hvdHMubGVuZ3RoID4gMCkge1xuXG4gICAgICAgICAgLy8gQ29tcHJvYmFyIHNpIGxhIGRldGVjY2nDs24gZXMgcG9zaXRpdmEgY29uIGNvbmZpYW56YSBzdWZpY2llbnRlXG4gICAgICAgICAgaWYgKHJlc3BvbnNlLnNob3dTY3JlZW5zaG90RGV0ZWN0aW9uLmRldGVjdGVkICYmXG4gICAgICAgICAgICAgIHJlc3BvbnNlLnNob3dTY3JlZW5zaG90RGV0ZWN0aW9uLmNvbmZpZGVuY2UgPiAwLjIpIHtcblxuICAgICAgICAgICAgYWN0aW9uRGV0ZWN0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgLy8gU2VsZWNjaW9uYXIgbGEgcHJpbWVyYSBjYXB0dXJhIGRpc3BvbmlibGVcbiAgICAgICAgICAgIGNvbnN0IGZpcnN0U2NyZWVuc2hvdCA9IHJlc3BvbnNlLnVybEFuYWx5c2lzLnNjcmVlbnNob3RzWzBdO1xuICAgICAgICAgICAgc2NyZWVuc2hvdFRvQWRkID0gZmlyc3RTY3JlZW5zaG90O1xuXG4gICAgICAgICAgICAvLyBHdWFyZGFyIGluZm9ybWFjacOzbiBkZSBkZXRlY2Npw7NuXG4gICAgICAgICAgICBkZXRlY3Rpb25JbmZvID0ge1xuICAgICAgICAgICAgICBkZXRlY3RlZDogcmVzcG9uc2Uuc2hvd1NjcmVlbnNob3REZXRlY3Rpb24uZGV0ZWN0ZWQsXG4gICAgICAgICAgICAgIGNvbmZpZGVuY2U6IHJlc3BvbnNlLnNob3dTY3JlZW5zaG90RGV0ZWN0aW9uLmNvbmZpZGVuY2UsXG4gICAgICAgICAgICAgIHJlYXNvbjogcmVzcG9uc2Uuc2hvd1NjcmVlbnNob3REZXRlY3Rpb24ucmVhc29uXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAvLyBDYWxjdWxhciB0aWVtcG9zIHBhcmEgbGEgaW1hZ2VuXG4gICAgICAgICAgICAvLyBQb3IgZGVmZWN0bywgdXNhciBsYSBkdXJhY2nDs24gZGVsIGVsZW1lbnRvIHNlbGVjY2lvbmFkb1xuICAgICAgICAgICAgc3RhcnRUaW1lID0gMDtcbiAgICAgICAgICAgIGVuZFRpbWUgPSA1O1xuXG4gICAgICAgICAgICAvLyBBw7FhZGlyIGxhIGNhcHR1cmEgYSBsYSB0aW1lbGluZSB1dGlsaXphbmRvIGVsIENvbW1hbmRFeGVjdXRvclNlcnZpY2VcbiAgICAgICAgICAgIGNvbnN0IGNvbW1hbmRFeGVjdXRvciA9IENvbW1hbmRFeGVjdXRvclNlcnZpY2UuZ2V0RXhlY3V0b3IoKTtcbiAgICAgICAgICAgIGlmIChjb21tYW5kRXhlY3V0b3IpIHtcbiAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAvLyBTaSBoYXkgZWxlbWVudG9zIHNlbGVjY2lvbmFkb3MsIHVzYXIgc3VzIHRpZW1wb3NcbiAgICAgICAgICAgICAgICBpZiAoc2VsZWN0ZWRJdGVtcyAmJiBzZWxlY3RlZEl0ZW1zLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgIC8vIE9idGVuZXIgZWwgcHJpbWVyIGVsZW1lbnRvIHNlbGVjY2lvbmFkb1xuICAgICAgICAgICAgICAgICAgY29uc3QgZmlyc3RJdGVtID0gc2VsZWN0ZWRJdGVtc1swXTtcblxuICAgICAgICAgICAgICAgICAgLy8gSW50ZW50YXIgb2J0ZW5lciBsb3MgdGllbXBvcyBkZWwgZWxlbWVudG9cbiAgICAgICAgICAgICAgICAgIGlmIChmaXJzdEl0ZW0uZGlzcGxheSkge1xuICAgICAgICAgICAgICAgICAgICBzdGFydFRpbWUgPSAoZmlyc3RJdGVtLmRpc3BsYXkuZnJvbSB8fCAwKSAvIDEwMDA7IC8vIGNvbnZlcnRpciBkZSBtcyBhIHNlZ3VuZG9zXG4gICAgICAgICAgICAgICAgICAgIGVuZFRpbWUgPSAoZmlyc3RJdGVtLmRpc3BsYXkudG8gfHwgKHN0YXJ0VGltZSAqIDEwMDAgKyA1MDAwKSkgLyAxMDAwOyAvLyBjb252ZXJ0aXIgZGUgbXMgYSBzZWd1bmRvc1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vIEHDsWFkaXIgbGEgaW1hZ2VuIGEgbGEgdGltZWxpbmVcbiAgICAgICAgICAgICAgICBhd2FpdCBjb21tYW5kRXhlY3V0b3IuYWRkSW1hZ2UoZmlyc3RTY3JlZW5zaG90LnNjcmVlbnNob3RQYXRoLCB7XG4gICAgICAgICAgICAgICAgICBzdGFydFRpbWUsXG4gICAgICAgICAgICAgICAgICBlbmRUaW1lXG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAvLyBSZWdpc3RyYXIgbGEgY2FwdHVyYSBhw7FhZGlkYVxuICAgICAgICAgICAgICAgIHNldEFkZGVkU2NyZWVuc2hvdHMocHJldiA9PiBbLi4ucHJldiwgZmlyc3RTY3JlZW5zaG90XSk7XG5cbiAgICAgICAgICAgICAgICAvLyBEZXRhbGxlcyBkZSBsYSBvcGVyYWNpw7NuXG4gICAgICAgICAgICAgICAgb3BlcmF0aW9uRGV0YWlscyA9IGBDYXB0dXJhIGFwbGljYWRhIGEgbGEgdGltZWxpbmUgZGVzZGUgJHtzdGFydFRpbWUudG9GaXhlZCgxKX1zIGhhc3RhICR7ZW5kVGltZS50b0ZpeGVkKDEpfXNgO1xuXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coYEltYWdlbiBhw7FhZGlkYSBhIGxhIHRpbWVsaW5lIGRlc2RlICR7c3RhcnRUaW1lfXMgaGFzdGEgJHtlbmRUaW1lfXM6ICR7Zmlyc3RTY3JlZW5zaG90LnNjcmVlbnNob3RQYXRofWApO1xuICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBhbCBhw7FhZGlyIGltYWdlbiBhIGxhIHRpbWVsaW5lOlwiLCBlcnJvcik7XG4gICAgICAgICAgICAgICAgYWN0aW9uU3VjY2Vzc2Z1bCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIG9wZXJhdGlvbkRldGFpbHMgPSBgRXJyb3IgYWwgYcOxYWRpciBpbWFnZW46ICR7ZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiBTdHJpbmcoZXJyb3IpfWA7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJDb21tYW5kRXhlY3V0b3Igbm8gZGlzcG9uaWJsZVwiKTtcbiAgICAgICAgICAgICAgYWN0aW9uU3VjY2Vzc2Z1bCA9IGZhbHNlO1xuICAgICAgICAgICAgICBvcGVyYXRpb25EZXRhaWxzID0gXCJDb21tYW5kRXhlY3V0b3Igbm8gZGlzcG9uaWJsZVwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEVzdGFibGVjZXIgZXN0YWRvIGZpbmFsIHNlZ8O6biBlbCByZXN1bHRhZG9cbiAgICAgICAgc2V0QWN0aW9uU3VjY2VzcyhhY3Rpb25TdWNjZXNzZnVsKTtcblxuICAgICAgICAvLyBDb21wb25lciBlbCBtZW5zYWplIGluZm9ybWF0aXZvXG4gICAgICAgIGxldCBhY3Rpb25NZXNzYWdlO1xuICAgICAgICBpZiAoYWN0aW9uRGV0ZWN0ZWQpIHtcbiAgICAgICAgICAvLyBTaSBzZSBkZXRlY3TDsyB1bmEgYWNjacOzbiBlc3BlY8OtZmljYSAoY29tbyBhZ3JlZ2FyIGNhcHR1cmEgbyB0cmFuc2ljacOzbilcbiAgICAgICAgICBhY3Rpb25NZXNzYWdlID0gYWN0aW9uU3VjY2Vzc2Z1bFxuICAgICAgICAgICAgPyAoc2NyZWVuc2hvdFRvQWRkXG4gICAgICAgICAgICAgICA/IGDinKggJHtvcGVyYXRpb25EZXRhaWxzIHx8ICdDYXB0dXJhIGFwbGljYWRhIGNvcnJlY3RhbWVudGUnfWBcbiAgICAgICAgICAgICAgIDogYOKcqCAke29wZXJhdGlvbkRldGFpbHMgfHwgJ1RyYW5zaWNpw7NuIGFwbGljYWRhIGNvcnJlY3RhbWVudGUnfWApXG4gICAgICAgICAgICA6IGDinYwgRXJyb3I6ICR7b3BlcmF0aW9uRGV0YWlscyB8fCAnTm8gc2UgcHVkbyBjb21wbGV0YXIgbGEgb3BlcmFjacOzbi4nfWA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gU2kgbm8gc2UgZGV0ZWN0w7MgbmluZ3VuYSBhY2Npw7NuIGVzcGVjw61maWNhLCBtb3N0cmFyIHVuIG1lbnNhamUgcHJlZGV0ZXJtaW5hZG9cbiAgICAgICAgICBhY3Rpb25NZXNzYWdlID0gXCLihLnvuI8gRXN0YSDDoXJlYSBlcyBwYXJhIGVqZWN1dGFyIGFjY2lvbmVzIGVzcGVjw61maWNhcyBlbiBsYSB0aW1lbGluZS4gU2kgZGVzZWFzIGNvbnZlcnNhciwgcG9yIGZhdm9yIHV0aWxpemEgZWwgY2hhdC5cIjtcbiAgICAgICAgICBzZXRBY3Rpb25TdWNjZXNzKG51bGwpOyAvLyBOZXV0cm8sIG5pIMOpeGl0byBuaSBlcnJvclxuICAgICAgICB9XG5cbiAgICAgICAgc2V0TGFzdEFjdGlvbkluZm8oYWN0aW9uTWVzc2FnZSk7XG4gICAgICAgIHNldFNob3dBY3Rpb25JbmZvKHRydWUpO1xuXG4gICAgICAgIC8vIEHDsWFkaXIgbGEgcmVzcHVlc3RhIGRlbCBhc2lzdGVudGUgYWwgY2hhdCBpbnRlcm5vIChubyBzZSBtdWVzdHJhKVxuICAgICAgICBjb25zdCBhc3Npc3RhbnRNZXNzYWdlOiBDaGF0TWVzc2FnZSA9IHtcbiAgICAgICAgICByb2xlOiAnYXNzaXN0YW50JyxcbiAgICAgICAgICBjb250ZW50OiByZXNwb25zZS5yZXNwb25zZSArIChhY3Rpb25EZXRlY3RlZCAmJiBhY3Rpb25TdWNjZXNzZnVsXG4gICAgICAgICAgICA/IChzY3JlZW5zaG90VG9BZGRcbiAgICAgICAgICAgICAgPyBgXFxuXFxu4pyFICoqQ2FwdHVyYSBkZSBwYW50YWxsYSBhcGxpY2FkYSBhIGxhIHRpbWVsaW5lKipcXG4tIFVSTDogJHtzY3JlZW5zaG90VG9BZGQudXJsfVxcbi0gVGllbXBvOiBkZXNkZSAke3N0YXJ0VGltZX1zIGhhc3RhICR7ZW5kVGltZX1zXFxuLSBDb25maWFuemE6ICR7TWF0aC5yb3VuZChkZXRlY3Rpb25JbmZvPy5jb25maWRlbmNlICogMTAwKX0lYFxuICAgICAgICAgICAgICA6IGBcXG5cXG7inIUgKipUcmFuc2ljacOzbiBhcGxpY2FkYSBhIGxhIHRpbWVsaW5lKipcXG4tIFRpZW1wbzogZGVzZGUgJHtzdGFydFRpbWV9cyBoYXN0YSAke2VuZFRpbWV9c1xcbi0gQ29uZmlhbnphOiAke01hdGgucm91bmQoZGV0ZWN0aW9uSW5mbz8uY29uZmlkZW5jZSAqIDEwMCl9JWApXG4gICAgICAgICAgICA6ICcnKSxcbiAgICAgICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCksXG4gICAgICAgICAgZGV0ZWN0aW9uSW5mbzogZGV0ZWN0aW9uSW5mb1xuICAgICAgICB9O1xuICAgICAgICBzZXRDaGF0TWVzc2FnZXMocHJldk1lc3NhZ2VzID0+IFsuLi5wcmV2TWVzc2FnZXMsIGFzc2lzdGFudE1lc3NhZ2VdKTtcblxuICAgICAgICAvLyBPY3VsdGFyIGxhIGluZm9ybWFjacOzbiBkZSBhY2Npw7NuIGRlc3B1w6lzIGRlIDQgc2VndW5kb3NcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgc2V0U2hvd0FjdGlvbkluZm8oZmFsc2UpO1xuICAgICAgICB9LCA0MDAwKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIE1vc3RyYXIgbWVuc2FqZSBkZSBlcnJvciBicmV2ZW1lbnRlXG4gICAgICAgIHNldEFjdGlvblN1Y2Nlc3MoZmFsc2UpO1xuICAgICAgICBzZXRMYXN0QWN0aW9uSW5mbyhg4p2MIEVycm9yOiAke3Jlc3BvbnNlLmVycm9yIHx8ICdObyBzZSBwdWRvIHByb2Nlc2FyIHR1IG1lbnNhamUuJ31gKTtcbiAgICAgICAgc2V0U2hvd0FjdGlvbkluZm8odHJ1ZSk7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHNldFNob3dBY3Rpb25JbmZvKGZhbHNlKTtcbiAgICAgICAgfSwgMzAwMCk7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGFsIGVudmlhciBtZW5zYWplOicsIGVycm9yKTtcbiAgICAgIC8vIE1vc3RyYXIgbWVuc2FqZSBkZSBlcnJvciBicmV2ZW1lbnRlXG4gICAgICBzZXRBY3Rpb25TdWNjZXNzKGZhbHNlKTtcbiAgICAgIHNldExhc3RBY3Rpb25JbmZvKGDinYwgRXJyb3I6ICR7ZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnRXJyb3IgZGUgY29tdW5pY2FjacOzbiBjb24gZWwgc2VydmljaW8gZGUgSUEuJ31gKTtcbiAgICAgIHNldFNob3dBY3Rpb25JbmZvKHRydWUpO1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHNldFNob3dBY3Rpb25JbmZvKGZhbHNlKTtcbiAgICAgIH0sIDMwMDApO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBzZXRJc1NlbmRpbmcoZmFsc2UpO1xuICAgIH1cbiAgfTtcblxuICAvLyBGdW5jacOzbiBwYXJhIG1hbmVqYXIgZWwgZW52w61vIGRlbCBtZW5zYWplIGNvbiBFbnRlclxuICBjb25zdCBoYW5kbGVLZXlQcmVzcyA9IChlOiBSZWFjdC5LZXlib2FyZEV2ZW50PEhUTUxUZXh0QXJlYUVsZW1lbnQ+KSA9PiB7XG4gICAgaWYgKGUua2V5ID09PSAnRW50ZXInICYmICFlLnNoaWZ0S2V5KSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBzZW5kQ29tbWFuZCgpO1xuICAgIH1cbiAgfTtcblxuICBpZiAoIXZpc2libGUpIHJldHVybiBudWxsO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgcmVmPXttb2RhbFJlZn1cbiAgICAgIHN0eWxlPXt7XG4gICAgICAgIHBvc2l0aW9uOiAnZml4ZWQnLFxuICAgICAgICBsZWZ0OiBwb3NpdGlvbi54LFxuICAgICAgICB0b3A6IHBvc2l0aW9uLnksXG4gICAgICAgIHpJbmRleDogOTk5OSxcbiAgICAgICAgYmFja2dyb3VuZDogJ2xpbmVhci1ncmFkaWVudCgxMzVkZWcsIHJnYmEoMzUsIDIwLCA2MCwgMC45NSkgMCUsIHJnYmEoNDUsIDI1LCA4NSwgMC45NSkgMTAwJSknLFxuICAgICAgICBib3JkZXJSYWRpdXM6ICcxMnB4JyxcbiAgICAgICAgYm94U2hhZG93OiAnMCA4cHggMzJweCByZ2JhKDAsIDAsIDAsIDAuNiksIDAgMCAwIDFweCByZ2JhKDE1NiwgOTAsIDI1MCwgMC4zKScsXG4gICAgICAgIHBhZGRpbmc6ICcyMHB4JyxcbiAgICAgICAgd2lkdGg6ICczODBweCcsXG4gICAgICAgIGNvbG9yOiAnd2hpdGUnLFxuICAgICAgICBmb250RmFtaWx5OiAnSW50ZXIsIHN5c3RlbS11aSwgc2Fucy1zZXJpZicsXG4gICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCByZ2JhKDE1NiwgOTAsIDI1MCwgMC42KScsXG4gICAgICAgIGJhY2tkcm9wRmlsdGVyOiAnYmx1cigxMHB4KScsXG4gICAgICAgIGFuaW1hdGlvbjogJ2ZhZGVJbiAwLjNzIGVhc2UnLFxuICAgICAgfX1cbiAgICA+XG4gICAgICA8c3R5bGU+XG4gICAgICAgIHtgXG4gICAgICAgICAgQGtleWZyYW1lcyBmYWRlSW4ge1xuICAgICAgICAgICAgZnJvbSB7IG9wYWNpdHk6IDA7IHRyYW5zZm9ybTogc2NhbGUoMC45NSk7IH1cbiAgICAgICAgICAgIHRvIHsgb3BhY2l0eTogMTsgdHJhbnNmb3JtOiBzY2FsZSgxKTsgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBAa2V5ZnJhbWVzIHB1bHNlIHtcbiAgICAgICAgICAgIDAlIHsgYm94LXNoYWRvdzogMCAwIDAgMCByZ2JhKDE1NiwgOTAsIDI1MCwgMC41KTsgfVxuICAgICAgICAgICAgNzAlIHsgYm94LXNoYWRvdzogMCAwIDAgMTBweCByZ2JhKDE1NiwgOTAsIDI1MCwgMCk7IH1cbiAgICAgICAgICAgIDEwMCUgeyBib3gtc2hhZG93OiAwIDAgMCAwIHJnYmEoMTU2LCA5MCwgMjUwLCAwKTsgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBAa2V5ZnJhbWVzIGdsb3cge1xuICAgICAgICAgICAgMCUgeyBib3JkZXItY29sb3I6IHJnYmEoMTU2LCA5MCwgMjUwLCAwLjYpOyB9XG4gICAgICAgICAgICA1MCUgeyBib3JkZXItY29sb3I6IHJnYmEoMTU2LCA5MCwgMjUwLCAwLjkpOyB9XG4gICAgICAgICAgICAxMDAlIHsgYm9yZGVyLWNvbG9yOiByZ2JhKDE1NiwgOTAsIDI1MCwgMC42KTsgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBAa2V5ZnJhbWVzIHNwaW4ge1xuICAgICAgICAgICAgMCUgeyB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTsgfVxuICAgICAgICAgICAgMTAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7IH1cbiAgICAgICAgICB9XG4gICAgICAgIGB9XG4gICAgICA8L3N0eWxlPlxuXG4gICAgICA8ZGl2IHN0eWxlPXt7XG4gICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAganVzdGlmeUNvbnRlbnQ6ICdzcGFjZS1iZXR3ZWVuJyxcbiAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICAgIG1hcmdpbkJvdHRvbTogJzE2cHgnLFxuICAgICAgICBib3JkZXJCb3R0b206ICcxcHggc29saWQgcmdiYSgxNTYsIDkwLCAyNTAsIDAuNCknLFxuICAgICAgICBwYWRkaW5nQm90dG9tOiAnMTJweCcsXG4gICAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnXG4gICAgICB9fT5cbiAgICAgICAgPGRpdiBzdHlsZT17e1xuICAgICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgICAgIGJvdHRvbTogJy0xcHgnLFxuICAgICAgICAgIGxlZnQ6ICcwJyxcbiAgICAgICAgICB3aWR0aDogJzYwJScsXG4gICAgICAgICAgaGVpZ2h0OiAnMXB4JyxcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAnbGluZWFyLWdyYWRpZW50KDkwZGVnLCByZ2JhKDE1NiwgOTAsIDI1MCwgMC44KSAwJSwgcmdiYSgxNTYsIDkwLCAyNTAsIDApIDEwMCUpJyxcbiAgICAgICAgICBhbmltYXRpb246ICdnbG93IDEuNXMgaW5maW5pdGUgYWx0ZXJuYXRlJ1xuICAgICAgICB9fT48L2Rpdj5cblxuICAgICAgICA8aDMgc3R5bGU9e3tcbiAgICAgICAgICBtYXJnaW46IDAsXG4gICAgICAgICAgZm9udFNpemU6ICcxOHB4JyxcbiAgICAgICAgICBmb250V2VpZ2h0OiAnNjAwJyxcbiAgICAgICAgICBjb2xvcjogJ3JnYmEoMTU2LCA5MCwgMjUwLCAxLjApJyxcbiAgICAgICAgICB0ZXh0U2hhZG93OiAnMCAycHggNHB4IHJnYmEoMCwwLDAsMC4zKSdcbiAgICAgICAgfX0+XG4gICAgICAgICAge3NlbGVjdGVkSXRlbXMubGVuZ3RoID4gMSA/IGAke3NlbGVjdGVkSXRlbXMubGVuZ3RofSBlbGVtZW50b3Mgc2VsZWNjaW9uYWRvc2AgOiAnRWxlbWVudG8gc2VsZWNjaW9uYWRvJ31cbiAgICAgICAgPC9oMz5cbiAgICAgICAgPGRpdiBzdHlsZT17eyBkaXNwbGF5OiAnZmxleCcsIGdhcDogJzhweCcgfX0+XG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgb25DbGljaz17aGFuZGxlQ2xvc2V9XG4gICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAncmdiYSgxNTYsIDkwLCAyNTAsIDAuMiknLFxuICAgICAgICAgICAgICBib3JkZXI6ICdub25lJyxcbiAgICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAnNTAlJyxcbiAgICAgICAgICAgICAgY29sb3I6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOSknLFxuICAgICAgICAgICAgICBjdXJzb3I6ICdwb2ludGVyJyxcbiAgICAgICAgICAgICAgZm9udFNpemU6ICcxNnB4JyxcbiAgICAgICAgICAgICAgcGFkZGluZzogJzVweCcsXG4gICAgICAgICAgICAgIHdpZHRoOiAnMjRweCcsXG4gICAgICAgICAgICAgIGhlaWdodDogJzI0cHgnLFxuICAgICAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgICAgICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgICAgICAgICAgIGxpbmVIZWlnaHQ6ICcxJyxcbiAgICAgICAgICAgICAgdHJhbnNpdGlvbjogJ2FsbCAwLjJzIGVhc2UnLFxuICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIG9uTW91c2VPdmVyPXsoZSkgPT4ge1xuICAgICAgICAgICAgICBlLmN1cnJlbnRUYXJnZXQuc3R5bGUuYmFja2dyb3VuZCA9ICdyZ2JhKDE1NiwgOTAsIDI1MCwgMC40KSc7XG4gICAgICAgICAgICAgIGUuY3VycmVudFRhcmdldC5zdHlsZS50cmFuc2Zvcm0gPSAnc2NhbGUoMS4xKSc7XG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgb25Nb3VzZU91dD17KGUpID0+IHtcbiAgICAgICAgICAgICAgZS5jdXJyZW50VGFyZ2V0LnN0eWxlLmJhY2tncm91bmQgPSAncmdiYSgxNTYsIDkwLCAyNTAsIDAuMiknO1xuICAgICAgICAgICAgICBlLmN1cnJlbnRUYXJnZXQuc3R5bGUudHJhbnNmb3JtID0gJ3NjYWxlKDEpJztcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgw5dcbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgICAgey8qIMOBcmVhIGRlIGNvbWFuZG8vZm9ybXVsYXJpbyAqL31cbiAgICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luVG9wOiAnMTJweCcsIG1hcmdpbkJvdHRvbTogJzE2cHgnIH19PlxuICAgICAgICB7c2hvd0FjdGlvbkluZm8gJiYgbGFzdEFjdGlvbkluZm8gJiYgKFxuICAgICAgICAgIDxkaXYgc3R5bGU9e3tcbiAgICAgICAgICAgIHBhZGRpbmc6ICcxMnB4JyxcbiAgICAgICAgICAgIG1hcmdpbkJvdHRvbTogJzE2cHgnLFxuICAgICAgICAgICAgYmFja2dyb3VuZDogYWN0aW9uU3VjY2VzcyA9PT0gZmFsc2VcbiAgICAgICAgICAgICAgPyAnbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCByZ2JhKDIyMCwgNTAsIDUwLCAwLjE1KSwgcmdiYSgyMjAsIDUwLCA1MCwgMC4wNSkpJ1xuICAgICAgICAgICAgICA6IGFjdGlvblN1Y2Nlc3MgPT09IHRydWVcbiAgICAgICAgICAgICAgICA/ICdsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIHJnYmEoNzAsIDIwMCwgMTIwLCAwLjE1KSwgcmdiYSg3MCwgMjAwLCAxMjAsIDAuMDUpKSdcbiAgICAgICAgICAgICAgICA6ICdsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIHJnYmEoMTU2LCA5MCwgMjUwLCAwLjE1KSwgcmdiYSgxNTYsIDkwLCAyNTAsIDAuMDUpKScsXG4gICAgICAgICAgICBib3JkZXJSYWRpdXM6ICc4cHgnLFxuICAgICAgICAgICAgZm9udFNpemU6ICcxNHB4JyxcbiAgICAgICAgICAgIGJvcmRlcjogYDFweCBzb2xpZCAke2FjdGlvblN1Y2Nlc3MgPT09IGZhbHNlXG4gICAgICAgICAgICAgID8gJ3JnYmEoMjIwLCA1MCwgNTAsIDAuMyknXG4gICAgICAgICAgICAgIDogYWN0aW9uU3VjY2VzcyA9PT0gdHJ1ZVxuICAgICAgICAgICAgICAgID8gJ3JnYmEoNzAsIDIwMCwgMTIwLCAwLjMpJ1xuICAgICAgICAgICAgICAgIDogJ3JnYmEoMTU2LCA5MCwgMjUwLCAwLjMpJ31gLFxuICAgICAgICAgICAgYm94U2hhZG93OiAnMCAycHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMSknLFxuICAgICAgICAgICAgdHJhbnNpdGlvbjogJ2FsbCAwLjNzIGVhc2UnLFxuICAgICAgICAgICAgYW5pbWF0aW9uOiBhY3Rpb25TdWNjZXNzID8gJ3B1bHNlIDJzIGluZmluaXRlJyA6ICcnLFxuICAgICAgICAgICAgY29sb3I6IGFjdGlvblN1Y2Nlc3MgPT09IGZhbHNlXG4gICAgICAgICAgICAgID8gJ3JnYmEoMjU1LCAyMjAsIDIyMCwgMC45KSdcbiAgICAgICAgICAgICAgOiBhY3Rpb25TdWNjZXNzID09PSB0cnVlXG4gICAgICAgICAgICAgICAgPyAncmdiYSgyMjAsIDI1NSwgMjMwLCAwLjkpJ1xuICAgICAgICAgICAgICAgIDogJ3JnYmEoMjQwLCAyMzAsIDI1NSwgMC45KScsXG4gICAgICAgICAgfX0+XG4gICAgICAgICAgICA8ZGl2IHN0eWxlPXt7XG4gICAgICAgICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgICAgICAgYWxpZ25JdGVtczogJ2ZsZXgtc3RhcnQnLFxuICAgICAgICAgICAgICBnYXA6ICc4cHgnLFxuICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICBmbGV4U2hyaW5rOiAwLFxuICAgICAgICAgICAgICAgIG1hcmdpblRvcDogJzJweCdcbiAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAge2FjdGlvblN1Y2Nlc3MgPT09IGZhbHNlXG4gICAgICAgICAgICAgICAgICA/ICfinYwnXG4gICAgICAgICAgICAgICAgICA6IGFjdGlvblN1Y2Nlc3MgPT09IHRydWVcbiAgICAgICAgICAgICAgICAgICAgPyAn4pyoJ1xuICAgICAgICAgICAgICAgICAgICA6ICfihLnvuI8nfVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdj57bGFzdEFjdGlvbkluZm99PC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKX1cblxuICAgICAgICA8ZGl2IHN0eWxlPXt7XG4gICAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICAgIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nLFxuICAgICAgICAgIGdhcDogJzEycHgnLFxuICAgICAgICAgIGJvcmRlclRvcDogJzFweCBzb2xpZCByZ2JhKDE1NiwgOTAsIDI1MCwgMC4yKScsXG4gICAgICAgICAgcGFkZGluZ1RvcDogJzE2cHgnLFxuICAgICAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnXG4gICAgICAgIH19PlxuICAgICAgICAgIDx0ZXh0YXJlYVxuICAgICAgICAgICAgcmVmPXt0ZXh0YXJlYVJlZn1cbiAgICAgICAgICAgIHZhbHVlPXtjaGF0SW5wdXR9XG4gICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldENoYXRJbnB1dChlLnRhcmdldC52YWx1ZSl9XG4gICAgICAgICAgICBvbktleURvd249e2hhbmRsZUtleVByZXNzfVxuICAgICAgICAgICAgZGlzYWJsZWQ9e2lzU2VuZGluZ31cbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiRXNjcmliZSB1biBjb21hbmRvLi4uIChlajogJ2FwbGljYSBjYXB0dXJhIGEgbGEgdGltZWxpbmUnIG8gJ2HDsWFkZSB0cmFuc2ljacOzbicpXCJcbiAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgICAgICAgIGhlaWdodDogJzgwcHgnLFxuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAncmdiYSgzMCwgMTUsIDUwLCAwLjUpJyxcbiAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkIHJnYmEoMTU2LCA5MCwgMjUwLCAwLjQpJyxcbiAgICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAnOHB4JyxcbiAgICAgICAgICAgICAgcGFkZGluZzogJzEycHggMTRweCcsXG4gICAgICAgICAgICAgIGNvbG9yOiAnd2hpdGUnLFxuICAgICAgICAgICAgICBmb250U2l6ZTogJzE0cHgnLFxuICAgICAgICAgICAgICBvdXRsaW5lOiAnbm9uZScsXG4gICAgICAgICAgICAgIHJlc2l6ZTogJ25vbmUnLFxuICAgICAgICAgICAgICB0cmFuc2l0aW9uOiAnYm9yZGVyLWNvbG9yIDAuM3MgZWFzZSwgYm94LXNoYWRvdyAwLjNzIGVhc2UnLFxuICAgICAgICAgICAgICBib3hTaGFkb3c6ICcwIDJweCA4cHggcmdiYSgwLCAwLCAwLCAwLjIpIGluc2V0JyxcbiAgICAgICAgICAgICAgZm9udEZhbWlseTogJ0ludGVyLCBzeXN0ZW0tdWksIHNhbnMtc2VyaWYnLFxuICAgICAgICAgICAgICBsaW5lSGVpZ2h0OiAnMS41J1xuICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIG9uRm9jdXM9eyhlKSA9PiB7XG4gICAgICAgICAgICAgIGUudGFyZ2V0LnN0eWxlLmJvcmRlckNvbG9yID0gJ3JnYmEoMTU2LCA5MCwgMjUwLCAwLjgpJztcbiAgICAgICAgICAgICAgZS50YXJnZXQuc3R5bGUuYm94U2hhZG93ID0gJzAgMnB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMikgaW5zZXQsIDAgMCAwIDJweCByZ2JhKDE1NiwgOTAsIDI1MCwgMC4xKSc7XG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgb25CbHVyPXsoZSkgPT4ge1xuICAgICAgICAgICAgICBlLnRhcmdldC5zdHlsZS5ib3JkZXJDb2xvciA9ICdyZ2JhKDE1NiwgOTAsIDI1MCwgMC40KSc7XG4gICAgICAgICAgICAgIGUudGFyZ2V0LnN0eWxlLmJveFNoYWRvdyA9ICcwIDJweCA4cHggcmdiYSgwLCAwLCAwLCAwLjIpIGluc2V0JztcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgLz5cbiAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICBvbkNsaWNrPXtzZW5kQ29tbWFuZH1cbiAgICAgICAgICAgIGRpc2FibGVkPXtpc1NlbmRpbmcgfHwgIWNoYXRJbnB1dC50cmltKCl9XG4gICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBpc1NlbmRpbmcgfHwgIWNoYXRJbnB1dC50cmltKClcbiAgICAgICAgICAgICAgICA/ICdyZ2JhKDE1NiwgOTAsIDI1MCwgMC4zKSdcbiAgICAgICAgICAgICAgICA6ICdsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCByZ2JhKDE1NiwgOTAsIDI1MCwgMC44KSAwJSwgcmdiYSgxMjAsIDYwLCAyMjAsIDAuOSkgMTAwJSknLFxuICAgICAgICAgICAgICBib3JkZXI6ICdub25lJyxcbiAgICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAnOHB4JyxcbiAgICAgICAgICAgICAgY29sb3I6ICd3aGl0ZScsXG4gICAgICAgICAgICAgIGN1cnNvcjogaXNTZW5kaW5nIHx8ICFjaGF0SW5wdXQudHJpbSgpID8gJ25vdC1hbGxvd2VkJyA6ICdwb2ludGVyJyxcbiAgICAgICAgICAgICAgcGFkZGluZzogJzEycHggMTZweCcsXG4gICAgICAgICAgICAgIGZvbnRTaXplOiAnMTRweCcsXG4gICAgICAgICAgICAgIGZvbnRXZWlnaHQ6ICc1MDAnLFxuICAgICAgICAgICAgICB0cmFuc2l0aW9uOiAnYWxsIDAuMnMgZWFzZScsXG4gICAgICAgICAgICAgIGJveFNoYWRvdzogaXNTZW5kaW5nIHx8ICFjaGF0SW5wdXQudHJpbSgpXG4gICAgICAgICAgICAgICAgPyAnbm9uZSdcbiAgICAgICAgICAgICAgICA6ICcwIDRweCAxMnB4IHJnYmEoMTU2LCA5MCwgMjUwLCAwLjMpJyxcbiAgICAgICAgICAgICAgdGV4dFNoYWRvdzogJzAgMXB4IDJweCByZ2JhKDAsMCwwLDAuMiknXG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgb25Nb3VzZU92ZXI9eyhlKSA9PiB7XG4gICAgICAgICAgICAgIGlmICghaXNTZW5kaW5nICYmIGNoYXRJbnB1dC50cmltKCkpIHtcbiAgICAgICAgICAgICAgICBlLmN1cnJlbnRUYXJnZXQuc3R5bGUudHJhbnNmb3JtID0gJ3RyYW5zbGF0ZVkoLTJweCknO1xuICAgICAgICAgICAgICAgIGUuY3VycmVudFRhcmdldC5zdHlsZS5ib3hTaGFkb3cgPSAnMCA2cHggMTZweCByZ2JhKDE1NiwgOTAsIDI1MCwgMC40KSc7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH19XG4gICAgICAgICAgICBvbk1vdXNlT3V0PXsoZSkgPT4ge1xuICAgICAgICAgICAgICBpZiAoIWlzU2VuZGluZyAmJiBjaGF0SW5wdXQudHJpbSgpKSB7XG4gICAgICAgICAgICAgICAgZS5jdXJyZW50VGFyZ2V0LnN0eWxlLnRyYW5zZm9ybSA9ICd0cmFuc2xhdGVZKDApJztcbiAgICAgICAgICAgICAgICBlLmN1cnJlbnRUYXJnZXQuc3R5bGUuYm94U2hhZG93ID0gJzAgNHB4IDEycHggcmdiYSgxNTYsIDkwLCAyNTAsIDAuMyknO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9fVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHtpc1NlbmRpbmcgPyAoXG4gICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3sgZGlzcGxheTogJ2ZsZXgnLCBhbGlnbkl0ZW1zOiAnY2VudGVyJywganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLCBnYXA6ICc4cHgnIH19PlxuICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgIHdpZHRoOiAnMTRweCcsXG4gICAgICAgICAgICAgICAgICBoZWlnaHQ6ICcxNHB4JyxcbiAgICAgICAgICAgICAgICAgIGJvcmRlclJhZGl1czogJzUwJScsXG4gICAgICAgICAgICAgICAgICBib3JkZXI6ICcycHggc29saWQgcmdiYSgyNTUsMjU1LDI1NSwwLjMpJyxcbiAgICAgICAgICAgICAgICAgIGJvcmRlclRvcENvbG9yOiAnd2hpdGUnLFxuICAgICAgICAgICAgICAgICAgYW5pbWF0aW9uOiAnc3BpbiAxcyBsaW5lYXIgaW5maW5pdGUnXG4gICAgICAgICAgICAgICAgfX0+PC9kaXY+XG4gICAgICAgICAgICAgICAgPHNwYW4+UHJvY2VzYW5kby4uLjwvc3Bhbj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApIDogJ0VqZWN1dGFyJ31cbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFNlbGVjdGlvbk1vZGFsO1xuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlRWZmZWN0IiwidXNlU3RhdGUiLCJ1c2VSZWYiLCJmaWx0ZXIiLCJzdWJqZWN0IiwiZGlzcGF0Y2giLCJUSU1FTElORV9TRUxFQ1RJT05fTU9EQUwiLCJBSVNlcnZpY2UiLCJDb21tYW5kRXhlY3V0b3JTZXJ2aWNlIiwiZ2VuZXJhdGVJZCIsIkFERF9JTUFHRSIsIkFERF9URVhUIiwiU2VsZWN0aW9uTW9kYWwiLCJ2aXNpYmxlIiwic2V0VmlzaWJsZSIsInBvc2l0aW9uIiwic2V0UG9zaXRpb24iLCJ4IiwieSIsInNlbGVjdGVkSXRlbXMiLCJzZXRTZWxlY3RlZEl0ZW1zIiwiaXNTZW5kaW5nIiwic2V0SXNTZW5kaW5nIiwibGFzdEFjdGlvbkluZm8iLCJzZXRMYXN0QWN0aW9uSW5mbyIsInNob3dBY3Rpb25JbmZvIiwic2V0U2hvd0FjdGlvbkluZm8iLCJhY3Rpb25TdWNjZXNzIiwic2V0QWN0aW9uU3VjY2VzcyIsIm1vZGFsUmVmIiwidGV4dGFyZWFSZWYiLCJjaGF0TWVzc2FnZXMiLCJzZXRDaGF0TWVzc2FnZXMiLCJjaGF0SW5wdXQiLCJzZXRDaGF0SW5wdXQiLCJhZGRlZFNjcmVlbnNob3RzIiwic2V0QWRkZWRTY3JlZW5zaG90cyIsImFkZGVkVHJhbnNpdGlvbnMiLCJzZXRBZGRlZFRyYW5zaXRpb25zIiwic2VsZWN0aW9uRXZlbnRzIiwicGlwZSIsImtleSIsInN1YnNjcmlwdGlvbiIsInN1YnNjcmliZSIsImV2ZW50IiwicGF5bG9hZCIsInZhbHVlIiwiY29uc29sZSIsImxvZyIsImxlbmd0aCIsIk1hdGgiLCJtaW4iLCJ3aW5kb3ciLCJpbm5lcldpZHRoIiwiaW5uZXJIZWlnaHQiLCJzZXRUaW1lb3V0IiwiY3VycmVudCIsImZvY3VzIiwiaGFuZGxlQ2xpY2tPdXRzaWRlIiwiY29udGFpbnMiLCJ0YXJnZXQiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJ1bnN1YnNjcmliZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJoYW5kbGVDbG9zZSIsImFwcGx5VHJhbnNpdGlvbiIsInRyYW5zaXRpb25QYXRoIiwic3RhcnRUaW1lIiwiZW5kVGltZSIsImZpcnN0SXRlbSIsImRpc3BsYXkiLCJmcm9tIiwidG8iLCJpc0dpZiIsInRvTG93ZXJDYXNlIiwiZW5kc1dpdGgiLCJtYWluVHJhbnNpdGlvbklkIiwibWFpblRyYW5zaXRpb25QYXlsb2FkIiwiaWQiLCJ0eXBlIiwiZGV0YWlscyIsInNyYyIsIndpZHRoIiwiaGVpZ2h0Iiwib3BhY2l0eSIsInNjYWxlTW9kZSIsImxlZnQiLCJ0b3AiLCJvcmlnaW5YIiwib3JpZ2luWSIsIm1ldGFkYXRhIiwiaXNUcmFuc2l0aW9uIiwiZnVsbFNjcmVlbiIsIm9wdGlvbnMiLCJ0cmFja0lkIiwidGh1bWJuYWlsSWQiLCJ0aHVtYm5haWxQYXlsb2FkIiwiaXNUaHVtYm5haWwiLCJyZWxhdGVkVG9JZCIsInRleHRJZCIsInRleHRQYXlsb2FkIiwidGV4dCIsImZvbnRTaXplIiwiZm9udEZhbWlseSIsImZvbnRXZWlnaHQiLCJjb2xvciIsInRleHRBbGlnbiIsImJhY2tncm91bmRDb2xvciIsImJvcmRlclJhZGl1cyIsImlzVHJhbnNpdGlvbkxhYmVsIiwiZXJyb3IiLCJjb21tYW5kRXhlY3V0b3IiLCJnZXRFeGVjdXRvciIsInN1Y2Nlc3MiLCJhZGRWaWRlbyIsInByZXYiLCJ0b0ZpeGVkIiwiRXJyb3IiLCJtZXNzYWdlIiwiU3RyaW5nIiwic2VuZENvbW1hbmQiLCJ0cmltIiwidXNlck1lc3NhZ2UiLCJyb2xlIiwiY29udGVudCIsInRpbWVzdGFtcCIsIkRhdGUiLCJyZXNwb25zZSIsInNlbmRDaGF0TWVzc2FnZSIsImFjdGlvblN1Y2Nlc3NmdWwiLCJvcGVyYXRpb25EZXRhaWxzIiwic2NyZWVuc2hvdFRvQWRkIiwiZGV0ZWN0aW9uSW5mbyIsImFjdGlvbkRldGVjdGVkIiwiYXBwbHlUcmFuc2l0aW9uRGV0ZWN0aW9uIiwiZGV0ZWN0ZWQiLCJjb25maWRlbmNlIiwidHJhbnNpdGlvblJlc3VsdCIsInJlYXNvbiIsInNob3dTY3JlZW5zaG90RGV0ZWN0aW9uIiwidXJsQW5hbHlzaXMiLCJjb250YWluc1VSTHMiLCJzY3JlZW5zaG90cyIsImZpcnN0U2NyZWVuc2hvdCIsImFkZEltYWdlIiwic2NyZWVuc2hvdFBhdGgiLCJhY3Rpb25NZXNzYWdlIiwiYXNzaXN0YW50TWVzc2FnZSIsInVybCIsInJvdW5kIiwicHJldk1lc3NhZ2VzIiwiaGFuZGxlS2V5UHJlc3MiLCJlIiwic2hpZnRLZXkiLCJwcmV2ZW50RGVmYXVsdCIsImRpdiIsInJlZiIsInN0eWxlIiwiekluZGV4IiwiYmFja2dyb3VuZCIsImJveFNoYWRvdyIsInBhZGRpbmciLCJib3JkZXIiLCJiYWNrZHJvcEZpbHRlciIsImFuaW1hdGlvbiIsImp1c3RpZnlDb250ZW50IiwiYWxpZ25JdGVtcyIsIm1hcmdpbkJvdHRvbSIsImJvcmRlckJvdHRvbSIsInBhZGRpbmdCb3R0b20iLCJib3R0b20iLCJoMyIsIm1hcmdpbiIsInRleHRTaGFkb3ciLCJnYXAiLCJidXR0b24iLCJvbkNsaWNrIiwiY3Vyc29yIiwibGluZUhlaWdodCIsInRyYW5zaXRpb24iLCJvbk1vdXNlT3ZlciIsImN1cnJlbnRUYXJnZXQiLCJ0cmFuc2Zvcm0iLCJvbk1vdXNlT3V0IiwibWFyZ2luVG9wIiwiZmxleFNocmluayIsImZsZXhEaXJlY3Rpb24iLCJib3JkZXJUb3AiLCJwYWRkaW5nVG9wIiwidGV4dGFyZWEiLCJvbkNoYW5nZSIsIm9uS2V5RG93biIsImRpc2FibGVkIiwicGxhY2Vob2xkZXIiLCJvdXRsaW5lIiwicmVzaXplIiwib25Gb2N1cyIsImJvcmRlckNvbG9yIiwib25CbHVyIiwiYm9yZGVyVG9wQ29sb3IiLCJzcGFuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./features/editor/timeline/selection-modal.tsx\n"));

/***/ })

});