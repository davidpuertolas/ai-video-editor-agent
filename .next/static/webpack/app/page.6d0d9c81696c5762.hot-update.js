"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./features/editor/scene/interactions.tsx":
/*!************************************************!*\
  !*** ./features/editor/scene/interactions.tsx ***!
  \************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SceneInteractions: function() { return /* binding */ SceneInteractions; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _interactify_selection__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @interactify/selection */ \"(app-pages-browser)/./node_modules/@interactify/selection/dist/selecto.esm.js\");\n/* harmony import */ var _interactify_moveable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @interactify/moveable */ \"(app-pages-browser)/./node_modules/@interactify/moveable/dist/index.es.js\");\n/* harmony import */ var _utils_scene__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/scene */ \"(app-pages-browser)/./features/editor/utils/scene.ts\");\n/* harmony import */ var _designcombo_events__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @designcombo/events */ \"(app-pages-browser)/./node_modules/@designcombo/events/dist/index.es.js\");\n/* harmony import */ var _designcombo_state__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @designcombo/state */ \"(app-pages-browser)/./node_modules/@designcombo/state/dist/index.es.js\");\n/* harmony import */ var _utils_target__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/target */ \"(app-pages-browser)/./features/editor/utils/target.ts\");\n/* harmony import */ var _store_use_store__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../store/use-store */ \"(app-pages-browser)/./features/editor/store/use-store.ts\");\n/* harmony import */ var _utils_time__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/time */ \"(app-pages-browser)/./features/editor/utils/time.ts\");\n/* harmony import */ var _store_use_layout_store__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../store/use-layout-store */ \"(app-pages-browser)/./features/editor/store/use-layout-store.ts\");\n/* __next_internal_client_entry_do_not_use__ SceneInteractions auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\nlet holdGroupPosition = null;\nlet dragStartEnd = false;\nfunction SceneInteractions(param) {\n    let { stateManager, viewerRef, zoom, size } = param;\n    _s();\n    const [targets, setTargets] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [selection, setSelection] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const { activeIds, setState, trackItemDetailsMap, trackItemsMap, playerRef, setSceneMoveableRef } = (0,_store_use_store__WEBPACK_IMPORTED_MODULE_7__[\"default\"])();\n    const { setActiveMenuItem, setShowMenuItem } = (0,_store_use_layout_store__WEBPACK_IMPORTED_MODULE_9__[\"default\"])();\n    const moveableRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [selectionInfo, setSelectionInfo] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(_utils_target__WEBPACK_IMPORTED_MODULE_6__.emptySelection);\n    // Constantes para el snap\n    const SNAP_THRESHOLD = 15; // Distancia en píxeles para activar el snap\n    const SNAP_EDGE_THRESHOLD = 5; // Umbral para considerar que un elemento está en el borde\n    // Función para aplicar snap a coordenadas\n    const applySnap = function(value, snapPoints) {\n        let threshold = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : SNAP_THRESHOLD;\n        for (const point of snapPoints){\n            if (Math.abs(value - point) <= threshold) {\n                return point;\n            }\n        }\n        return value;\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        var _playerRef_current;\n        const updateTargets = (time)=>{\n            const currentTime = time || (0,_utils_time__WEBPACK_IMPORTED_MODULE_8__.getCurrentTime)();\n            const { trackItemsMap } = _store_use_store__WEBPACK_IMPORTED_MODULE_7__[\"default\"].getState();\n            const targetIds = activeIds.filter((id)=>{\n                var _trackItemsMap_id, _trackItemsMap_id1;\n                return ((_trackItemsMap_id = trackItemsMap[id]) === null || _trackItemsMap_id === void 0 ? void 0 : _trackItemsMap_id.display.from) <= currentTime && ((_trackItemsMap_id1 = trackItemsMap[id]) === null || _trackItemsMap_id1 === void 0 ? void 0 : _trackItemsMap_id1.display.to) >= currentTime;\n            });\n            const targets = targetIds.map((id)=>(0,_utils_target__WEBPACK_IMPORTED_MODULE_6__.getTargetById)(id));\n            selection === null || selection === void 0 ? void 0 : selection.setSelectedTargets(targets);\n            const selInfo = (0,_utils_target__WEBPACK_IMPORTED_MODULE_6__.getSelectionByIds)(targetIds);\n            setSelectionInfo(selInfo);\n            setTargets(selInfo.targets);\n        };\n        const timer = setTimeout(()=>{\n            updateTargets();\n        });\n        const onSeeked = (v)=>{\n            setTimeout(()=>{\n                const { fps } = _store_use_store__WEBPACK_IMPORTED_MODULE_7__[\"default\"].getState();\n                const seekedTime = v.detail.frame / fps * 1000;\n                updateTargets(seekedTime);\n            });\n        };\n        playerRef === null || playerRef === void 0 ? void 0 : (_playerRef_current = playerRef.current) === null || _playerRef_current === void 0 ? void 0 : _playerRef_current.addEventListener(\"seeked\", onSeeked);\n        return ()=>{\n            var _playerRef_current;\n            playerRef === null || playerRef === void 0 ? void 0 : (_playerRef_current = playerRef.current) === null || _playerRef_current === void 0 ? void 0 : _playerRef_current.removeEventListener(\"seeked\", onSeeked);\n            clearTimeout(timer);\n        };\n    }, [\n        activeIds,\n        playerRef,\n        trackItemsMap\n    ]);\n    // Función para manejar la selección de elementos\n    const handleSelection = (ids)=>{\n        console.log(\"[DEBUG Interactions] Selecci\\xf3n de elementos:\", ids);\n        // Actualizar el estado de activeIds\n        stateManager.updateState({\n            activeIds: ids\n        }, {\n            updateHistory: false,\n            kind: \"layer:selection\"\n        });\n        // Si se ha seleccionado un solo elemento, cambiar inmediatamente al panel de atributos\n        if (ids && ids.length === 1) {\n            console.log(\"[DEBUG Interactions] Cambiando a panel de atributos directamente desde interactions\");\n            // FORZAR cambio directo al panel de atributos\n            setActiveMenuItem(\"attributes\");\n            setShowMenuItem(true);\n            // Forzar el evento de selección para asegurar que todos los componentes se actualicen\n            (0,_designcombo_events__WEBPACK_IMPORTED_MODULE_4__.dispatch)(_designcombo_state__WEBPACK_IMPORTED_MODULE_5__.LAYER_SELECTION, {\n                payload: {\n                    activeIds: ids\n                }\n            });\n            // Verificar el cambio\n            setTimeout(()=>{\n                const currentMenuItem = _store_use_layout_store__WEBPACK_IMPORTED_MODULE_9__[\"default\"].getState().activeMenuItem;\n                console.log(\"[DEBUG Interactions] Panel despu\\xe9s del cambio:\", currentMenuItem);\n            }, 100);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        var _viewerRef_current;\n        const selection = new _interactify_selection__WEBPACK_IMPORTED_MODULE_10__[\"default\"]({\n            container: (_viewerRef_current = viewerRef.current) === null || _viewerRef_current === void 0 ? void 0 : _viewerRef_current.infiniteViewer.getContainer(),\n            boundContainer: true,\n            hitRate: 0,\n            selectableTargets: [\n                \".designcombo-scene-item\"\n            ],\n            selectFromInside: false,\n            selectByClick: true,\n            toggleContinueSelect: \"shift\"\n        }).on(\"select\", (e)=>{\n            const ids = e.selected.map((el)=>(0,_utils_scene__WEBPACK_IMPORTED_MODULE_3__.getIdFromClassName)(el.className));\n            setTargets(e.selected);\n            // Usar la función handleSelection\n            handleSelection(ids);\n        }).on(\"dragStart\", (e)=>{\n            var _moveableRef_current;\n            const target = e.inputEvent.target;\n            dragStartEnd = false;\n            if (targets.includes(target)) {\n                e.stop();\n            }\n            if (target && (moveableRef === null || moveableRef === void 0 ? void 0 : (_moveableRef_current = moveableRef.current) === null || _moveableRef_current === void 0 ? void 0 : _moveableRef_current.moveable.isMoveableElement(target))) {\n                e.stop();\n            }\n        }).on(\"dragEnd\", ()=>{\n            dragStartEnd = true;\n        }).on(\"selectEnd\", (e)=>{\n            const moveable = moveableRef.current;\n            if (e.isDragStart) {\n                e.inputEvent.preventDefault();\n                setTimeout(()=>{\n                    if (!dragStartEnd) {\n                        moveable === null || moveable === void 0 ? void 0 : moveable.moveable.dragStart(e.inputEvent);\n                    }\n                });\n            } else {\n                const targets = e.selected;\n                const ids = targets.map((el)=>(0,_utils_scene__WEBPACK_IMPORTED_MODULE_3__.getIdFromClassName)(el.className));\n                // Usar la función handleSelection\n                handleSelection(ids);\n                setTargets(targets);\n            }\n        });\n        setSelection(selection);\n        return ()=>{\n            selection.destroy();\n        };\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const activeSelectionSubscription = stateManager.subscribeToActiveIds((newState)=>{\n            setState(newState);\n            // Si hay un solo elemento seleccionado, asegurarse de que se muestre el panel de atributos\n            if (newState.activeIds && newState.activeIds.length === 1) {\n                setActiveMenuItem(\"attributes\");\n                setShowMenuItem(true);\n            }\n        });\n        return ()=>{\n            activeSelectionSubscription.unsubscribe();\n        };\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        moveableRef.current.moveable.updateRect();\n    }, [\n        trackItemsMap\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        setSceneMoveableRef(moveableRef);\n    }, [\n        moveableRef\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_interactify_moveable__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n        ref: moveableRef,\n        rotationPosition: \"bottom\",\n        renderDirections: selectionInfo.controls,\n        ...selectionInfo.ables,\n        origin: false,\n        target: targets,\n        zoom: 1 / zoom,\n        className: \"designcombo-scene-moveable\",\n        onDrag: (param)=>{\n            let { target, beforeTranslate, inputEvent } = param;\n            const targetId = (0,_utils_scene__WEBPACK_IMPORTED_MODULE_3__.getIdFromClassName)(target.className);\n            const trackItem = trackItemDetailsMap[targetId];\n            // Obtener dimensiones del elemento\n            const targetWidth = target.offsetWidth;\n            const targetHeight = target.offsetHeight;\n            // Calcular la posición propuesta\n            let left = parseFloat(trackItem === null || trackItem === void 0 ? void 0 : trackItem.details.left) + beforeTranslate[0];\n            let top = parseFloat(trackItem === null || trackItem === void 0 ? void 0 : trackItem.details.top) + beforeTranslate[1];\n            // Puntos de snap para el eje X (izquierda, centro, derecha)\n            const snapPointsX = [\n                0,\n                size.width / 2 - targetWidth / 2,\n                size.width - targetWidth // Borde derecho\n            ];\n            // Puntos de snap para el eje Y (arriba, centro, abajo)\n            const snapPointsY = [\n                0,\n                size.height / 2 - targetHeight / 2,\n                size.height - targetHeight // Borde inferior\n            ];\n            // Aplicar snap con umbral normal\n            left = applySnap(left, snapPointsX);\n            top = applySnap(top, snapPointsY);\n            // Feedback visual para indicar el snap (opcional)\n            if (snapPointsX.some((point)=>Math.abs(left - point) <= SNAP_EDGE_THRESHOLD) || snapPointsY.some((point)=>Math.abs(top - point) <= SNAP_EDGE_THRESHOLD)) {\n                // Se podría añadir una clase CSS para indicar visualmente el snap\n                target.classList.add(\"snapped-element\");\n                // Añadir pequeña vibración como feedback táctil (opcional)\n                if (inputEvent instanceof MouseEvent && \"vibrate\" in navigator) {\n                    navigator.vibrate(10); // Vibración sutil de 10ms\n                }\n            } else {\n                target.classList.remove(\"snapped-element\");\n            }\n            // Actualizar posición\n            target.style.top = top + \"px\";\n            target.style.left = left + \"px\";\n        },\n        onDragEnd: (param)=>{\n            let { target, isDrag } = param;\n            if (!isDrag) return;\n            const targetId = (0,_utils_scene__WEBPACK_IMPORTED_MODULE_3__.getIdFromClassName)(target.className);\n            // Eliminar la clase de snap al finalizar\n            target.classList.remove(\"snapped-element\");\n            (0,_designcombo_events__WEBPACK_IMPORTED_MODULE_4__.dispatch)(_designcombo_state__WEBPACK_IMPORTED_MODULE_5__.EDIT_OBJECT, {\n                payload: {\n                    [targetId]: {\n                        details: {\n                            left: target.style.left,\n                            top: target.style.top\n                        }\n                    }\n                }\n            });\n        },\n        onScale: (param)=>{\n            let { target, transform, direction } = param;\n            const [xControl, yControl] = direction;\n            const scaleRegex = /scale\\(([^)]+)\\)/;\n            const match = target.style.transform.match(scaleRegex);\n            //get current scale\n            const [scaleX, scaleY] = match[1].split(\",\").map((value)=>parseFloat(value.trim()));\n            //get new Scale\n            const match2 = transform.match(scaleRegex);\n            const [newScaleX, newScaleY] = match2[1].split(\",\").map((value)=>parseFloat(value.trim()));\n            const currentWidth = target.clientWidth * scaleX;\n            const currentHeight = target.clientHeight * scaleY;\n            const newWidth = target.clientWidth * newScaleX;\n            const newHeight = target.clientHeight * newScaleY;\n            target.style.transform = transform;\n            //Move element to initial Left position\n            const diffX = currentWidth - newWidth;\n            let newLeft = parseFloat(target.style.left) - diffX / 2;\n            const diffY = currentHeight - newHeight;\n            let newTop = parseFloat(target.style.top) - diffY / 2;\n            if (xControl === -1) {\n                newLeft += diffX;\n            }\n            if (yControl === -1) {\n                newTop += diffY;\n            }\n            target.style.left = newLeft + \"px\";\n            target.style.top = newTop + \"px\";\n        },\n        onScaleEnd: (param)=>{\n            let { target } = param;\n            if (!target.style.transform) return;\n            const targetId = (0,_utils_scene__WEBPACK_IMPORTED_MODULE_3__.getIdFromClassName)(target.className);\n            (0,_designcombo_events__WEBPACK_IMPORTED_MODULE_4__.dispatch)(_designcombo_state__WEBPACK_IMPORTED_MODULE_5__.EDIT_OBJECT, {\n                payload: {\n                    [targetId]: {\n                        details: {\n                            transform: target.style.transform,\n                            left: parseFloat(target.style.left),\n                            top: parseFloat(target.style.top)\n                        }\n                    }\n                }\n            });\n        },\n        onRotate: (param)=>{\n            let { target, transform } = param;\n            target.style.transform = transform;\n        },\n        onRotateEnd: (param)=>{\n            let { target } = param;\n            if (!target.style.transform) return;\n            const targetId = (0,_utils_scene__WEBPACK_IMPORTED_MODULE_3__.getIdFromClassName)(target.className);\n            (0,_designcombo_events__WEBPACK_IMPORTED_MODULE_4__.dispatch)(_designcombo_state__WEBPACK_IMPORTED_MODULE_5__.EDIT_OBJECT, {\n                payload: {\n                    [targetId]: {\n                        details: {\n                            transform: target.style.transform\n                        }\n                    }\n                }\n            });\n        },\n        onDragGroup: (param)=>{\n            let { events } = param;\n            holdGroupPosition = {};\n            // Obtener el rectángulo que contiene todo el grupo\n            let groupLeft = Infinity;\n            let groupTop = Infinity;\n            let groupRight = -Infinity;\n            let groupBottom = -Infinity;\n            // Primer paso: calcular dimensiones del grupo\n            for(let i = 0; i < events.length; i++){\n                const event = events[i];\n                const id = (0,_utils_scene__WEBPACK_IMPORTED_MODULE_3__.getIdFromClassName)(event.target.className);\n                const trackItem = trackItemDetailsMap[id];\n                const left = parseFloat(trackItem === null || trackItem === void 0 ? void 0 : trackItem.details.left);\n                const top = parseFloat(trackItem === null || trackItem === void 0 ? void 0 : trackItem.details.top);\n                const width = event.target.offsetWidth;\n                const height = event.target.offsetHeight;\n                groupLeft = Math.min(groupLeft, left);\n                groupTop = Math.min(groupTop, top);\n                groupRight = Math.max(groupRight, left + width);\n                groupBottom = Math.max(groupBottom, top + height);\n            }\n            const groupWidth = groupRight - groupLeft;\n            const groupHeight = groupBottom - groupTop;\n            // Calcular el desplazamiento base del grupo (desde el primer elemento)\n            const baseTranslate = events[0].beforeTranslate;\n            // Calcular nueva posición del grupo con posible snap\n            let newGroupLeft = groupLeft + baseTranslate[0];\n            let newGroupTop = groupTop + baseTranslate[1];\n            // Puntos de snap para el grupo\n            const snapPointsX = [\n                0,\n                size.width / 2 - groupWidth / 2,\n                size.width - groupWidth // Borde derecho\n            ];\n            const snapPointsY = [\n                0,\n                size.height / 2 - groupHeight / 2,\n                size.height - groupHeight // Borde inferior\n            ];\n            // Aplicar snap al grupo\n            const snappedGroupLeft = applySnap(newGroupLeft, snapPointsX);\n            const snappedGroupTop = applySnap(newGroupTop, snapPointsY);\n            // Calcular el ajuste necesario después del snap\n            const adjustX = snappedGroupLeft - newGroupLeft;\n            const adjustY = snappedGroupTop - newGroupTop;\n            // Feedback visual para el snap de grupo\n            const isGroupSnapped = Math.abs(adjustX) <= SNAP_EDGE_THRESHOLD || Math.abs(adjustY) <= SNAP_EDGE_THRESHOLD;\n            // Aplicar el movimiento ajustado a cada elemento del grupo\n            for(let i = 0; i < events.length; i++){\n                const event = events[i];\n                const id = (0,_utils_scene__WEBPACK_IMPORTED_MODULE_3__.getIdFromClassName)(event.target.className);\n                const trackItem = trackItemDetailsMap[id];\n                const left = parseFloat(trackItem === null || trackItem === void 0 ? void 0 : trackItem.details.left) + event.beforeTranslate[0] + adjustX;\n                const top = parseFloat(trackItem === null || trackItem === void 0 ? void 0 : trackItem.details.top) + event.beforeTranslate[1] + adjustY;\n                event.target.style.left = \"\".concat(left, \"px\");\n                event.target.style.top = \"\".concat(top, \"px\");\n                // Aplicar clase visual si hay snap\n                if (isGroupSnapped) {\n                    event.target.classList.add(\"snapped-element\");\n                } else {\n                    event.target.classList.remove(\"snapped-element\");\n                }\n                holdGroupPosition[id] = {\n                    left: left,\n                    top: top\n                };\n            }\n            // Feedback táctil si hay snap\n            if (isGroupSnapped && \"vibrate\" in navigator) {\n                navigator.vibrate(10);\n            }\n        },\n        onResize: (param)=>{\n            let { target, width: nextWidth, height: nextHeight, direction } = param;\n            if (direction[1] === 1) {\n                var _target_firstElementChild;\n                const currentWidth = target.clientWidth;\n                const currentHeight = target.clientHeight;\n                // Get new width and height\n                const scaleY = nextHeight / currentHeight;\n                const scale = scaleY;\n                // Update target dimensions\n                target.style.width = \"\".concat(currentWidth * scale, \"px\");\n                target.style.height = \"\".concat(currentHeight * scale, \"px\");\n                // Safely access nested elements\n                const animationDiv = (_target_firstElementChild = target.firstElementChild) === null || _target_firstElementChild === void 0 ? void 0 : _target_firstElementChild.firstElementChild;\n                if (animationDiv) {\n                    animationDiv.style.width = \"\".concat(currentWidth * scale, \"px\");\n                    animationDiv.style.height = \"\".concat(currentHeight * scale, \"px\");\n                    const textDiv = animationDiv.firstElementChild;\n                    if (textDiv) {\n                        const fontSize = parseFloat(getComputedStyle(textDiv).fontSize);\n                        textDiv.style.fontSize = \"\".concat(fontSize * scale, \"px\");\n                        textDiv.style.width = \"\".concat(currentWidth * scale, \"px\");\n                        textDiv.style.height = \"\".concat(currentHeight * scale, \"px\");\n                    }\n                }\n            } else {\n                var _target_firstElementChild1;\n                target.style.width = nextWidth + \"px\";\n                target.style.height = nextHeight + \"px\";\n                // Safely access nested elements\n                const animationDiv = (_target_firstElementChild1 = target.firstElementChild) === null || _target_firstElementChild1 === void 0 ? void 0 : _target_firstElementChild1.firstElementChild;\n                if (animationDiv) {\n                    animationDiv.style.width = \"\".concat(nextWidth, \"px\");\n                    animationDiv.style.height = \"\".concat(nextHeight, \"px\");\n                    const textDiv = animationDiv.firstElementChild;\n                    if (textDiv) {\n                        textDiv.style.width = \"\".concat(nextWidth, \"px\");\n                        textDiv.style.height = \"\".concat(nextHeight, \"px\");\n                    }\n                }\n            }\n        },\n        onResizeEnd: (param)=>{\n            let { target } = param;\n            var _target_firstElementChild_firstElementChild, _target_firstElementChild;\n            const targetId = (0,_utils_scene__WEBPACK_IMPORTED_MODULE_3__.getIdFromClassName)(target.className);\n            const textDiv = (_target_firstElementChild = target.firstElementChild) === null || _target_firstElementChild === void 0 ? void 0 : (_target_firstElementChild_firstElementChild = _target_firstElementChild.firstElementChild) === null || _target_firstElementChild_firstElementChild === void 0 ? void 0 : _target_firstElementChild_firstElementChild.firstElementChild;\n            (0,_designcombo_events__WEBPACK_IMPORTED_MODULE_4__.dispatch)(_designcombo_state__WEBPACK_IMPORTED_MODULE_5__.EDIT_OBJECT, {\n                payload: {\n                    [targetId]: {\n                        details: {\n                            width: parseFloat(target.style.width),\n                            height: parseFloat(target.style.height),\n                            fontSize: parseFloat(textDiv.style.fontSize)\n                        }\n                    }\n                }\n            });\n        },\n        onDragGroupEnd: ()=>{\n            if (holdGroupPosition) {\n                const payload = {};\n                Object.keys(holdGroupPosition).forEach((id)=>{\n                    const left = holdGroupPosition[id].left;\n                    const top = holdGroupPosition[id].top;\n                    // Eliminar la clase de snap\n                    const element = document.querySelector(\".id-\".concat(id));\n                    if (element) {\n                        element.classList.remove(\"snapped-element\");\n                    }\n                    payload[id] = {\n                        details: {\n                            top: \"\".concat(top, \"px\"),\n                            left: \"\".concat(left, \"px\")\n                        }\n                    };\n                });\n                (0,_designcombo_events__WEBPACK_IMPORTED_MODULE_4__.dispatch)(_designcombo_state__WEBPACK_IMPORTED_MODULE_5__.EDIT_OBJECT, {\n                    payload: payload\n                });\n                holdGroupPosition = null;\n            }\n        }\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\scene\\\\interactions.tsx\",\n        lineNumber: 225,\n        columnNumber: 5\n    }, this);\n}\n_s(SceneInteractions, \"lrX3Qn1bDg1Z1txtD65ffnnzOtA=\", false, function() {\n    return [\n        _store_use_store__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n        _store_use_layout_store__WEBPACK_IMPORTED_MODULE_9__[\"default\"]\n    ];\n});\n_c = SceneInteractions;\nvar _c;\n$RefreshReg$(_c, \"SceneInteractions\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./features/editor/scene/interactions.tsx\n"));

/***/ })

});