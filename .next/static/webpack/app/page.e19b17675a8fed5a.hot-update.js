"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./features/editor/menu-item/subtitles.tsx":
/*!*************************************************!*\
  !*** ./features/editor/menu-item/subtitles.tsx ***!
  \*************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Subtitles: function() { return /* binding */ Subtitles; },\n/* harmony export */   getAddTextPayload: function() { return /* binding */ getAddTextPayload; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _components_shared_draggable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/shared/draggable */ \"(app-pages-browser)/./components/shared/draggable.tsx\");\n/* harmony import */ var _components_ui_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/ui/button */ \"(app-pages-browser)/./components/ui/button.tsx\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/utils */ \"(app-pages-browser)/./lib/utils.ts\");\n/* harmony import */ var _designcombo_events__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @designcombo/events */ \"(app-pages-browser)/./node_modules/@designcombo/events/dist/index.es.js\");\n/* harmony import */ var _designcombo_state__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @designcombo/state */ \"(app-pages-browser)/./node_modules/@designcombo/state/dist/index.es.js\");\n/* harmony import */ var _designcombo_timeline__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @designcombo/timeline */ \"(app-pages-browser)/./node_modules/@designcombo/timeline/dist/index.es.js\");\n/* harmony import */ var _hooks_is_dragging_over_timeline__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../hooks/is-dragging-over-timeline */ \"(app-pages-browser)/./features/editor/hooks/is-dragging-over-timeline.tsx\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _store_use_store__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../store/use-store */ \"(app-pages-browser)/./features/editor/store/use-store.ts\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n// Componente Spinner simple\nconst Spinner = ()=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"animate-spin h-5 w-5 border-2 border-primary border-t-transparent rounded-full\"\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\menu-item\\\\subtitles.tsx\",\n        lineNumber: 14,\n        columnNumber: 3\n    }, undefined);\n_c = Spinner;\n// Función para parsear el tiempo de formato SRT a milisegundos\nconst parseTimeToMs = (timeString)=>{\n    const [hours, minutes, secondsAndMs] = timeString.split(\":\");\n    const [seconds, ms] = secondsAndMs.split(\",\");\n    return parseInt(hours) * 3600000 + parseInt(minutes) * 60000 + parseInt(seconds) * 1000 + parseInt(ms);\n};\n// Función para parsear el archivo SRT\nconst parseSRT = (srtContent)=>{\n    const segments = [];\n    const blocks = srtContent.trim().split(\"\\n\\n\");\n    blocks.forEach((block)=>{\n        const lines = block.split(\"\\n\");\n        if (lines.length >= 3) {\n            const id = parseInt(lines[0]);\n            const timeRange = lines[1].split(\" --> \");\n            const startTime = parseTimeToMs(timeRange[0]);\n            const endTime = parseTimeToMs(timeRange[1]);\n            const text = lines.slice(2).join(\"\\n\"); // Unir todas las líneas de texto\n            segments.push({\n                id,\n                startTime,\n                endTime,\n                text\n            });\n        }\n    });\n    return segments;\n};\n// Función para formatear milisegundos a formato legible (MM:SS)\nconst formatTime = (ms)=>{\n    const seconds = Math.floor(ms / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return \"\".concat(minutes.toString().padStart(2, \"0\"), \":\").concat(remainingSeconds.toString().padStart(2, \"0\"));\n};\n// Función para dividir un texto en grupos de aproximadamente 3 palabras\nconst splitTextIntoGroups = function(text) {\n    let wordsPerGroup = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 3;\n    const words = text.split(/\\s+/);\n    const groups = [];\n    for(let i = 0; i < words.length; i += wordsPerGroup){\n        const group = words.slice(i, i + wordsPerGroup).join(\" \");\n        groups.push(group);\n    }\n    return groups;\n};\n// Función para procesar un segmento y dividirlo en múltiples segmentos si es necesario\nconst processSegment = (segment)=>{\n    const textGroups = splitTextIntoGroups(segment.text);\n    // Si solo hay un grupo, devolver el segmento original\n    if (textGroups.length <= 1) {\n        return [\n            segment\n        ];\n    }\n    // Calcular la duración de cada grupo\n    const totalDuration = segment.endTime - segment.startTime;\n    const groupDuration = totalDuration / textGroups.length;\n    // Crear un nuevo segmento para cada grupo\n    return textGroups.map((groupText, index)=>{\n        const startTime = segment.startTime + index * groupDuration;\n        const endTime = startTime + groupDuration;\n        return {\n            id: segment.id * 1000 + index,\n            startTime,\n            endTime,\n            text: groupText\n        };\n    });\n};\nconst getAddTextPayload = function() {\n    let text = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"Demo\", startTime = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, endTime = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 5000;\n    return {\n        id: (0,_designcombo_timeline__WEBPACK_IMPORTED_MODULE_6__.generateId)(),\n        display: {\n            from: startTime,\n            to: endTime\n        },\n        type: \"text\",\n        details: {\n            text: text.toUpperCase(),\n            fontSize: 80,\n            width: 900,\n            fontUrl: \"/fonts/mrbeast.ttf\",\n            fontFamily: \"MrBeast\",\n            color: \"#FFFF00\",\n            wordWrap: \"break-word\",\n            textAlign: \"center\",\n            borderWidth: 20,\n            borderColor: \"#000000\",\n            boxShadow: {\n                color: \"#000000\",\n                x: 3,\n                y: 3,\n                blur: 0\n            },\n            backgroundColor: \"transparent\",\n            padding: 10,\n            borderRadius: 0\n        }\n    };\n};\n// Constante para identificar nuestro track de subtítulos\nconst SUBTITLE_TRACK_ID = \"subtitle-track-fixed\";\nconst Subtitles = ()=>{\n    _s();\n    const isDraggingOverTimeline = (0,_hooks_is_dragging_over_timeline__WEBPACK_IMPORTED_MODULE_7__.useIsDraggingOverTimeline)();\n    const [subtitleSegments, setSubtitleSegments] = (0,react__WEBPACK_IMPORTED_MODULE_8__.useState)([]);\n    const [originalSegments, setOriginalSegments] = (0,react__WEBPACK_IMPORTED_MODULE_8__.useState)([]);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_8__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_8__.useState)(null);\n    const [addedSubtitles, setAddedSubtitles] = (0,react__WEBPACK_IMPORTED_MODULE_8__.useState)(new Set());\n    const [groupWords, setGroupWords] = (0,react__WEBPACK_IMPORTED_MODULE_8__.useState)(true); // Estado para controlar si agrupar palabras\n    const [subtitleTrackId, setSubtitleTrackId] = (0,react__WEBPACK_IMPORTED_MODULE_8__.useState)(null);\n    const { tracks } = (0,_store_use_store__WEBPACK_IMPORTED_MODULE_9__[\"default\"])();\n    const trackIdInitialized = (0,react__WEBPACK_IMPORTED_MODULE_8__.useRef)(false);\n    // Función para asegurar que existe un track de subtítulos\n    const ensureSubtitleTrack = (0,react__WEBPACK_IMPORTED_MODULE_8__.useCallback)(()=>{\n        // Si ya tenemos un ID de track y está inicializado, lo usamos\n        if (subtitleTrackId && trackIdInitialized.current) {\n            console.log(\"Usando trackId existente: \".concat(subtitleTrackId));\n            return subtitleTrackId;\n        }\n        console.log(\"Analizando \".concat(tracks.length, \" tracks para encontrar el de subt\\xedtulos\"));\n        // Estrategia 1: Buscar el track con ID específico\n        let trackForSubtitles = tracks.find((track)=>track.id === SUBTITLE_TRACK_ID);\n        if (trackForSubtitles) {\n            console.log(\"Encontrado track espec\\xedfico para subt\\xedtulos: \".concat(SUBTITLE_TRACK_ID));\n            trackIdInitialized.current = true;\n            setSubtitleTrackId(SUBTITLE_TRACK_ID);\n            return SUBTITLE_TRACK_ID;\n        }\n        // Estrategia 2: Buscar el último track que acepta texto\n        // Basándonos en los datos que vimos, el índice 19 tiene 5 elementos y parece ser un buen candidato\n        const textTracks = tracks.filter((track)=>track.type === \"text\" && track.accepts && track.accepts.includes(\"text\"));\n        if (textTracks.length > 0) {\n            var _lastTextTrack_items;\n            // Usar el último track de texto encontrado (normalmente el más reciente)\n            const lastTextTrack = textTracks[textTracks.length - 1];\n            console.log(\"Usando el \\xfaltimo track de texto (\".concat(lastTextTrack.id, \") con \").concat(((_lastTextTrack_items = lastTextTrack.items) === null || _lastTextTrack_items === void 0 ? void 0 : _lastTextTrack_items.length) || 0, \" elementos\"));\n            trackIdInitialized.current = true;\n            setSubtitleTrackId(lastTextTrack.id);\n            return lastTextTrack.id;\n        }\n        // Estrategia 3: Si no hay ningún track adecuado, crear uno nuevo con ID fijo\n        console.log(\"No se encontr\\xf3 ning\\xfan track adecuado. Creando uno nuevo con ID: \".concat(SUBTITLE_TRACK_ID));\n        // Crear un nuevo track con ID fijo\n        (0,_designcombo_events__WEBPACK_IMPORTED_MODULE_4__.dispatch)(_designcombo_state__WEBPACK_IMPORTED_MODULE_5__.TRACK_CREATE, {\n            payload: {\n                id: SUBTITLE_TRACK_ID,\n                type: \"text\",\n                accepts: [\n                    \"text\",\n                    \"audio\",\n                    \"helper\",\n                    \"video\",\n                    \"image\",\n                    \"caption\",\n                    \"template\"\n                ],\n                magnetic: false,\n                static: false\n            }\n        });\n        trackIdInitialized.current = true;\n        setSubtitleTrackId(SUBTITLE_TRACK_ID);\n        return SUBTITLE_TRACK_ID;\n    }, [\n        tracks,\n        subtitleTrackId\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_8__.useEffect)(()=>{\n        const fetchTranscription = async ()=>{\n            setIsLoading(true);\n            setError(null);\n            try {\n                const response = await fetch(\"/transcriptions/transcription1.srt\");\n                if (!response.ok) {\n                    throw new Error(\"Error al cargar el archivo SRT: \".concat(response.status));\n                }\n                const text = await response.text();\n                const segments = parseSRT(text);\n                setOriginalSegments(segments);\n                // Procesar los segmentos según la configuración actual\n                if (groupWords) {\n                    const processedSegments = segments.flatMap(processSegment);\n                    setSubtitleSegments(processedSegments);\n                } else {\n                    setSubtitleSegments(segments);\n                }\n            } catch (error) {\n                console.error(\"Failed to load transcription:\", error);\n                setError(\"No se pudo cargar el archivo de subt\\xedtulos\");\n                setSubtitleSegments([]);\n                setOriginalSegments([]);\n            } finally{\n                setIsLoading(false);\n            }\n        };\n        fetchTranscription();\n    }, [\n        groupWords\n    ]);\n    // Determinar un trackId para los subtítulos cuando cambian los tracks\n    (0,react__WEBPACK_IMPORTED_MODULE_8__.useEffect)(()=>{\n        if (tracks && tracks.length > 0) {\n            const trackId = ensureSubtitleTrack();\n            console.log(\"Track ID para subt\\xedtulos establecido: \".concat(trackId));\n        }\n    }, [\n        tracks,\n        ensureSubtitleTrack\n    ]);\n    // Función para cambiar entre modo agrupado y no agrupado\n    const toggleGroupWords = ()=>{\n        setGroupWords(!groupWords);\n    };\n    const handleAddSubtitle = (segment)=>{\n        // Asegurar que existe un track para subtítulos\n        const trackId = ensureSubtitleTrack();\n        if (!trackId) {\n            console.error(\"Error: No se pudo establecer un trackId para subt\\xedtulos\");\n            return;\n        }\n        console.log('A\\xf1adiendo subt\\xedtulo \"'.concat(segment.text, '\" al track fijo: ').concat(trackId));\n        (0,_designcombo_events__WEBPACK_IMPORTED_MODULE_4__.dispatch)(_designcombo_state__WEBPACK_IMPORTED_MODULE_5__.ADD_TEXT, {\n            payload: getAddTextPayload(segment.text, segment.startTime, segment.endTime),\n            options: {\n                trackId: trackId // Usar el trackId fijo\n            }\n        });\n        // Marcar este subtítulo como añadido\n        setAddedSubtitles((prev)=>{\n            const newSet = new Set(prev);\n            newSet.add(segment.id);\n            return newSet;\n        });\n    };\n    const handleAddAllSubtitles = ()=>{\n        // Asegurar que existe un track para subtítulos\n        const trackId = ensureSubtitleTrack();\n        if (!trackId) {\n            console.error(\"Error: No se pudo establecer un trackId para subt\\xedtulos\");\n            return;\n        }\n        // Desactivar el botón mientras se procesan los subtítulos\n        setIsLoading(true);\n        console.log(\"A\\xf1adiendo \".concat(subtitleSegments.length, \" subt\\xedtulos al track fijo: \").concat(trackId));\n        // Añadir subtítulos con un retraso entre cada uno\n        subtitleSegments.forEach((segment, index)=>{\n            setTimeout(()=>{\n                (0,_designcombo_events__WEBPACK_IMPORTED_MODULE_4__.dispatch)(_designcombo_state__WEBPACK_IMPORTED_MODULE_5__.ADD_TEXT, {\n                    payload: getAddTextPayload(segment.text, segment.startTime, segment.endTime),\n                    options: {\n                        trackId: trackId // Usar el trackId fijo\n                    }\n                });\n                // Si es el último subtítulo, actualizar el estado\n                if (index === subtitleSegments.length - 1) {\n                    // Marcar todos los subtítulos como añadidos\n                    const allIds = new Set(subtitleSegments.map((segment)=>segment.id));\n                    setAddedSubtitles(allIds);\n                    setIsLoading(false);\n                    console.log(\"Completado: \".concat(subtitleSegments.length, \" subt\\xedtulos a\\xf1adidos al track \").concat(trackId));\n                }\n            }, index * 100); // 100ms de retraso entre cada subtítulo\n        });\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex flex-1 flex-col\",\n        \"data-subtitles\": true,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex h-12 flex-none items-center px-4 font-medium text-sm text-text-primary\",\n                children: [\n                    \"Subt\\xedtulos\",\n                    subtitleTrackId && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"ml-2 text-xs text-muted-foreground\",\n                        children: [\n                            \"(Track: \",\n                            subtitleTrackId,\n                            \")\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\menu-item\\\\subtitles.tsx\",\n                        lineNumber: 326,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\menu-item\\\\subtitles.tsx\",\n                lineNumber: 323,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex flex-col gap-2 px-4\",\n                children: isLoading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex justify-center items-center py-8\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Spinner, {}, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\menu-item\\\\subtitles.tsx\",\n                        lineNumber: 334,\n                        columnNumber: 13\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\menu-item\\\\subtitles.tsx\",\n                    lineNumber: 333,\n                    columnNumber: 11\n                }, undefined) : error ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-red-500 text-sm py-2\",\n                    children: error\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\menu-item\\\\subtitles.tsx\",\n                    lineNumber: 337,\n                    columnNumber: 11\n                }, undefined) : subtitleSegments.length > 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex justify-between items-center mb-2\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                onClick: toggleGroupWords,\n                                className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)((0,_components_ui_button__WEBPACK_IMPORTED_MODULE_2__.buttonVariants)({\n                                    variant: \"outline\",\n                                    size: \"sm\"\n                                }), \"cursor-pointer\"),\n                                children: groupWords ? \"Ver subt\\xedtulos completos\" : \"Dividir en grupos de 3 palabras\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\menu-item\\\\subtitles.tsx\",\n                                lineNumber: 341,\n                                columnNumber: 15\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\menu-item\\\\subtitles.tsx\",\n                            lineNumber: 340,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            onClick: handleAddAllSubtitles,\n                            className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)((0,_components_ui_button__WEBPACK_IMPORTED_MODULE_2__.buttonVariants)({\n                                variant: \"secondary\"\n                            }), \"cursor-pointer flex justify-center items-center\"),\n                            disabled: isLoading,\n                            // ID dinámico según el modo de agrupación\n                            id: groupWords ? \"add-all-subtitles-grouped\" : \"add-all-subtitles-complete\",\n                            \"data-subtitles-add-all\": true,\n                            children: isLoading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Spinner, {}, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\menu-item\\\\subtitles.tsx\",\n                                        lineNumber: 364,\n                                        columnNumber: 19\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"ml-2\",\n                                        children: \"A\\xf1adiendo subt\\xedtulos...\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\menu-item\\\\subtitles.tsx\",\n                                        lineNumber: 365,\n                                        columnNumber: 19\n                                    }, undefined)\n                                ]\n                            }, void 0, true) : \"A\\xf1adir todos los subt\\xedtulos \".concat(groupWords ? \"(agrupados)\" : \"(completos)\")\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\menu-item\\\\subtitles.tsx\",\n                            lineNumber: 351,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mt-2 text-sm font-medium\",\n                            children: \"Subt\\xedtulos individuales:\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\menu-item\\\\subtitles.tsx\",\n                            lineNumber: 371,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"max-h-60 overflow-y-auto pr-1\",\n                            children: subtitleSegments.map((segment)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_shared_draggable__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n                                    data: ()=>({\n                                            ...getAddTextPayload(segment.text, segment.startTime, segment.endTime),\n                                            options: {\n                                                trackId: subtitleTrackId\n                                            }\n                                        }),\n                                    renderCustomPreview: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"bg-background border border-border p-2 rounded-md max-w-xs\",\n                                        children: segment.text\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\menu-item\\\\subtitles.tsx\",\n                                        lineNumber: 381,\n                                        columnNumber: 21\n                                    }, void 0),\n                                    shouldDisplayPreview: !isDraggingOverTimeline,\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        onClick: ()=>handleAddSubtitle(segment),\n                                        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)((0,_components_ui_button__WEBPACK_IMPORTED_MODULE_2__.buttonVariants)({\n                                            variant: \"outline\"\n                                        }), \"mb-2 text-left flex flex-col w-full\", addedSubtitles.has(segment.id) && \"border-green-500 bg-green-500/10\"),\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"truncate\",\n                                                title: segment.text,\n                                                children: segment.text.length > 30 ? \"\".concat(segment.text.substring(0, 30), \"...\") : segment.text\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\menu-item\\\\subtitles.tsx\",\n                                                lineNumber: 395,\n                                                columnNumber: 21\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"text-xs text-muted-foreground mt-1\",\n                                                children: [\n                                                    formatTime(segment.startTime),\n                                                    \" - \",\n                                                    formatTime(segment.endTime)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\menu-item\\\\subtitles.tsx\",\n                                                lineNumber: 398,\n                                                columnNumber: 21\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\menu-item\\\\subtitles.tsx\",\n                                        lineNumber: 387,\n                                        columnNumber: 19\n                                    }, undefined)\n                                }, segment.id, false, {\n                                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\menu-item\\\\subtitles.tsx\",\n                                    lineNumber: 374,\n                                    columnNumber: 17\n                                }, undefined))\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\menu-item\\\\subtitles.tsx\",\n                            lineNumber: 372,\n                            columnNumber: 13\n                        }, undefined)\n                    ]\n                }, void 0, true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_shared_draggable__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n                    data: ()=>({\n                            ...getAddTextPayload(\"Demo\"),\n                            options: {\n                                trackId: subtitleTrackId\n                            }\n                        }),\n                    renderCustomPreview: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                        variant: \"secondary\",\n                        className: \"w-60\",\n                        children: \"Add text\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\menu-item\\\\subtitles.tsx\",\n                        lineNumber: 413,\n                        columnNumber: 15\n                    }, void 0),\n                    shouldDisplayPreview: !isDraggingOverTimeline,\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        onClick: ()=>handleAddSubtitle({\n                                id: 0,\n                                startTime: 0,\n                                endTime: 5000,\n                                text: \"Demo\"\n                            }),\n                        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)((0,_components_ui_button__WEBPACK_IMPORTED_MODULE_2__.buttonVariants)({\n                            variant: \"secondary\"\n                        })),\n                        children: \"Add text\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\menu-item\\\\subtitles.tsx\",\n                        lineNumber: 419,\n                        columnNumber: 13\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\menu-item\\\\subtitles.tsx\",\n                    lineNumber: 407,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\menu-item\\\\subtitles.tsx\",\n                lineNumber: 331,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\features\\\\editor\\\\menu-item\\\\subtitles.tsx\",\n        lineNumber: 322,\n        columnNumber: 5\n    }, undefined);\n};\n_s(Subtitles, \"4kGPhLPJDV3xeFjUSYQ0k7HdX48=\", false, function() {\n    return [\n        _hooks_is_dragging_over_timeline__WEBPACK_IMPORTED_MODULE_7__.useIsDraggingOverTimeline,\n        _store_use_store__WEBPACK_IMPORTED_MODULE_9__[\"default\"]\n    ];\n});\n_c1 = Subtitles;\nvar _c, _c1;\n$RefreshReg$(_c, \"Spinner\");\n$RefreshReg$(_c1, \"Subtitles\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./features/editor/menu-item/subtitles.tsx\n"));

/***/ })

});