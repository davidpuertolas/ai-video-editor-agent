"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/ai-chat/index.tsx":
/*!**************************************!*\
  !*** ./components/ai-chat/index.tsx ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ AIChat; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_ui_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/ui/button */ \"(app-pages-browser)/./components/ui/button.tsx\");\n/* harmony import */ var _components_ui_input__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/ui/input */ \"(app-pages-browser)/./components/ui/input.tsx\");\n/* harmony import */ var _components_ui_scroll_area__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/ui/scroll-area */ \"(app-pages-browser)/./components/ui/scroll-area.tsx\");\n/* harmony import */ var _barrel_optimize_names_ImageIcon_Loader2_RefreshCw_Send_Sparkles_X_lucide_react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! __barrel_optimize__?names=ImageIcon,Loader2,RefreshCw,Send,Sparkles,X!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/sparkles.js\");\n/* harmony import */ var _barrel_optimize_names_ImageIcon_Loader2_RefreshCw_Send_Sparkles_X_lucide_react__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! __barrel_optimize__?names=ImageIcon,Loader2,RefreshCw,Send,Sparkles,X!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/refresh-cw.js\");\n/* harmony import */ var _barrel_optimize_names_ImageIcon_Loader2_RefreshCw_Send_Sparkles_X_lucide_react__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! __barrel_optimize__?names=ImageIcon,Loader2,RefreshCw,Send,Sparkles,X!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/x.js\");\n/* harmony import */ var _barrel_optimize_names_ImageIcon_Loader2_RefreshCw_Send_Sparkles_X_lucide_react__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! __barrel_optimize__?names=ImageIcon,Loader2,RefreshCw,Send,Sparkles,X!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/image.js\");\n/* harmony import */ var _barrel_optimize_names_ImageIcon_Loader2_RefreshCw_Send_Sparkles_X_lucide_react__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! __barrel_optimize__?names=ImageIcon,Loader2,RefreshCw,Send,Sparkles,X!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/loader-circle.js\");\n/* harmony import */ var _barrel_optimize_names_ImageIcon_Loader2_RefreshCw_Send_Sparkles_X_lucide_react__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! __barrel_optimize__?names=ImageIcon,Loader2,RefreshCw,Send,Sparkles,X!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/send.js\");\n/* harmony import */ var _features_editor_store_use_data_state__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/features/editor/store/use-data-state */ \"(app-pages-browser)/./features/editor/store/use-data-state.ts\");\n/* harmony import */ var _features_editor_hooks_state_manager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/features/editor/hooks/state-manager */ \"(app-pages-browser)/./features/editor/hooks/state-manager.tsx\");\n/* harmony import */ var _ai_video_commands__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ai-video-commands */ \"(app-pages-browser)/./components/ai-chat/ai-video-commands.ts\");\n/* harmony import */ var _utils_upload__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/utils/upload */ \"(app-pages-browser)/./utils/upload.ts\");\n/* harmony import */ var _features_editor_services_command_executor_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/features/editor/services/command-executor-service */ \"(app-pages-browser)/./features/editor/services/command-executor-service.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n// Función para extraer tiempos de inicio y fin de una imagen a partir del mensaje\nfunction extractImageTimesFromMessage(messageContent) {\n    let startTime = 0;\n    let endTime = 5;\n    if (!messageContent) return {\n        startTime,\n        endTime\n    };\n    // Buscar referencias al tiempo inicial\n    const startTimePatterns = [\n        /en el segundo (\\d+)/i,\n        /desde el segundo (\\d+)/i,\n        /a partir del segundo (\\d+)/i,\n        /comenzando en el segundo (\\d+)/i,\n        /desde el minuto (\\d+)/i,\n        /en el minuto (\\d+)/i,\n        /entre los segundos (\\d+) y/i,\n        /del segundo (\\d+) al/i,\n        /empezando en (\\d+)/i,\n        /segundo (\\d+)/i,\n        /en (\\d+) segundos/i,\n        /en el (\\d+)/i\n    ];\n    // Buscar referencias al tiempo final\n    const endTimePatterns = [\n        /hasta el segundo (\\d+)/i,\n        /al segundo (\\d+)/i,\n        /terminando en el segundo (\\d+)/i,\n        /hasta el minuto (\\d+)/i,\n        /entre los segundos \\d+ y (\\d+)/i,\n        /del segundo \\d+ al (\\d+)/i,\n        /por (\\d+) segundos/i,\n        /durante (\\d+) segundos/i\n    ];\n    // Buscar palabras clave especiales\n    const isAtStart = /\\b(al inicio|al principio|al comienzo)\\b/i.test(messageContent);\n    const isAtEnd = /\\b(al final|al término|al acabar)\\b/i.test(messageContent);\n    // Procesar patrones de tiempo inicial\n    for (const pattern of startTimePatterns){\n        const match = messageContent.match(pattern);\n        if (match && match[1]) {\n            // Si es referencia a minutos, convertir a segundos\n            startTime = pattern.toString().includes(\"minuto\") ? parseInt(match[1]) * 60 : parseInt(match[1]);\n            break;\n        }\n    }\n    // Procesar patrones de tiempo final\n    for (const pattern of endTimePatterns){\n        const match = messageContent.match(pattern);\n        if (match && match[1]) {\n            if (pattern.toString().includes(\"por\") || pattern.toString().includes(\"durante\")) {\n                // Es una duración relativa, sumar al tiempo inicial\n                endTime = startTime + parseInt(match[1]);\n            } else {\n                // Es un tiempo absoluto\n                endTime = pattern.toString().includes(\"minuto\") ? parseInt(match[1]) * 60 : parseInt(match[1]);\n            }\n            break;\n        }\n    }\n    // Si se menciona \"al inicio\", establecer tiempo a 0\n    if (isAtStart) {\n        startTime = 0;\n        endTime = 5; // Por defecto 5 segundos de duración\n    }\n    // Si se menciona \"al final\", establecer valores relativos al final\n    // Nota: El valor real se ajustará en el cliente según la duración\n    if (isAtEnd) {\n        startTime = -1; // Código especial para \"final - 5 segundos\"\n        endTime = -1; // Código especial para \"final\"\n    }\n    // Si no se detectó tiempo final pero sí inicial, establecer una duración predeterminada\n    if (startTime > 0 && endTime === 5 && startTime !== 0) {\n        endTime = startTime + 5;\n    }\n    return {\n        startTime,\n        endTime\n    };\n}\n// Componente para renderizar opciones de música como botones clickables\nconst MusicOptions = (param)=>{\n    let { options, onSelectMusic } = param;\n    if (!Array.isArray(options) || options.length === 0) {\n        return null;\n    }\n    // Función para convertir el nombre del archivo a un nombre amigable\n    const getFriendlyName = (musicPath)=>{\n        const filename = musicPath.split(\"/\").pop() || musicPath;\n        // Mapear nombres de archivos a nombres amigables\n        if (filename === \"song1.mp3\") return \"M\\xfasica Energ\\xe9tica\";\n        if (filename === \"song2.mp3\") return \"Melod\\xeda Relajante\";\n        // Si no hay mapeo específico, devolver el nombre del archivo\n        return filename;\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex flex-col gap-3 mt-3\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex flex-wrap gap-2\",\n            children: options.map((musicPath, index)=>{\n                const musicName = getFriendlyName(musicPath);\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                    onClick: ()=>onSelectMusic(musicPath),\n                    className: \"px-4 py-2 text-sm bg-gradient-to-r from-purple-600 to-indigo-600 hover:from-purple-700 hover:to-indigo-700 text-white rounded-lg transition-all shadow-md hover:shadow-lg flex items-center gap-2 font-medium\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                            xmlns: \"http://www.w3.org/2000/svg\",\n                            viewBox: \"0 0 24 24\",\n                            fill: \"currentColor\",\n                            className: \"w-5 h-5\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                d: \"M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 9l12-3\",\n                                strokeWidth: \"2\",\n                                stroke: \"currentColor\",\n                                fill: \"none\",\n                                strokeLinecap: \"round\",\n                                strokeLinejoin: \"round\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                lineNumber: 143,\n                                columnNumber: 17\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                            lineNumber: 142,\n                            columnNumber: 15\n                        }, undefined),\n                        musicName\n                    ]\n                }, index, true, {\n                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                    lineNumber: 137,\n                    columnNumber: 13\n                }, undefined);\n            })\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n            lineNumber: 133,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n        lineNumber: 132,\n        columnNumber: 5\n    }, undefined);\n};\n_c = MusicOptions;\n// Función para procesar elementos detectados por la IA\nconst processDetectedElement = async (elementData, commandExecutor, finalResponseRef, timeline, lastUploadedImageUrl, currentImageUrlForThisRequest)=>{\n    let elementAdded = false;\n    let finalResponse = finalResponseRef.current;\n    try {\n        // Si se detectó un elemento para agregar con confianza suficiente\n        if (elementData && elementData.detected === true && typeof elementData.confidence === \"number\" && elementData.confidence > 0.7 && elementData.element) {\n            const element = elementData.element;\n            // Procesar según el tipo de elemento\n            if (element.type === \"text\" && element.content) {\n                // Configurar opciones para el texto\n                const textOptions = {\n                    startTime: typeof element.startTime === \"number\" ? element.startTime : 0,\n                    endTime: typeof element.endTime === \"number\" ? element.endTime : typeof element.startTime === \"number\" ? element.startTime + 5 : 5\n                };\n                // Asignar color si está disponible\n                if (element.color) {\n                    textOptions.color = element.color.toLowerCase() === \"blanco\" ? \"#FFFFFF\" : element.color.toLowerCase() === \"negro\" ? \"#000000\" : element.color.toLowerCase() === \"rojo\" ? \"#FF0000\" : element.color.toLowerCase() === \"azul\" ? \"#0000FF\" : element.color.toLowerCase() === \"verde\" ? \"#00FF00\" : element.color.toLowerCase() === \"amarillo\" ? \"#FFFF00\" : element.color;\n                }\n                // Añadir el texto\n                commandExecutor.current.addText(element.content, textOptions);\n                // Actualizar respuesta\n                finalResponse += '\\n\\n[He agregado el texto \"'.concat(element.content, '\" ').concat(element.color ? \"con color \".concat(element.color, \" \") : \"\", \"desde el segundo \").concat(textOptions.startTime, \" hasta el segundo \").concat(textOptions.endTime, \"]\");\n                elementAdded = true;\n            } else if (element.type === \"image\") {\n                // Configurar opciones para la imagen\n                const imageOptions = {\n                    startTime: typeof element.startTime === \"number\" ? element.startTime : 0,\n                    endTime: typeof element.endTime === \"number\" ? element.endTime : typeof element.startTime === \"number\" ? element.startTime + 5 : 5,\n                    // Posición centrada por defecto\n                    position: {\n                        x: 0.5,\n                        y: 0.5\n                    }\n                };\n                // Registrar tiempos específicos para depuración\n                console.log(\"Tiempos de imagen recibidos de la API: startTime=\".concat(element.startTime, \", endTime=\").concat(element.endTime));\n                // Manejar casos especiales para \"al final\" del video\n                if (element.startTime === -1 || element.endTime === -1) {\n                    // Calcular la duración del video en segundos\n                    const videoDuration = (timeline === null || timeline === void 0 ? void 0 : timeline.duration) ? Math.floor(timeline.duration / 1000) : 30; // Valor predeterminado si no hay duración\n                    console.log(\"Duraci\\xf3n del video: \".concat(videoDuration, \"s\"));\n                    if (element.startTime === -1 && element.endTime === -1) {\n                        // Si ambos son -1, colocar en los últimos 5 segundos\n                        imageOptions.startTime = Math.max(0, videoDuration - 5);\n                        imageOptions.endTime = videoDuration;\n                        console.log('Ajustando para \"al final\": startTime='.concat(imageOptions.startTime, \", endTime=\").concat(imageOptions.endTime));\n                    } else if (element.startTime === -1) {\n                        // Solo startTime es -1\n                        imageOptions.startTime = Math.max(0, videoDuration - 5);\n                    } else if (element.endTime === -1) {\n                        // Solo endTime es -1\n                        imageOptions.endTime = videoDuration;\n                    }\n                }\n                console.log(\"Tiempos de imagen a aplicar: startTime=\".concat(imageOptions.startTime, \", endTime=\").concat(imageOptions.endTime));\n                // Determinar la URL de la imagen a usar\n                const isGenericUrl = element.url === \"imagen_adjunta_por_el_usuario.jpg\";\n                const isLocalImage = lastUploadedImageUrl && lastUploadedImageUrl.startsWith(\"data:\");\n                let imageUrl;\n                // PRIORIDAD 1: Usar la imagen que acaba de subirse en este mensaje específico\n                if (currentImageUrlForThisRequest) {\n                    imageUrl = currentImageUrlForThisRequest;\n                    console.log(\"Usando la imagen reci\\xe9n subida para esta solicitud espec\\xedfica\");\n                } else if (element.url && !isGenericUrl && !element.url.includes(\"/url_de_la_imagen\")) {\n                    imageUrl = element.url;\n                    console.log(\"Usando URL espec\\xedfica del elemento\");\n                } else if (isGenericUrl && lastUploadedImageUrl) {\n                    imageUrl = lastUploadedImageUrl;\n                    console.log(\"Usando la \\xfaltima imagen subida guardada\");\n                } else {\n                    // Si todo lo demás falla, usar una imagen de ejemplo\n                    imageUrl = \"https://ik.imagekit.io/wombo/images/img2.jpg\";\n                    console.log(\"Usando imagen de ejemplo como fallback\");\n                }\n                // Añadir la imagen\n                commandExecutor.current.addImage(imageUrl, imageOptions);\n                // Actualizar respuesta\n                finalResponse += \"\\n\\n[He agregado la imagen desde el segundo \".concat(imageOptions.startTime, \" hasta el segundo \").concat(imageOptions.endTime, \"]\");\n                elementAdded = true;\n            } else if (element.type === \"video\") {\n                // Configurar opciones para el video\n                const videoOptions = {\n                    startTime: typeof element.startTime === \"number\" ? element.startTime : 0,\n                    endTime: typeof element.endTime === \"number\" ? element.endTime : typeof element.startTime === \"number\" ? element.startTime + 10 : 10\n                };\n                // URL de video de ejemplo (en producción esto sería dinámico)\n                const videoUrl = \"https://cdn.designcombo.dev/videos/demo-video-4.mp4\";\n                // Añadir el video\n                commandExecutor.current.addVideo(videoUrl, videoOptions);\n                // Actualizar respuesta\n                finalResponse += \"\\n\\n[He agregado el video desde el segundo \".concat(videoOptions.startTime, \" hasta el segundo \").concat(videoOptions.endTime, \"]\");\n                elementAdded = true;\n            } else if (element.type === \"subtitles\") {\n                // Configurar opciones para los subtítulos\n                const subtitleOptions = {\n                    groupWords: element.groupWords !== undefined ? element.groupWords : true\n                };\n                // Añadir tiempos si se especificaron\n                if (typeof element.startTime === \"number\") {\n                    subtitleOptions.startTime = element.startTime;\n                }\n                if (typeof element.endTime === \"number\") {\n                    subtitleOptions.endTime = element.endTime;\n                }\n                // Añadir los subtítulos\n                commandExecutor.current.addSubtitles(subtitleOptions);\n                // Actualizar respuesta silenciosa (se maneja en otro lado)\n                elementAdded = true;\n            } else if (element.type === \"segments\" && Array.isArray(element.segments) && element.segments.length > 0) {\n                // Configurar los segmentos a eliminar\n                const segments = element.segments.map((segment)=>({\n                        startTime: typeof segment.startTime === \"number\" ? segment.startTime : 0,\n                        endTime: typeof segment.endTime === \"number\" ? segment.endTime : typeof segment.startTime === \"number\" ? segment.startTime + 5 : 5\n                    }));\n                console.log(\"Eliminando \".concat(segments.length, \" segmentos:\"), segments);\n                // Ejemplo de formato de segmentos a mostrar\n                const segmentsFormatted = segments.map((s)=>\"\".concat(s.startTime, \"-\").concat(s.endTime, \"s\")).join(\", \");\n                try {\n                    // Ejecutar la eliminación de segmentos\n                    const result = await commandExecutor.current.removeSegments(segments);\n                    if (result) {\n                        finalResponse += \"\\n\\n[He eliminado los segmentos solicitados: \".concat(segmentsFormatted, \"]\");\n                    } else {\n                        finalResponse += \"\\n\\n[No pude eliminar los segmentos solicitados. Aseg\\xfarate de que hay un elemento seleccionado en la timeline.]\";\n                    }\n                    elementAdded = true;\n                } catch (error) {\n                    console.error(\"Error al eliminar segmentos:\", error);\n                    finalResponse += \"\\n\\n[Error al intentar eliminar los segmentos: \".concat(error.message || \"Error desconocido\", \"]\");\n                }\n            } else if (element.type === \"compact\") {\n                // Ejecutar la compactación del timeline\n                console.log(\"Compactando timeline por solicitud del usuario\");\n                try {\n                    // Iniciar la compactación\n                    const result = await commandExecutor.current.compactTimeline();\n                    if (result) {\n                        finalResponse += \"\\n\\n[He compactado el timeline eliminando los espacios vac\\xedos entre elementos]\";\n                    } else {\n                        finalResponse += \"\\n\\n[No fue posible compactar el timeline. Puede que no haya elementos o espacios vac\\xedos que compactar]\";\n                    }\n                    elementAdded = true;\n                } catch (error) {\n                    console.error(\"Error al compactar el timeline:\", error);\n                    finalResponse += \"\\n\\n[Error al intentar compactar el timeline: \".concat(error.message || \"Error desconocido\", \"]\");\n                }\n            } else if (element.type === \"smartTrim\") {\n                // Ejecutar el recorte inteligente\n                console.log(\"Iniciando recorte inteligente por solicitud del usuario\");\n                try {\n                    // Mostrar mensaje de análisis en curso\n                    finalResponse += \"\\n\\n[Analizando el video para identificar las partes a eliminar...]\";\n                    // Iniciar el recorte inteligente\n                    const result = await commandExecutor.current.smartTrim();\n                    if (result) {\n                        finalResponse += \"\\n\\n[He realizado un recorte inteligente del video, eliminando las partes innecesarias y compactando el timeline]\";\n                    } else {\n                        finalResponse += \"\\n\\n[No fue posible realizar el recorte inteligente. Verifica que el video tenga una transcripci\\xf3n]\";\n                    }\n                    elementAdded = true;\n                } catch (error) {\n                    console.error(\"Error al realizar el recorte inteligente:\", error);\n                    finalResponse += \"\\n\\n[Error al intentar realizar el recorte inteligente: \".concat(error.message || \"Error desconocido\", \"]\");\n                }\n            } else if (element.type === \"music\" && Array.isArray(element.options) && element.options.length > 0) {\n                // Respuesta más corta para música\n                finalResponse = \"\\xbfCu\\xe1l de estas opciones te gustar\\xeda a\\xf1adir?\";\n                elementAdded = true;\n            }\n        }\n    } catch (error) {\n        console.error(\"Error al procesar elemento detectado:\", error);\n        finalResponse += \"\\n\\n[No pude procesar la solicitud debido a un error.]\";\n    }\n    return {\n        finalResponse,\n        elementAdded\n    };\n};\nfunction AIChat() {\n    _s();\n    const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([\n        {\n            id: \"1\",\n            content: \"Hola, soy tu asistente de edici\\xf3n de video. \\xbfEn qu\\xe9 puedo ayudarte?\",\n            role: \"assistant\",\n            timestamp: new Date()\n        }\n    ]);\n    const [input, setInput] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [imageFile, setImageFile] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [imagePreview, setImagePreview] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isUploading, setIsUploading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [lastUploadedImageUrl, setLastUploadedImageUrl] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const fileInputRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const messagesEndRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const stateManager = (0,_features_editor_hooks_state_manager__WEBPACK_IMPORTED_MODULE_6__.useStateManager)();\n    const { timeline, scenes, playerRef } = (0,_features_editor_store_use_data_state__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n    const commandExecutor = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)((0,_ai_video_commands__WEBPACK_IMPORTED_MODULE_7__.createVideoCommandExecutor)(stateManager));\n    // Inicializar el CommandExecutorService con el executor actual\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (commandExecutor.current) {\n            _features_editor_services_command_executor_service__WEBPACK_IMPORTED_MODULE_9__[\"default\"].setExecutor(commandExecutor.current);\n            console.log(\"CommandExecutorService inicializado con \\xe9xito\");\n        }\n    }, [\n        commandExecutor.current\n    ]);\n    // Función para reiniciar el chat\n    const resetChat = ()=>{\n        setMessages([\n            {\n                id: Date.now().toString(),\n                content: \"Hola, soy tu asistente de edici\\xf3n de video. \\xbfEn qu\\xe9 puedo ayudarte?\",\n                role: \"assistant\",\n                timestamp: new Date()\n            }\n        ]);\n        setInput(\"\");\n        setImageFile(null);\n        setImagePreview(null);\n        setLastUploadedImageUrl(\"\");\n    };\n    // Scroll al último mensaje\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        var _messagesEndRef_current;\n        (_messagesEndRef_current = messagesEndRef.current) === null || _messagesEndRef_current === void 0 ? void 0 : _messagesEndRef_current.scrollIntoView({\n            behavior: \"smooth\"\n        });\n    }, [\n        messages\n    ]);\n    // Actualizar el ejecutor de comandos cuando cambie el stateManager\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        commandExecutor.current = (0,_ai_video_commands__WEBPACK_IMPORTED_MODULE_7__.createVideoCommandExecutor)(stateManager);\n        // Actualizar el servicio con la nueva instancia del ejecutor\n        _features_editor_services_command_executor_service__WEBPACK_IMPORTED_MODULE_9__[\"default\"].setExecutor(commandExecutor.current);\n        console.log(\"CommandExecutorService actualizado con una nueva instancia del ejecutor\");\n    }, [\n        stateManager\n    ]);\n    // Manejar click en el botón de imagen\n    const handleImageClick = ()=>{\n        var _fileInputRef_current;\n        (_fileInputRef_current = fileInputRef.current) === null || _fileInputRef_current === void 0 ? void 0 : _fileInputRef_current.click();\n    };\n    // Manejar selección de archivo de imagen\n    const handleFileChange = (e)=>{\n        var _e_target_files;\n        const file = (_e_target_files = e.target.files) === null || _e_target_files === void 0 ? void 0 : _e_target_files[0];\n        if (file) {\n            setImageFile(file);\n            const previewUrl = URL.createObjectURL(file);\n            setImagePreview(previewUrl);\n        }\n    };\n    // Eliminar la imagen seleccionada\n    const handleRemoveImage = ()=>{\n        setImageFile(null);\n        setImagePreview(null);\n        if (fileInputRef.current) fileInputRef.current.value = \"\";\n    };\n    // Subir imagen al servidor\n    const uploadImage = async (file)=>{\n        try {\n            setIsUploading(true);\n            // Obtener URL firmada para subir la imagen\n            const uploadDetails = await (0,_utils_upload__WEBPACK_IMPORTED_MODULE_8__.createUploadsDetails)(file.name, file);\n            // Si no es un mock local, proceder con la carga\n            if (uploadDetails.uploadUrl !== \"local-mock\") {\n                // Subir la imagen\n                await fetch(uploadDetails.uploadUrl, {\n                    method: \"PUT\",\n                    body: file,\n                    headers: {\n                        \"Content-Type\": file.type\n                    }\n                });\n            }\n            // No se necesita hacer fetch si es un mock local (dataURL)\n            // Retornar la URL pública de la imagen\n            return uploadDetails.url;\n        } catch (error) {\n            console.error(\"Error al subir la imagen:\", error);\n            throw new Error(\"No se pudo subir la imagen. Int\\xe9ntalo de nuevo.\");\n        } finally{\n            setIsUploading(false);\n        }\n    };\n    // Función para enviar mensaje\n    const handleSendMessage = async ()=>{\n        if (!input.trim() && !imageFile || isLoading) return;\n        let userMessage = {\n            id: Date.now().toString(),\n            content: input,\n            role: \"user\",\n            timestamp: new Date()\n        };\n        let uploadedImageUrl = \"\";\n        // Variable para rastrear la URL de la imagen actual para esta solicitud específica\n        let currentImageUrlForThisRequest = \"\";\n        // Si hay una imagen para subir, procesarla\n        if (imageFile) {\n            try {\n                uploadedImageUrl = await uploadImage(imageFile);\n                userMessage.imageUrl = uploadedImageUrl;\n                // Guardar la URL de la imagen para posibles referencias futuras\n                setLastUploadedImageUrl(uploadedImageUrl);\n                // Importante: Guardar la URL actual para esta solicitud específica\n                currentImageUrlForThisRequest = uploadedImageUrl;\n                console.log(\"Imagen subida exitosamente:\", uploadedImageUrl.substring(0, 100) + \"...\");\n            } catch (error) {\n                console.error(\"Error en la subida de imagen:\", error);\n                setMessages((prev)=>[\n                        ...prev,\n                        {\n                            id: (Date.now() + 1).toString(),\n                            content: \"Error al subir la imagen. Por favor, int\\xe9ntalo de nuevo. Detalles: \" + (error instanceof Error ? error.message : \"Error desconocido\"),\n                            role: \"assistant\",\n                            timestamp: new Date()\n                        }\n                    ]);\n                setIsLoading(false);\n                return;\n            }\n        }\n        // Añadir mensaje del usuario\n        setMessages((prev)=>[\n                ...prev,\n                userMessage\n            ]);\n        setInput(\"\");\n        setImageFile(null);\n        setImagePreview(null);\n        if (fileInputRef.current) fileInputRef.current.value = \"\";\n        setIsLoading(true);\n        try {\n            var _playerRef_current, _timeline_canvas_getObjects, _timeline_canvas, _timeline_canvas_getObjects1, _timeline_canvas1;\n            // Enviar a la API para procesamiento en lenguaje natural\n            const apiMessages = messages.concat(userMessage).map((msg)=>{\n                // Si el mensaje tiene una imagen, crear un formato especial para el contenido\n                if (msg.imageUrl) {\n                    // Si es una URL de datos (comienza con data:), usar un marcador especial\n                    const isDataUrl = msg.imageUrl.startsWith(\"data:\");\n                    const imageUrlToSend = isDataUrl ? \"[IMAGEN_ADJUNTA]\" : \"[IMAGEN: \".concat(msg.imageUrl, \"]\");\n                    return {\n                        role: msg.role,\n                        content: \"\".concat(msg.content || \"\", \" \").concat(imageUrlToSend)\n                    };\n                }\n                return {\n                    role: msg.role,\n                    content: msg.content\n                };\n            });\n            // Añadir contexto del editor para la IA externa\n            const contextMessage = {\n                role: \"system\",\n                content: \"\\nContexto actual del editor de video:\\n- Posici\\xf3n actual (segundos): \".concat((playerRef === null || playerRef === void 0 ? void 0 : (_playerRef_current = playerRef.current) === null || _playerRef_current === void 0 ? void 0 : _playerRef_current.getCurrentTime) ? Math.floor((playerRef.current.getCurrentTime() || 0) * 100) / 100 : 0, \"\\n- Duraci\\xf3n del proyecto (segundos): \").concat((timeline === null || timeline === void 0 ? void 0 : timeline.duration) ? Math.floor(timeline.duration / 1000) : 0, \"\\n- N\\xfamero de escenas: \").concat((scenes === null || scenes === void 0 ? void 0 : scenes.length) || 0, \"\\n- N\\xfamero de elementos en el timeline: \").concat(((timeline === null || timeline === void 0 ? void 0 : (_timeline_canvas = timeline.canvas) === null || _timeline_canvas === void 0 ? void 0 : (_timeline_canvas_getObjects = _timeline_canvas.getObjects) === null || _timeline_canvas_getObjects === void 0 ? void 0 : _timeline_canvas_getObjects.call(_timeline_canvas)) || []).length - 1 > 0 ? ((timeline === null || timeline === void 0 ? void 0 : (_timeline_canvas1 = timeline.canvas) === null || _timeline_canvas1 === void 0 ? void 0 : (_timeline_canvas_getObjects1 = _timeline_canvas1.getObjects) === null || _timeline_canvas_getObjects1 === void 0 ? void 0 : _timeline_canvas_getObjects1.call(_timeline_canvas1)) || []).length - 1 : 0, \"\\n\").concat(lastUploadedImageUrl ? \"- \\xdaltima imagen compartida por el usuario disponible para usar\" : \"\", '\\n\\nEl usuario puede expresar en lenguaje natural la necesidad de agregar elementos al video.\\nEjemplos:\\n- \"Pon un t\\xedtulo que diga \\'Bienvenidos\\' al inicio\"\\n- \"Quiero un texto blanco que diga \\'Fin\\' al final del video\"\\n- \"Necesito una imagen en el segundo 10\"\\n- \"Coloca un video de introducci\\xf3n al principio\"\\n\\nSi el usuario adjunta una imagen en el mensaje, la URL estar\\xe1 en formato [IMAGEN: url_de_la_imagen].\\nDebes detectar si quiere agregar esta imagen al video y en qu\\xe9 momento temporal.\\n')\n            };\n            try {\n                var _data_message, _elementData_element;\n                const response = await fetch(\"/api/ai-chat\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        messages: [\n                            contextMessage,\n                            ...apiMessages\n                        ],\n                        // Usar la URL de la imagen actual para esta solicitud si existe,\n                        // de lo contrario usar la última URL guardada\n                        lastImageUrl: currentImageUrlForThisRequest || lastUploadedImageUrl || \"\"\n                    }),\n                    // Agregar timeout para evitar esperas infinitas\n                    signal: AbortSignal.timeout(15000) // 15 segundos máximo\n                });\n                if (!response.ok) {\n                    throw new Error(\"Error de API: \".concat(response.status, \" \").concat(response.statusText));\n                }\n                const data = await response.json();\n                // Asegurarse de que data.message.content existe\n                const aiResponse = (data === null || data === void 0 ? void 0 : (_data_message = data.message) === null || _data_message === void 0 ? void 0 : _data_message.content) || \"Lo siento, no pude entender tu solicitud.\";\n                // Obtener los datos del elemento si existen (con verificación segura)\n                const elementData = data === null || data === void 0 ? void 0 : data.elementData;\n                // Variable para la respuesta final\n                let finalResponse = aiResponse;\n                // Crear una referencia a la respuesta final para que sea accesible en la función procesadora\n                const finalResponseRef = {\n                    current: finalResponse\n                };\n                let elementAdded = false;\n                // Usar la función de procesamiento de elementos\n                const processResult = await processDetectedElement(elementData, commandExecutor, finalResponseRef, timeline, lastUploadedImageUrl, currentImageUrlForThisRequest);\n                finalResponse = processResult.finalResponse;\n                elementAdded = processResult.elementAdded;\n                // Crear mensaje con los detalles completos\n                const newMessage = {\n                    id: Date.now().toString(),\n                    content: finalResponse || data.message.content,\n                    role: \"assistant\",\n                    timestamp: new Date()\n                };\n                // Si se detectó un elemento de música, agregar las opciones al mensaje\n                if ((elementData === null || elementData === void 0 ? void 0 : elementData.detected) && ((_elementData_element = elementData.element) === null || _elementData_element === void 0 ? void 0 : _elementData_element.type) === \"music\" && Array.isArray(elementData.element.options)) {\n                    newMessage.musicOptions = elementData.element.options;\n                    console.log(\"Opciones de m\\xfasica agregadas al mensaje:\", newMessage.musicOptions);\n                }\n                // Actualizar mensajes\n                setMessages((prev)=>[\n                        ...prev,\n                        newMessage\n                    ]);\n            } catch (apiError) {\n                console.error(\"Error en la comunicaci\\xf3n con la API:\", apiError);\n                // Mensaje de error específico de API\n                setMessages((prev)=>[\n                        ...prev,\n                        {\n                            id: (Date.now() + 1).toString(),\n                            content: \"Lo siento, ha ocurrido un error al comunicarse con el servicio de IA. Por favor, intenta de nuevo en unos momentos.\",\n                            role: \"assistant\",\n                            timestamp: new Date()\n                        }\n                    ]);\n            }\n        } catch (error) {\n            console.error(\"Error al procesar el mensaje:\", error);\n            // Determinar mensaje de error apropiado\n            let errorMessage = \"Lo siento, ha ocurrido un error al procesar tu mensaje.\";\n            if (error instanceof Error) {\n                if (error.message.includes(\"timeout\") || error.message.includes(\"abort\")) {\n                    errorMessage = \"La solicitud ha tardado demasiado. Prueba con un mensaje m\\xe1s corto.\";\n                } else if (error.message.includes(\"network\") || error.message.includes(\"fetch\")) {\n                    errorMessage = \"Parece que hay un problema de conexi\\xf3n. Verifica tu conexi\\xf3n a internet e intenta de nuevo.\";\n                }\n            }\n            // Mensaje de error\n            setMessages((prev)=>[\n                    ...prev,\n                    {\n                        id: (Date.now() + 1).toString(),\n                        content: errorMessage,\n                        role: \"assistant\",\n                        timestamp: new Date()\n                    }\n                ]);\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    // Función para manejar la selección de música\n    const handleMusicSelect = async (musicPath)=>{\n        try {\n            console.log(\"Usuario seleccion\\xf3 m\\xfasica: \".concat(musicPath));\n            // Calcular la duración del video en segundos\n            const videoDuration = (timeline === null || timeline === void 0 ? void 0 : timeline.duration) ? Math.floor(timeline.duration / 1000) : 300; // 5 minutos por defecto\n            console.log(\"Duraci\\xf3n del video: \".concat(videoDuration, \" segundos\"));\n            // Configuración de opciones para la música\n            const musicOptions = {\n                startTime: 0,\n                endTime: videoDuration,\n                volume: 80,\n                fadeIn: true,\n                fadeOut: true\n            };\n            // Añadir la música al timeline (respetará la duración natural si es más corta que el video)\n            commandExecutor.current.addMusic(musicPath, musicOptions);\n            // Obtener un nombre amigable para la música\n            const getMusicFriendlyName = (path)=>{\n                const filename = path.split(\"/\").pop() || path;\n                if (filename === \"song1.mp3\") return \"M\\xfasica Energ\\xe9tica\";\n                if (filename === \"song2.mp3\") return \"Melod\\xeda Relajante\";\n                return filename;\n            };\n            // Añadir un mensaje de confirmación\n            const musicName = getMusicFriendlyName(musicPath);\n            const confirmationMsg = {\n                id: Date.now().toString(),\n                content: 'He a\\xf1adido \"'.concat(musicName, '\" como m\\xfasica de fondo para toda la duraci\\xf3n del video.'),\n                role: \"assistant\",\n                timestamp: new Date()\n            };\n            setMessages((prev)=>[\n                    ...prev,\n                    confirmationMsg\n                ]);\n        } catch (error) {\n            console.error(\"Error al a\\xf1adir m\\xfasica:\", error);\n            // Mensaje de error\n            const errorMsg = {\n                id: Date.now().toString(),\n                content: \"No se pudo a\\xf1adir la m\\xfasica. Error: \".concat(error.message || \"Error desconocido\"),\n                role: \"assistant\",\n                timestamp: new Date()\n            };\n            setMessages((prev)=>[\n                    ...prev,\n                    errorMsg\n                ]);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex h-full flex-col bg-[rgb(20,10,30)] border-l border-purple-800/30\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"bg-[rgb(30,15,45)] p-3 flex justify-between items-center border-b border-purple-800/30\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center gap-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"h-7 w-7 rounded flex items-center justify-center bg-purple-700\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_ImageIcon_Loader2_RefreshCw_Send_Sparkles_X_lucide_react__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                                    className: \"h-3.5 w-3.5 text-white\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                    lineNumber: 764,\n                                    columnNumber: 13\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                lineNumber: 763,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                className: \"font-medium text-white text-sm\",\n                                children: \"Asistente IA\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                lineNumber: 766,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                        lineNumber: 762,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center gap-1\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                            variant: \"ghost\",\n                            size: \"icon\",\n                            className: \"h-7 w-7 rounded hover:bg-purple-800/20\",\n                            onClick: resetChat,\n                            title: \"Reiniciar conversaci\\xf3n\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_ImageIcon_Loader2_RefreshCw_Send_Sparkles_X_lucide_react__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n                                className: \"h-3.5 w-3.5 text-zinc-300\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                lineNumber: 776,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                            lineNumber: 769,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                        lineNumber: 768,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                lineNumber: 761,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_scroll_area__WEBPACK_IMPORTED_MODULE_4__.ScrollArea, {\n                className: \"flex-1 pr-2 chat-scrollbar\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"p-3 space-y-3\",\n                    children: [\n                        messages.map((message)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex flex-col animate-fadeIn \".concat(message.role === \"assistant\" ? \"items-start\" : \"items-end\"),\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"max-w-[85%] rounded-md px-4 py-2 \".concat(message.role === \"assistant\" ? \"bg-[rgb(40,20,60)] text-zinc-200\" : \"bg-purple-700 text-white\"),\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"whitespace-pre-wrap text-sm\",\n                                                children: message.content\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                                lineNumber: 798,\n                                                columnNumber: 17\n                                            }, this),\n                                            message.imageUrl && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"mt-2 rounded overflow-hidden\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                                    src: message.imageUrl,\n                                                    alt: \"Imagen adjunta\",\n                                                    className: \"max-h-48 max-w-full object-contain\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                                    lineNumber: 801,\n                                                    columnNumber: 21\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                                lineNumber: 800,\n                                                columnNumber: 19\n                                            }, this),\n                                            message.musicOptions && message.musicOptions.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MusicOptions, {\n                                                options: message.musicOptions,\n                                                onSelectMusic: handleMusicSelect\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                                lineNumber: 809,\n                                                columnNumber: 19\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                        lineNumber: 791,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"text-[10px] mt-0.5 px-1 \".concat(message.role === \"assistant\" ? \"text-zinc-500\" : \"text-purple-300\"),\n                                        children: message.timestamp.toLocaleTimeString([], {\n                                            hour: \"2-digit\",\n                                            minute: \"2-digit\"\n                                        })\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                        lineNumber: 815,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, message.id, true, {\n                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                lineNumber: 785,\n                                columnNumber: 13\n                            }, this)),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            ref: messagesEndRef,\n                            className: \"h-2\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                            lineNumber: 820,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                    lineNumber: 783,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                lineNumber: 782,\n                columnNumber: 7\n            }, this),\n            imagePreview && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"relative mx-3 mt-1 mb-2 h-24 bg-[rgb(30,15,45)] p-2 flex items-center justify-center rounded border border-purple-800/30\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                        variant: \"ghost\",\n                        size: \"icon\",\n                        className: \"absolute right-1 top-1 z-10 h-5 w-5 rounded-full bg-black/50\",\n                        onClick: handleRemoveImage,\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_ImageIcon_Loader2_RefreshCw_Send_Sparkles_X_lucide_react__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n                            className: \"h-3 w-3 text-white\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                            lineNumber: 833,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                        lineNumber: 827,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                        src: imagePreview,\n                        alt: \"Vista previa\",\n                        className: \"max-h-full max-w-full object-contain\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                        lineNumber: 835,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                lineNumber: 826,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"bg-[rgb(30,15,45)] p-3 border-t border-purple-800/30\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex items-center gap-2\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex rounded overflow-hidden border border-purple-900/50 flex-1 bg-[rgb(25,12,40)]\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                                variant: \"ghost\",\n                                size: \"icon\",\n                                className: \"h-9 w-9 bg-transparent hover:bg-purple-800/20\",\n                                onClick: handleImageClick,\n                                disabled: isLoading,\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_ImageIcon_Loader2_RefreshCw_Send_Sparkles_X_lucide_react__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {\n                                    className: \"h-4 w-4 text-zinc-400\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                    lineNumber: 854,\n                                    columnNumber: 15\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                lineNumber: 847,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_input__WEBPACK_IMPORTED_MODULE_3__.Input, {\n                                value: input,\n                                onChange: (e)=>setInput(e.target.value),\n                                onKeyDown: (e)=>{\n                                    if (e.key === \"Enter\" && !e.shiftKey) {\n                                        e.preventDefault();\n                                        handleSendMessage();\n                                    }\n                                },\n                                placeholder: \"Escribe tu mensaje...\",\n                                disabled: isLoading,\n                                className: \"flex-1 border-0 bg-transparent h-9 focus:ring-0 focus-visible:ring-0 text-zinc-200\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                lineNumber: 857,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                                onClick: handleSendMessage,\n                                disabled: !input.trim() && !imageFile || isLoading,\n                                className: \"h-9 px-3 rounded-none \".concat(!input.trim() && !imageFile || isLoading ? \"bg-purple-900/50 cursor-not-allowed text-purple-300/50\" : \"bg-purple-700 hover:bg-purple-600 text-white\"),\n                                children: isLoading || isUploading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_ImageIcon_Loader2_RefreshCw_Send_Sparkles_X_lucide_react__WEBPACK_IMPORTED_MODULE_14__[\"default\"], {\n                                    className: \"h-4 w-4 animate-spin\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                    lineNumber: 881,\n                                    columnNumber: 17\n                                }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_ImageIcon_Loader2_RefreshCw_Send_Sparkles_X_lucide_react__WEBPACK_IMPORTED_MODULE_15__[\"default\"], {\n                                    className: \"h-3.5 w-3.5\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                    lineNumber: 883,\n                                    columnNumber: 17\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                lineNumber: 871,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                        lineNumber: 846,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                    lineNumber: 845,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                lineNumber: 844,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                type: \"file\",\n                ref: fileInputRef,\n                onChange: handleFileChange,\n                accept: \"image/*\",\n                className: \"hidden\",\n                disabled: isLoading\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                lineNumber: 890,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n        lineNumber: 759,\n        columnNumber: 5\n    }, this);\n}\n_s(AIChat, \"WKxl2mapr74X4nIwUYgYMKY9i0Y=\", false, function() {\n    return [\n        _features_editor_hooks_state_manager__WEBPACK_IMPORTED_MODULE_6__.useStateManager,\n        _features_editor_store_use_data_state__WEBPACK_IMPORTED_MODULE_5__[\"default\"]\n    ];\n});\n_c1 = AIChat;\nvar _c, _c1;\n$RefreshReg$(_c, \"MusicOptions\");\n$RefreshReg$(_c1, \"AIChat\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/ai-chat/index.tsx\n"));

/***/ })

});