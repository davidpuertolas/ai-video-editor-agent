"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/ai-chat/index.tsx":
/*!**************************************!*\
  !*** ./components/ai-chat/index.tsx ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ AIChat; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_ui_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/ui/button */ \"(app-pages-browser)/./components/ui/button.tsx\");\n/* harmony import */ var _components_ui_input__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/ui/input */ \"(app-pages-browser)/./components/ui/input.tsx\");\n/* harmony import */ var _components_ui_scroll_area__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/ui/scroll-area */ \"(app-pages-browser)/./components/ui/scroll-area.tsx\");\n/* harmony import */ var _barrel_optimize_names_ImageIcon_Loader2_RefreshCw_Send_Sparkles_X_lucide_react__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! __barrel_optimize__?names=ImageIcon,Loader2,RefreshCw,Send,Sparkles,X!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/sparkles.js\");\n/* harmony import */ var _barrel_optimize_names_ImageIcon_Loader2_RefreshCw_Send_Sparkles_X_lucide_react__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! __barrel_optimize__?names=ImageIcon,Loader2,RefreshCw,Send,Sparkles,X!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/refresh-cw.js\");\n/* harmony import */ var _barrel_optimize_names_ImageIcon_Loader2_RefreshCw_Send_Sparkles_X_lucide_react__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! __barrel_optimize__?names=ImageIcon,Loader2,RefreshCw,Send,Sparkles,X!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/x.js\");\n/* harmony import */ var _barrel_optimize_names_ImageIcon_Loader2_RefreshCw_Send_Sparkles_X_lucide_react__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! __barrel_optimize__?names=ImageIcon,Loader2,RefreshCw,Send,Sparkles,X!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/image.js\");\n/* harmony import */ var _barrel_optimize_names_ImageIcon_Loader2_RefreshCw_Send_Sparkles_X_lucide_react__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! __barrel_optimize__?names=ImageIcon,Loader2,RefreshCw,Send,Sparkles,X!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/loader-circle.js\");\n/* harmony import */ var _barrel_optimize_names_ImageIcon_Loader2_RefreshCw_Send_Sparkles_X_lucide_react__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! __barrel_optimize__?names=ImageIcon,Loader2,RefreshCw,Send,Sparkles,X!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/send.js\");\n/* harmony import */ var _features_editor_store_use_data_state__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/features/editor/store/use-data-state */ \"(app-pages-browser)/./features/editor/store/use-data-state.ts\");\n/* harmony import */ var _features_editor_hooks_state_manager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/features/editor/hooks/state-manager */ \"(app-pages-browser)/./features/editor/hooks/state-manager.tsx\");\n/* harmony import */ var _ai_video_commands__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ai-video-commands */ \"(app-pages-browser)/./components/ai-chat/ai-video-commands.ts\");\n/* harmony import */ var _utils_upload__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/utils/upload */ \"(app-pages-browser)/./utils/upload.ts\");\n/* harmony import */ var _features_editor_services_command_executor_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/features/editor/services/command-executor-service */ \"(app-pages-browser)/./features/editor/services/command-executor-service.ts\");\n/* harmony import */ var _features_editor_store_use_store__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @/features/editor/store/use-store */ \"(app-pages-browser)/./features/editor/store/use-store.ts\");\n/* harmony import */ var react_markdown__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! react-markdown */ \"(app-pages-browser)/./node_modules/react-markdown/lib/index.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n// Indica si la solicitud debe ser procesada por el agente\nfunction shouldUseAgent(mode, message) {\n    if (mode !== \"agent\") return false;\n    // Patrones que indican que el usuario quiere que el agente edite automáticamente el video\n    const autoEditPatterns = [\n        /edita\\s+(el|este|mi)?\\s*video/i,\n        /mejora\\s+(el|este|mi)?\\s*video/i,\n        /optimiza\\s+(el|este|mi)?\\s*video/i,\n        /procesa\\s+(el|este|mi)?\\s*video/i,\n        /arregla\\s+(el|este|mi)?\\s*video/i,\n        /modifica\\s+(el|este|mi)?\\s*video/i,\n        /trabaja\\s+(en|con)\\s+(el|este|mi)?\\s*video/i,\n        /puedes\\s+editar/i,\n        /^edita$/i,\n        /^editar$/i,\n        /^mejora$/i,\n        /^optimiza$/i\n    ];\n    return autoEditPatterns.some((pattern)=>pattern.test(message.trim()));\n}\n// Función para extraer tiempos de inicio y fin de una imagen a partir del mensaje\nfunction extractImageTimesFromMessage(messageContent) {\n    let startTime = 0;\n    let endTime = 5;\n    if (!messageContent) return {\n        startTime,\n        endTime\n    };\n    // Buscar referencias al tiempo inicial\n    const startTimePatterns = [\n        /en el segundo (\\d+)/i,\n        /desde el segundo (\\d+)/i,\n        /a partir del segundo (\\d+)/i,\n        /comenzando en el segundo (\\d+)/i,\n        /desde el minuto (\\d+)/i,\n        /en el minuto (\\d+)/i,\n        /entre los segundos (\\d+) y/i,\n        /del segundo (\\d+) al/i,\n        /empezando en (\\d+)/i,\n        /segundo (\\d+)/i,\n        /en (\\d+) segundos/i,\n        /en el (\\d+)/i\n    ];\n    // Buscar referencias al tiempo final\n    const endTimePatterns = [\n        /hasta el segundo (\\d+)/i,\n        /al segundo (\\d+)/i,\n        /terminando en el segundo (\\d+)/i,\n        /hasta el minuto (\\d+)/i,\n        /entre los segundos \\d+ y (\\d+)/i,\n        /del segundo \\d+ al (\\d+)/i,\n        /por (\\d+) segundos/i,\n        /durante (\\d+) segundos/i\n    ];\n    // Buscar palabras clave especiales\n    const isAtStart = /\\b(al inicio|al principio|al comienzo)\\b/i.test(messageContent);\n    const isAtEnd = /\\b(al final|al término|al acabar)\\b/i.test(messageContent);\n    // Procesar patrones de tiempo inicial\n    for (const pattern of startTimePatterns){\n        const match = messageContent.match(pattern);\n        if (match && match[1]) {\n            // Si es referencia a minutos, convertir a segundos\n            startTime = pattern.toString().includes(\"minuto\") ? parseInt(match[1]) * 60 : parseInt(match[1]);\n            break;\n        }\n    }\n    // Procesar patrones de tiempo final\n    for (const pattern of endTimePatterns){\n        const match = messageContent.match(pattern);\n        if (match && match[1]) {\n            if (pattern.toString().includes(\"por\") || pattern.toString().includes(\"durante\")) {\n                // Es una duración relativa, sumar al tiempo inicial\n                endTime = startTime + parseInt(match[1]);\n            } else {\n                // Es un tiempo absoluto\n                endTime = pattern.toString().includes(\"minuto\") ? parseInt(match[1]) * 60 : parseInt(match[1]);\n            }\n            break;\n        }\n    }\n    // Si se menciona \"al inicio\", establecer tiempo a 0\n    if (isAtStart) {\n        startTime = 0;\n        endTime = 5; // Por defecto 5 segundos de duración\n    }\n    // Si se menciona \"al final\", establecer valores relativos al final\n    // Nota: El valor real se ajustará en el cliente según la duración\n    if (isAtEnd) {\n        startTime = -1; // Código especial para \"final - 5 segundos\"\n        endTime = -1; // Código especial para \"final\"\n    }\n    // Si no se detectó tiempo final pero sí inicial, establecer una duración predeterminada\n    if (startTime > 0 && endTime === 5 && startTime !== 0) {\n        endTime = startTime + 5;\n    }\n    return {\n        startTime,\n        endTime\n    };\n}\n// Función para procesar elementos detectados por la IA\nconst processDetectedElement = async (elementData, commandExecutor, finalResponseRef, timeline, lastUploadedImageUrl, currentImageUrlForThisRequest)=>{\n    let elementAdded = false;\n    let finalResponse = finalResponseRef.current;\n    try {\n        // Si se detectó un elemento para agregar con confianza suficiente\n        if (elementData && elementData.detected === true && typeof elementData.confidence === \"number\" && elementData.confidence > 0.7 && elementData.element) {\n            const element = elementData.element;\n            // Procesar según el tipo de elemento\n            if (element.type === \"text\" && element.content) {\n                // Configurar opciones para el texto\n                const textOptions = {\n                    startTime: typeof element.startTime === \"number\" ? element.startTime : 0,\n                    endTime: typeof element.endTime === \"number\" ? element.endTime : typeof element.startTime === \"number\" ? element.startTime + 5 : 5\n                };\n                // Asignar color si está disponible\n                if (element.color) {\n                    textOptions.color = element.color.toLowerCase() === \"blanco\" ? \"#FFFFFF\" : element.color.toLowerCase() === \"negro\" ? \"#000000\" : element.color.toLowerCase() === \"rojo\" ? \"#FF0000\" : element.color.toLowerCase() === \"azul\" ? \"#0000FF\" : element.color.toLowerCase() === \"verde\" ? \"#00FF00\" : element.color.toLowerCase() === \"amarillo\" ? \"#FFFF00\" : element.color;\n                }\n                // Añadir el texto\n                commandExecutor.current.addText(element.content, textOptions);\n                // Actualizar respuesta\n                finalResponse += '\\n\\n[He agregado el texto \"'.concat(element.content, '\" ').concat(element.color ? \"con color \".concat(element.color, \" \") : \"\", \"desde el segundo \").concat(textOptions.startTime, \" hasta el segundo \").concat(textOptions.endTime, \"]\");\n                elementAdded = true;\n            } else if (element.type === \"image\") {\n                // Configurar opciones para la imagen\n                const imageOptions = {\n                    startTime: typeof element.startTime === \"number\" ? element.startTime : 0,\n                    endTime: typeof element.endTime === \"number\" ? element.endTime : typeof element.startTime === \"number\" ? element.startTime + 5 : 5,\n                    // Posición centrada por defecto\n                    position: {\n                        x: 0.5,\n                        y: 0.5\n                    }\n                };\n                // Registrar tiempos específicos para depuración\n                console.log(\"Tiempos de imagen recibidos de la API: startTime=\".concat(element.startTime, \", endTime=\").concat(element.endTime));\n                // Manejar casos especiales para \"al final\" del video\n                if (element.startTime === -1 || element.endTime === -1) {\n                    // Calcular la duración del video en segundos\n                    const videoDuration = (timeline === null || timeline === void 0 ? void 0 : timeline.duration) ? Math.floor(timeline.duration / 1000) : 30; // Valor predeterminado si no hay duración\n                    console.log(\"Duraci\\xf3n del video: \".concat(videoDuration, \"s\"));\n                    if (element.startTime === -1 && element.endTime === -1) {\n                        // Si ambos son -1, colocar en los últimos 5 segundos\n                        imageOptions.startTime = Math.max(0, videoDuration - 5);\n                        imageOptions.endTime = videoDuration;\n                        console.log('Ajustando para \"al final\": startTime='.concat(imageOptions.startTime, \", endTime=\").concat(imageOptions.endTime));\n                    } else if (element.startTime === -1) {\n                        // Solo startTime es -1\n                        imageOptions.startTime = Math.max(0, videoDuration - 5);\n                    } else if (element.endTime === -1) {\n                        // Solo endTime es -1\n                        imageOptions.endTime = videoDuration;\n                    }\n                }\n                console.log(\"Tiempos de imagen a aplicar: startTime=\".concat(imageOptions.startTime, \", endTime=\").concat(imageOptions.endTime));\n                // Determinar la URL de la imagen a usar\n                const isGenericUrl = element.url === \"imagen_adjunta_por_el_usuario.jpg\";\n                const isLocalImage = lastUploadedImageUrl && lastUploadedImageUrl.startsWith(\"data:\");\n                let imageUrl;\n                // PRIORIDAD 1: Usar la imagen que acaba de subirse en este mensaje específico\n                if (currentImageUrlForThisRequest) {\n                    imageUrl = currentImageUrlForThisRequest;\n                    console.log(\"Usando la imagen reci\\xe9n subida para esta solicitud espec\\xedfica\");\n                } else if (element.url && !isGenericUrl && !element.url.includes(\"/url_de_la_imagen\")) {\n                    imageUrl = element.url;\n                    console.log(\"Usando URL espec\\xedfica del elemento\");\n                } else if (isGenericUrl && lastUploadedImageUrl) {\n                    imageUrl = lastUploadedImageUrl;\n                    console.log(\"Usando la \\xfaltima imagen subida guardada\");\n                } else {\n                    // Si todo lo demás falla, usar una imagen de ejemplo\n                    imageUrl = \"https://ik.imagekit.io/wombo/images/img2.jpg\";\n                    console.log(\"Usando imagen de ejemplo como fallback\");\n                }\n                // Añadir la imagen\n                commandExecutor.current.addImage(imageUrl, imageOptions);\n                // Actualizar respuesta\n                finalResponse += \"\\n\\n[He agregado la imagen desde el segundo \".concat(imageOptions.startTime, \" hasta el segundo \").concat(imageOptions.endTime, \"]\");\n                elementAdded = true;\n            } else if (element.type === \"video\") {\n                // Configurar opciones para el video\n                const videoOptions = {\n                    startTime: typeof element.startTime === \"number\" ? element.startTime : 0,\n                    endTime: typeof element.endTime === \"number\" ? element.endTime : typeof element.startTime === \"number\" ? element.startTime + 10 : 10\n                };\n                // URL de video de ejemplo (en producción esto sería dinámico)\n                const videoUrl = \"https://cdn.designcombo.dev/videos/demo-video-4.mp4\";\n                // Añadir el video\n                commandExecutor.current.addVideo(videoUrl, videoOptions);\n                // Actualizar respuesta\n                finalResponse += \"\\n\\n[He agregado el video desde el segundo \".concat(videoOptions.startTime, \" hasta el segundo \").concat(videoOptions.endTime, \"]\");\n                elementAdded = true;\n            } else if (element.type === \"subtitles\") {\n                // Configurar opciones para los subtítulos\n                const subtitleOptions = {\n                    groupWords: element.groupWords !== undefined ? element.groupWords : true\n                };\n                // Añadir tiempos si se especificaron\n                if (typeof element.startTime === \"number\") {\n                    subtitleOptions.startTime = element.startTime;\n                }\n                if (typeof element.endTime === \"number\") {\n                    subtitleOptions.endTime = element.endTime;\n                }\n                // Añadir los subtítulos\n                commandExecutor.current.addSubtitles(subtitleOptions);\n                // Actualizar respuesta silenciosa (se maneja en otro lado)\n                elementAdded = true;\n            } else if (element.type === \"segments\" && Array.isArray(element.segments) && element.segments.length > 0) {\n                // Configurar los segmentos a eliminar\n                const segments = element.segments.map((segment)=>({\n                        startTime: typeof segment.startTime === \"number\" ? segment.startTime : 0,\n                        endTime: typeof segment.endTime === \"number\" ? segment.endTime : typeof segment.startTime === \"number\" ? segment.startTime + 5 : 5\n                    }));\n                console.log(\"Eliminando \".concat(segments.length, \" segmentos:\"), segments);\n                // Ejemplo de formato de segmentos a mostrar\n                const segmentsFormatted = segments.map((s)=>\"\".concat(s.startTime, \"-\").concat(s.endTime, \"s\")).join(\", \");\n                try {\n                    // Ejecutar la eliminación de segmentos\n                    const result = await commandExecutor.current.removeSegments(segments);\n                    if (result) {\n                        finalResponse += \"\\n\\n[He eliminado los segmentos solicitados: \".concat(segmentsFormatted, \"]\");\n                    } else {\n                        finalResponse += \"\\n\\n[No pude eliminar los segmentos solicitados. Aseg\\xfarate de que hay un elemento seleccionado en la timeline.]\";\n                    }\n                    elementAdded = true;\n                } catch (error) {\n                    console.error(\"Error al eliminar segmentos:\", error);\n                    finalResponse += \"\\n\\n[Error al intentar eliminar los segmentos: \".concat(error.message || \"Error desconocido\", \"]\");\n                }\n            } else if (element.type === \"compact\") {\n                // Ejecutar la compactación del timeline\n                console.log(\"Compactando timeline por solicitud del usuario\");\n                try {\n                    // Iniciar la compactación\n                    const result = await commandExecutor.current.compactTimeline();\n                    if (result) {\n                        finalResponse += \"\\n\\n[He compactado el timeline eliminando los espacios vac\\xedos entre elementos]\";\n                    } else {\n                        finalResponse += \"\\n\\n[No fue posible compactar el timeline. Puede que no haya elementos o espacios vac\\xedos que compactar]\";\n                    }\n                    elementAdded = true;\n                } catch (error) {\n                    console.error(\"Error al compactar el timeline:\", error);\n                    finalResponse += \"\\n\\n[Error al intentar compactar el timeline: \".concat(error.message || \"Error desconocido\", \"]\");\n                }\n            } else if (element.type === \"smartTrim\") {\n                // Ejecutar el recorte inteligente\n                console.log(\"Iniciando recorte inteligente por solicitud del usuario\");\n                try {\n                    // Mostrar mensaje de análisis en curso\n                    finalResponse += \"\\n\\n[Analizando el video para identificar las partes a eliminar...]\";\n                    // Iniciar el recorte inteligente\n                    const result = await commandExecutor.current.smartTrim();\n                    if (result) {\n                        finalResponse += \"\\n\\n[He realizado un recorte inteligente del video, eliminando las partes innecesarias y compactando el timeline]\";\n                    } else {\n                        finalResponse += \"\\n\\n[No fue posible realizar el recorte inteligente. Verifica que el video tenga una transcripci\\xf3n]\";\n                    }\n                    elementAdded = true;\n                } catch (error) {\n                    console.error(\"Error al realizar el recorte inteligente:\", error);\n                    finalResponse += \"\\n\\n[Error al intentar realizar el recorte inteligente: \".concat(error.message || \"Error desconocido\", \"]\");\n                }\n            } else if (element.type === \"music\" && Array.isArray(element.options) && element.options.length > 0) {\n                // Respuesta más corta para música\n                finalResponse = \"\\xbfCu\\xe1l de estas opciones te gustar\\xeda a\\xf1adir?\";\n                elementAdded = true;\n            }\n        }\n    } catch (error) {\n        console.error(\"Error al procesar elemento detectado:\", error);\n        finalResponse += \"\\n\\n[No pude procesar la solicitud debido a un error.]\";\n    }\n    return {\n        finalResponse,\n        elementAdded\n    };\n};\n// Componente para renderizar opciones de música como botones clickables\nconst MusicOptions = (param)=>{\n    let { options, onSelectMusic } = param;\n    if (!Array.isArray(options) || options.length === 0) {\n        return null;\n    }\n    // Función para convertir el nombre del archivo a un nombre amigable\n    const getFriendlyName = (musicPath)=>{\n        const filename = musicPath.split(\"/\").pop() || musicPath;\n        // Mapear nombres de archivos a nombres amigables\n        if (filename === \"song1.mp3\") return \"M\\xfasica Energ\\xe9tica\";\n        if (filename === \"song2.mp3\") return \"Melod\\xeda Relajante\";\n        // Si no hay mapeo específico, devolver el nombre del archivo\n        return filename;\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex flex-col gap-3 mt-3\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex flex-wrap gap-2\",\n            children: options.map((musicPath, index)=>{\n                const musicName = getFriendlyName(musicPath);\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                    onClick: ()=>onSelectMusic(musicPath),\n                    className: \"px-4 py-2 text-sm bg-gradient-to-r from-purple-600 to-indigo-600 hover:from-purple-700 hover:to-indigo-700 text-white rounded-lg transition-all shadow-md hover:shadow-lg flex items-center gap-2 font-medium\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                            xmlns: \"http://www.w3.org/2000/svg\",\n                            viewBox: \"0 0 24 24\",\n                            fill: \"currentColor\",\n                            className: \"w-5 h-5\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                d: \"M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 9l12-3\",\n                                strokeWidth: \"2\",\n                                stroke: \"currentColor\",\n                                fill: \"none\",\n                                strokeLinecap: \"round\",\n                                strokeLinejoin: \"round\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                lineNumber: 402,\n                                columnNumber: 17\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                            lineNumber: 401,\n                            columnNumber: 15\n                        }, undefined),\n                        musicName\n                    ]\n                }, index, true, {\n                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                    lineNumber: 396,\n                    columnNumber: 13\n                }, undefined);\n            })\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n            lineNumber: 392,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n        lineNumber: 391,\n        columnNumber: 5\n    }, undefined);\n};\n_c = MusicOptions;\n// Componente para mostrar la animación de \"pensando\"\nconst ThinkingAnimation = ()=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex flex-col items-start animate-fadeIn\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"max-w-[85%] rounded-md px-4 py-2 bg-[rgb(40,20,60)] text-zinc-200\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex items-center gap-2\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex gap-1\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"h-2 w-2 bg-purple-400 rounded-full animate-pulse\",\n                                style: {\n                                    animationDelay: \"0ms\"\n                                }\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                lineNumber: 419,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"h-2 w-2 bg-purple-400 rounded-full animate-pulse\",\n                                style: {\n                                    animationDelay: \"300ms\"\n                                }\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                lineNumber: 420,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"h-2 w-2 bg-purple-400 rounded-full animate-pulse\",\n                                style: {\n                                    animationDelay: \"600ms\"\n                                }\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                lineNumber: 421,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                        lineNumber: 418,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"text-xs text-zinc-400\",\n                        children: \"Pensando...\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                        lineNumber: 423,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                lineNumber: 417,\n                columnNumber: 7\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n            lineNumber: 416,\n            columnNumber: 5\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n        lineNumber: 415,\n        columnNumber: 3\n    }, undefined);\n_c1 = ThinkingAnimation;\n// Componente para mostrar el razonamiento desplegable\nconst ReasoningSection = (param)=>{\n    let { reasoning } = param;\n    _s();\n    const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"mt-2 text-xs border-t border-purple-800/30 pt-2\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: ()=>setIsOpen(!isOpen),\n                className: \"flex items-center gap-1 text-purple-400 hover:text-purple-300 transition-colors\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        width: \"14\",\n                        height: \"14\",\n                        viewBox: \"0 0 24 24\",\n                        fill: \"none\",\n                        stroke: \"currentColor\",\n                        strokeWidth: \"2\",\n                        strokeLinecap: \"round\",\n                        strokeLinejoin: \"round\",\n                        className: \"transition-transform \".concat(isOpen ? \"rotate-180\" : \"\"),\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"polyline\", {\n                            points: \"6 9 12 15 18 9\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                            lineNumber: 451,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                        lineNumber: 439,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        children: \"Ver plan de acci\\xf3n\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                        lineNumber: 453,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                lineNumber: 435,\n                columnNumber: 7\n            }, undefined),\n            isOpen && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mt-2 p-2 bg-[rgb(30,15,45)] rounded text-zinc-400 whitespace-pre-wrap font-mono text-[11px]\",\n                children: reasoning\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                lineNumber: 457,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n        lineNumber: 434,\n        columnNumber: 5\n    }, undefined);\n};\n_s(ReasoningSection, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c2 = ReasoningSection;\n// Componente para simular el efecto de texto en streaming\nconst StreamingText = (param)=>{\n    let { text, onComplete } = param;\n    _s1();\n    const [displayedText, setDisplayedText] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [isComplete, setIsComplete] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let index = 0;\n        const intervalId = setInterval(()=>{\n            setDisplayedText(text.substring(0, index + 1));\n            index++;\n            if (index >= text.length) {\n                clearInterval(intervalId);\n                setIsComplete(true);\n                if (onComplete) onComplete();\n            }\n        }, 20); // Velocidad de tipeo más lenta (20ms por caracter)\n        return ()=>clearInterval(intervalId);\n    }, [\n        text,\n        onComplete\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"whitespace-pre-wrap\",\n        children: displayedText\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n        lineNumber: 486,\n        columnNumber: 10\n    }, undefined);\n};\n_s1(StreamingText, \"WN1VuAEIPMGz60gkJRv2eVErXF0=\");\n_c3 = StreamingText;\nfunction AIChat() {\n    _s2();\n    const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([\n        {\n            id: \"1\",\n            content: \"Hola, soy tu asistente de edici\\xf3n de video. \\xbfEn qu\\xe9 puedo ayudarte?\",\n            role: \"assistant\",\n            timestamp: new Date()\n        }\n    ]);\n    const [input, setInput] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [imageFile, setImageFile] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [imagePreview, setImagePreview] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isUploading, setIsUploading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [lastUploadedImageUrl, setLastUploadedImageUrl] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const fileInputRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const messagesEndRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Estado para realizar un seguimiento del progreso del auto-edit\n    const [autoEditStep, setAutoEditStep] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [isAutoEditing, setIsAutoEditing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const stateManager = (0,_features_editor_hooks_state_manager__WEBPACK_IMPORTED_MODULE_6__.useStateManager)();\n    const { timeline, scenes, playerRef } = (0,_features_editor_store_use_data_state__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n    const { duration } = (0,_features_editor_store_use_store__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(); // Obtener la duración del store\n    const commandExecutor = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)((0,_ai_video_commands__WEBPACK_IMPORTED_MODULE_7__.createVideoCommandExecutor)(stateManager));\n    // Añadir estado para el modo (chat o agente)\n    const [mode, setMode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"chat\");\n    // Inicializar el CommandExecutorService con el executor actual\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (commandExecutor.current) {\n            _features_editor_services_command_executor_service__WEBPACK_IMPORTED_MODULE_9__[\"default\"].setExecutor(commandExecutor.current);\n            console.log(\"CommandExecutorService inicializado con \\xe9xito\");\n        }\n    }, [\n        commandExecutor.current\n    ]);\n    // Función para realizar la edición automática en modo agente\n    const handleAutoEdit = async ()=>{\n        try {\n            setIsAutoEditing(true);\n            // Función para añadir un mensaje y esperar a que termine de mostrarse\n            const addMessageAndWait = (content)=>{\n                return new Promise((resolve)=>{\n                    const messageId = Date.now().toString();\n                    setMessages((prev)=>[\n                            ...prev,\n                            {\n                                id: messageId,\n                                content: content,\n                                role: \"assistant\",\n                                timestamp: new Date(),\n                                isStreaming: true,\n                                // Pasamos el callback onComplete a través de una propiedad adicional\n                                onStreamingComplete: ()=>resolve()\n                            }\n                        ]);\n                });\n            };\n            // Mensaje inicial explicando el plan\n            await addMessageAndWait(\"Voy a optimizar tu video con dos acciones:\\n\\n1. Recorte inteligente para eliminar partes menos relevantes\\n2. Subt\\xedtulos autom\\xe1ticos para mejorar la accesibilidad\");\n            // Paso 1: Recorte inteligente\n            setAutoEditStep(1);\n            // Mensaje de inicio del recorte inteligente\n            await addMessageAndWait(\"Analizando el contenido del video para identificar las partes m\\xe1s importantes y eliminar segmentos innecesarios...\");\n            // Ejecutar el recorte inteligente\n            const smartTrimResult = await commandExecutor.current.smartTrim();\n            // Informar al usuario sobre el resultado del recorte\n            if (smartTrimResult) {\n                await addMessageAndWait(\"Recorte inteligente completado. He optimizado el video eliminando las partes menos relevantes.\");\n            } else {\n                await addMessageAndWait(\"No pude completar el recorte inteligente. Continuando con el siguiente paso.\");\n            }\n            // Paso 2: Añadir subtítulos\n            setAutoEditStep(2);\n            // Mensaje de inicio de añadir subtítulos\n            await addMessageAndWait(\"Procesando el audio del video para crear subt\\xedtulos sincronizados...\");\n            // Configurar opciones para los subtítulos\n            const subtitleOptions = {\n                groupWords: true,\n                startTime: 0,\n                endTime: 1000000 // Hasta el final del video\n            };\n            // Añadir los subtítulos\n            await commandExecutor.current.addSubtitles(subtitleOptions);\n            // Mensaje final con resumen de acciones\n            await addMessageAndWait(\"Edici\\xf3n completada.\\n\\nHe optimizado tu video eliminando partes irrelevantes y a\\xf1adiendo subt\\xedtulos sincronizados.\\n\\n\\xbfDeseas realizar alguna otra mejora?\");\n        } catch (error) {\n            console.error(\"Error en la edici\\xf3n autom\\xe1tica:\", error);\n            setMessages((prev)=>[\n                    ...prev,\n                    {\n                        id: Date.now().toString(),\n                        content: \"Ha ocurrido un problema durante el proceso: \".concat(error.message || \"Error desconocido\", \"\\n\\n\\xbfQuieres intentar alguna otra acci\\xf3n?\"),\n                        role: \"assistant\",\n                        timestamp: new Date(),\n                        isStreaming: true\n                    }\n                ]);\n        } finally{\n            await new Promise((resolve)=>setTimeout(resolve, 500));\n            setIsAutoEditing(false);\n            setAutoEditStep(0);\n            setIsLoading(false);\n        }\n    };\n    // Función para reiniciar el chat\n    const resetChat = ()=>{\n        setMessages([\n            {\n                id: Date.now().toString(),\n                content: \"Hola, soy tu asistente de edici\\xf3n de video. \\xbfEn qu\\xe9 puedo ayudarte?\",\n                role: \"assistant\",\n                timestamp: new Date()\n            }\n        ]);\n        setInput(\"\");\n        setImageFile(null);\n        setImagePreview(null);\n        setLastUploadedImageUrl(\"\");\n    };\n    // Scroll al último mensaje\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        var _messagesEndRef_current;\n        (_messagesEndRef_current = messagesEndRef.current) === null || _messagesEndRef_current === void 0 ? void 0 : _messagesEndRef_current.scrollIntoView({\n            behavior: \"smooth\"\n        });\n    }, [\n        messages,\n        isLoading\n    ]);\n    // Actualizar el ejecutor de comandos cuando cambie el stateManager\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        commandExecutor.current = (0,_ai_video_commands__WEBPACK_IMPORTED_MODULE_7__.createVideoCommandExecutor)(stateManager);\n        // Actualizar el servicio con la nueva instancia del ejecutor\n        _features_editor_services_command_executor_service__WEBPACK_IMPORTED_MODULE_9__[\"default\"].setExecutor(commandExecutor.current);\n        console.log(\"CommandExecutorService actualizado con una nueva instancia del ejecutor\");\n    }, [\n        stateManager\n    ]);\n    // Manejar click en el botón de imagen\n    const handleImageClick = ()=>{\n        var _fileInputRef_current;\n        (_fileInputRef_current = fileInputRef.current) === null || _fileInputRef_current === void 0 ? void 0 : _fileInputRef_current.click();\n    };\n    // Manejar selección de archivo de imagen\n    const handleFileChange = (e)=>{\n        var _e_target_files;\n        const file = (_e_target_files = e.target.files) === null || _e_target_files === void 0 ? void 0 : _e_target_files[0];\n        if (file) {\n            setImageFile(file);\n            const previewUrl = URL.createObjectURL(file);\n            setImagePreview(previewUrl);\n        }\n    };\n    // Eliminar la imagen seleccionada\n    const handleRemoveImage = ()=>{\n        setImageFile(null);\n        setImagePreview(null);\n        if (fileInputRef.current) fileInputRef.current.value = \"\";\n    };\n    // Subir imagen al servidor\n    const uploadImage = async (file)=>{\n        try {\n            setIsUploading(true);\n            // Obtener URL firmada para subir la imagen\n            const uploadDetails = await (0,_utils_upload__WEBPACK_IMPORTED_MODULE_8__.createUploadsDetails)(file.name, file);\n            // Si no es un mock local, proceder con la carga\n            if (uploadDetails.uploadUrl !== \"local-mock\") {\n                // Subir la imagen\n                await fetch(uploadDetails.uploadUrl, {\n                    method: \"PUT\",\n                    body: file,\n                    headers: {\n                        \"Content-Type\": file.type\n                    }\n                });\n            }\n            // No se necesita hacer fetch si es un mock local (dataURL)\n            // Retornar la URL pública de la imagen\n            return uploadDetails.url;\n        } catch (error) {\n            console.error(\"Error al subir la imagen:\", error);\n            throw new Error(\"No se pudo subir la imagen. Int\\xe9ntalo de nuevo.\");\n        } finally{\n            setIsUploading(false);\n        }\n    };\n    // Función para enviar mensaje\n    const handleSendMessage = async ()=>{\n        if (!input.trim() && !imageFile || isLoading) return;\n        let userMessage = {\n            id: Date.now().toString(),\n            content: input,\n            role: \"user\",\n            timestamp: new Date()\n        };\n        let uploadedImageUrl = \"\";\n        // Variable para rastrear la URL de la imagen actual para esta solicitud específica\n        let currentImageUrlForThisRequest = \"\";\n        // Si hay una imagen para subir, procesarla\n        if (imageFile) {\n            try {\n                uploadedImageUrl = await uploadImage(imageFile);\n                userMessage.imageUrl = uploadedImageUrl;\n                // Guardar la URL de la imagen para posibles referencias futuras\n                setLastUploadedImageUrl(uploadedImageUrl);\n                // Importante: Guardar la URL actual para esta solicitud específica\n                currentImageUrlForThisRequest = uploadedImageUrl;\n                console.log(\"Imagen subida exitosamente:\", uploadedImageUrl.substring(0, 100) + \"...\");\n            } catch (error) {\n                console.error(\"Error en la subida de imagen:\", error);\n                setMessages((prev)=>[\n                        ...prev,\n                        {\n                            id: (Date.now() + 1).toString(),\n                            content: \"Error al subir la imagen. Por favor, int\\xe9ntalo de nuevo. Detalles: \" + (error instanceof Error ? error.message : \"Error desconocido\"),\n                            role: \"assistant\",\n                            timestamp: new Date()\n                        }\n                    ]);\n                setIsLoading(false);\n                return;\n            }\n        }\n        // Añadir mensaje del usuario\n        setMessages((prev)=>[\n                ...prev,\n                userMessage\n            ]);\n        setInput(\"\");\n        setImageFile(null);\n        setImagePreview(null);\n        if (fileInputRef.current) fileInputRef.current.value = \"\";\n        setIsLoading(true);\n        // Comprobar si estamos en modo agente y es una solicitud de edición automática\n        if (shouldUseAgent(mode, userMessage.content)) {\n            // Ejecutar edición automática\n            await handleAutoEdit();\n            return;\n        }\n        try {\n            var _playerRef_current, _timeline_canvas_getObjects, _timeline_canvas, _timeline_canvas_getObjects1, _timeline_canvas1;\n            // Enviar a la API para procesamiento en lenguaje natural\n            const apiMessages = messages.concat(userMessage).map((msg)=>{\n                // Si el mensaje tiene una imagen, crear un formato especial para el contenido\n                if (msg.imageUrl) {\n                    // Si es una URL de datos (comienza con data:), usar un marcador especial\n                    const isDataUrl = msg.imageUrl.startsWith(\"data:\");\n                    const imageUrlToSend = isDataUrl ? \"[IMAGEN_ADJUNTA]\" : \"[IMAGEN: \".concat(msg.imageUrl, \"]\");\n                    return {\n                        role: msg.role,\n                        content: \"\".concat(msg.content || \"\", \" \").concat(imageUrlToSend)\n                    };\n                }\n                return {\n                    role: msg.role,\n                    content: msg.content\n                };\n            });\n            // Añadir contexto del editor para la IA externa\n            const contextMessage = {\n                role: \"system\",\n                content: \"\\nContexto actual del editor de video:\\n- Posici\\xf3n actual (segundos): \".concat((playerRef === null || playerRef === void 0 ? void 0 : (_playerRef_current = playerRef.current) === null || _playerRef_current === void 0 ? void 0 : _playerRef_current.getCurrentTime) ? Math.floor((playerRef.current.getCurrentTime() || 0) * 100) / 100 : 0, \"\\n- Duraci\\xf3n del proyecto (segundos): \").concat((timeline === null || timeline === void 0 ? void 0 : timeline.duration) ? Math.floor(timeline.duration / 1000) : 0, \"\\n- N\\xfamero de escenas: \").concat((scenes === null || scenes === void 0 ? void 0 : scenes.length) || 0, \"\\n- N\\xfamero de elementos en el timeline: \").concat(((timeline === null || timeline === void 0 ? void 0 : (_timeline_canvas = timeline.canvas) === null || _timeline_canvas === void 0 ? void 0 : (_timeline_canvas_getObjects = _timeline_canvas.getObjects) === null || _timeline_canvas_getObjects === void 0 ? void 0 : _timeline_canvas_getObjects.call(_timeline_canvas)) || []).length - 1 > 0 ? ((timeline === null || timeline === void 0 ? void 0 : (_timeline_canvas1 = timeline.canvas) === null || _timeline_canvas1 === void 0 ? void 0 : (_timeline_canvas_getObjects1 = _timeline_canvas1.getObjects) === null || _timeline_canvas_getObjects1 === void 0 ? void 0 : _timeline_canvas_getObjects1.call(_timeline_canvas1)) || []).length - 1 : 0, \"\\n\").concat(lastUploadedImageUrl ? \"- \\xdaltima imagen compartida por el usuario disponible para usar\" : \"\", '\\n\\nEl usuario puede expresar en lenguaje natural la necesidad de agregar elementos al video.\\nEjemplos:\\n- \"Pon un t\\xedtulo que diga \\'Bienvenidos\\' al inicio\"\\n- \"Quiero un texto blanco que diga \\'Fin\\' al final del video\"\\n- \"Necesito una imagen en el segundo 10\"\\n- \"Coloca un video de introducci\\xf3n al principio\"\\n\\nSi el usuario adjunta una imagen en el mensaje, la URL estar\\xe1 en formato [IMAGEN: url_de_la_imagen].\\nDebes detectar si quiere agregar esta imagen al video y en qu\\xe9 momento temporal.\\n')\n            };\n            try {\n                var _data_message, _elementData_element;\n                // Usar la API correcta según el modo\n                const apiEndpoint = mode === \"agent\" ? \"/api/ai-chat-agent\" : \"/api/ai-chat\";\n                const response = await fetch(apiEndpoint, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        messages: [\n                            contextMessage,\n                            ...apiMessages\n                        ],\n                        // Usar la URL de la imagen actual para esta solicitud si existe,\n                        // de lo contrario usar la última URL guardada\n                        lastImageUrl: currentImageUrlForThisRequest || lastUploadedImageUrl || \"\"\n                    }),\n                    // Agregar timeout para evitar esperas infinitas\n                    signal: AbortSignal.timeout(15000) // 15 segundos máximo\n                });\n                if (!response.ok) {\n                    throw new Error(\"Error de API: \".concat(response.status, \" \").concat(response.statusText));\n                }\n                const data = await response.json();\n                // Asegurarse de que data.message.content existe\n                const aiResponse = (data === null || data === void 0 ? void 0 : (_data_message = data.message) === null || _data_message === void 0 ? void 0 : _data_message.content) || \"Lo siento, no pude entender tu solicitud.\";\n                // Obtener los datos del elemento si existen (con verificación segura)\n                const elementData = data === null || data === void 0 ? void 0 : data.elementData;\n                // Variable para la respuesta final\n                let finalResponse = aiResponse;\n                // Crear una referencia a la respuesta final para que sea accesible en la función procesadora\n                const finalResponseRef = {\n                    current: finalResponse\n                };\n                let elementAdded = false;\n                // Usar la función de procesamiento de elementos\n                const processResult = await processDetectedElement(elementData, commandExecutor, finalResponseRef, timeline, lastUploadedImageUrl, currentImageUrlForThisRequest);\n                finalResponse = processResult.finalResponse;\n                elementAdded = processResult.elementAdded;\n                // Crear mensaje con los detalles completos\n                const newMessage = {\n                    id: Date.now().toString(),\n                    content: finalResponse || data.message.content,\n                    role: \"assistant\",\n                    timestamp: new Date()\n                };\n                // Si se detectó un elemento de música, agregar las opciones al mensaje\n                if ((elementData === null || elementData === void 0 ? void 0 : elementData.detected) && ((_elementData_element = elementData.element) === null || _elementData_element === void 0 ? void 0 : _elementData_element.type) === \"music\" && Array.isArray(elementData.element.options)) {\n                    newMessage.musicOptions = elementData.element.options;\n                    console.log(\"Opciones de m\\xfasica agregadas al mensaje:\", newMessage.musicOptions);\n                }\n                // Actualizar mensajes\n                setMessages((prev)=>[\n                        ...prev,\n                        newMessage\n                    ]);\n            } catch (apiError) {\n                console.error(\"Error en la comunicaci\\xf3n con la API:\", apiError);\n                // Mensaje de error específico de API\n                setMessages((prev)=>[\n                        ...prev,\n                        {\n                            id: (Date.now() + 1).toString(),\n                            content: \"Lo siento, ha ocurrido un error al comunicarse con el servicio de IA. Por favor, intenta de nuevo en unos momentos.\",\n                            role: \"assistant\",\n                            timestamp: new Date()\n                        }\n                    ]);\n            }\n        } catch (error) {\n            console.error(\"Error al procesar el mensaje:\", error);\n            // Determinar mensaje de error apropiado\n            let errorMessage = \"Lo siento, ha ocurrido un error al procesar tu mensaje.\";\n            if (error instanceof Error) {\n                if (error.message.includes(\"timeout\") || error.message.includes(\"abort\")) {\n                    errorMessage = \"La solicitud ha tardado demasiado. Prueba con un mensaje m\\xe1s corto.\";\n                } else if (error.message.includes(\"network\") || error.message.includes(\"fetch\")) {\n                    errorMessage = \"Parece que hay un problema de conexi\\xf3n. Verifica tu conexi\\xf3n a internet e intenta de nuevo.\";\n                }\n            }\n            // Mensaje de error\n            setMessages((prev)=>[\n                    ...prev,\n                    {\n                        id: (Date.now() + 1).toString(),\n                        content: errorMessage,\n                        role: \"assistant\",\n                        timestamp: new Date()\n                    }\n                ]);\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    // Función para manejar la selección de música\n    const handleMusicSelect = async (musicPath)=>{\n        try {\n            console.log(\"Usuario seleccion\\xf3 m\\xfasica: \".concat(musicPath));\n            // Calcular la duración del video en segundos usando el duration del store\n            const videoDuration = duration ? Math.floor(duration / 1000) : 300; // 5 minutos por defecto\n            console.log(\"Duraci\\xf3n del video (desde useStore): \".concat(videoDuration, \" segundos\"));\n            // Configuración de opciones para la música\n            const musicOptions = {\n                startTime: 0,\n                endTime: videoDuration,\n                volume: 80,\n                fadeIn: true,\n                fadeOut: true,\n                respectNativeDuration: true // Respetar la duración natural de la música\n            };\n            // Añadir la música al timeline (respetará la duración natural si es más corta que el video)\n            commandExecutor.current.addMusic(musicPath, musicOptions);\n            // Obtener un nombre amigable para la música\n            const getMusicFriendlyName = (path)=>{\n                const filename = path.split(\"/\").pop() || path;\n                if (filename === \"song1.mp3\") return \"M\\xfasica Energ\\xe9tica\";\n                if (filename === \"song2.mp3\") return \"Melod\\xeda Relajante\";\n                return filename;\n            };\n            // Añadir un mensaje de confirmación\n            const musicName = getMusicFriendlyName(musicPath);\n            const confirmationMsg = {\n                id: Date.now().toString(),\n                content: 'He a\\xf1adido \"'.concat(musicName, '\" a tu video. La m\\xfasica se adaptar\\xe1 autom\\xe1ticamente: si es m\\xe1s corta que el video, mantendr\\xe1 su duraci\\xf3n natural; si es m\\xe1s larga, se ajustar\\xe1 a la duraci\\xf3n del video (').concat(videoDuration, \" segundos).\"),\n                role: \"assistant\",\n                timestamp: new Date()\n            };\n            setMessages((prev)=>[\n                    ...prev,\n                    confirmationMsg\n                ]);\n        } catch (error) {\n            console.error(\"Error al a\\xf1adir m\\xfasica:\", error);\n            // Mensaje de error\n            const errorMsg = {\n                id: Date.now().toString(),\n                content: \"No se pudo a\\xf1adir la m\\xfasica. Error: \".concat(error.message || \"Error desconocido\"),\n                role: \"assistant\",\n                timestamp: new Date()\n            };\n            setMessages((prev)=>[\n                    ...prev,\n                    errorMsg\n                ]);\n        }\n    };\n    // Manejar cambio de modo\n    const handleModeChange = (newMode)=>{\n        // Si el modo es diferente, cambiar y reiniciar la conversación\n        if (newMode !== mode) {\n            setMode(newMode);\n            // Mensaje inicial específico según el modo\n            const initialMessage = newMode === \"chat\" ? \"Hola, soy tu asistente de edici\\xf3n de video. \\xbfEn qu\\xe9 puedo ayudarte?\" : 'Escribe \"edita el video\" y optimizar\\xe9 tu video con recorte inteligente y subt\\xedtulos.';\n            // Reiniciar la conversación con el mensaje apropiado\n            setMessages([\n                {\n                    id: Date.now().toString(),\n                    content: initialMessage,\n                    role: \"assistant\",\n                    timestamp: new Date(),\n                    // Marcar el mensaje como inicial para evitar mostrar razonamiento\n                    isInitial: true,\n                    // Ya no aplicamos streaming al mensaje inicial\n                    isStreaming: false\n                }\n            ]);\n            // Limpiar otros estados\n            setInput(\"\");\n            setImageFile(null);\n            setImagePreview(null);\n            setLastUploadedImageUrl(\"\");\n            setAutoEditStep(0);\n            setIsAutoEditing(false);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex h-full flex-col bg-[rgb(20,10,30)] border-l border-purple-800/30\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"bg-[rgb(30,15,45)] p-3 flex justify-between items-center border-b border-purple-800/30\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center gap-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"h-7 w-7 rounded flex items-center justify-center bg-purple-700\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_ImageIcon_Loader2_RefreshCw_Send_Sparkles_X_lucide_react__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n                                    className: \"h-3.5 w-3.5 text-white\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                    lineNumber: 998,\n                                    columnNumber: 13\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                lineNumber: 997,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                className: \"font-medium text-white text-sm\",\n                                children: \"Asistente IA\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                lineNumber: 1000,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                        lineNumber: 996,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center bg-[rgb(40,20,60)] rounded-full p-0.5 mx-auto\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>handleModeChange(\"chat\"),\n                                className: \"px-3 py-1 text-xs rounded-full transition-all \".concat(mode === \"chat\" ? \"bg-purple-700 text-white font-medium\" : \"text-purple-300 hover:text-white\"),\n                                children: \"Chat\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                lineNumber: 1005,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>handleModeChange(\"agent\"),\n                                className: \"px-3 py-1 text-xs rounded-full transition-all \".concat(mode === \"agent\" ? \"bg-purple-700 text-white font-medium\" : \"text-purple-300 hover:text-white\"),\n                                children: \"Agente\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                lineNumber: 1015,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                        lineNumber: 1004,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center gap-1\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                            variant: \"ghost\",\n                            size: \"icon\",\n                            className: \"h-7 w-7 rounded hover:bg-purple-800/20\",\n                            onClick: resetChat,\n                            title: \"Reiniciar conversaci\\xf3n\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_ImageIcon_Loader2_RefreshCw_Send_Sparkles_X_lucide_react__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n                                className: \"h-3.5 w-3.5 text-zinc-300\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                lineNumber: 1035,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                            lineNumber: 1028,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                        lineNumber: 1027,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                lineNumber: 995,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-1 overflow-hidden relative max-h-[calc(100%-120px)]\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_scroll_area__WEBPACK_IMPORTED_MODULE_4__.ScrollArea, {\n                    className: \"h-full pr-2 chat-scrollbar absolute inset-0\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"p-3 space-y-3\",\n                        children: [\n                            messages.map((message)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex flex-col animate-fadeIn \".concat(message.role === \"assistant\" ? \"items-start\" : \"items-end\"),\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"max-w-[85%] rounded-md px-4 py-2 \".concat(message.role === \"assistant\" ? \"bg-[rgb(40,20,60)] text-zinc-200\" : \"bg-purple-700 text-white\"),\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"whitespace-pre-wrap text-sm markdown-content\",\n                                                    children: message.isStreaming ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(StreamingText, {\n                                                        text: message.content,\n                                                        onComplete: message.onStreamingComplete\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                                        lineNumber: 1060,\n                                                        columnNumber: 23\n                                                    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_markdown__WEBPACK_IMPORTED_MODULE_13__.Markdown, {\n                                                        children: message.content\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                                        lineNumber: 1065,\n                                                        columnNumber: 23\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                                    lineNumber: 1058,\n                                                    columnNumber: 19\n                                                }, this),\n                                                message.imageUrl && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"mt-2 rounded overflow-hidden\",\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                                        src: message.imageUrl,\n                                                        alt: \"Imagen adjunta\",\n                                                        className: \"max-h-48 max-w-full object-contain\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                                        lineNumber: 1072,\n                                                        columnNumber: 23\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                                    lineNumber: 1071,\n                                                    columnNumber: 21\n                                                }, this),\n                                                message.musicOptions && message.musicOptions.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MusicOptions, {\n                                                    options: message.musicOptions,\n                                                    onSelectMusic: handleMusicSelect\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                                    lineNumber: 1080,\n                                                    columnNumber: 21\n                                                }, this),\n                                                mode === \"agent\" && message.role === \"assistant\" && !message.isInitial && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ReasoningSection, {\n                                                    reasoning: generateReasoning(message.content)\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                                    lineNumber: 1088,\n                                                    columnNumber: 21\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                            lineNumber: 1051,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"text-[10px] mt-0.5 px-1 \".concat(message.role === \"assistant\" ? \"text-zinc-500\" : \"text-purple-300\"),\n                                            children: message.timestamp.toLocaleTimeString([], {\n                                                hour: \"2-digit\",\n                                                minute: \"2-digit\"\n                                            })\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                            lineNumber: 1091,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, message.id, true, {\n                                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                    lineNumber: 1045,\n                                    columnNumber: 15\n                                }, this)),\n                            isLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ThinkingAnimation, {}, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                lineNumber: 1096,\n                                columnNumber: 27\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                ref: messagesEndRef,\n                                className: \"h-2\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                lineNumber: 1097,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                        lineNumber: 1043,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                    lineNumber: 1042,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                lineNumber: 1041,\n                columnNumber: 7\n            }, this),\n            imagePreview && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"relative mx-3 mt-1 mb-2 h-24 bg-[rgb(30,15,45)] p-2 flex items-center justify-center rounded border border-purple-800/30\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                        variant: \"ghost\",\n                        size: \"icon\",\n                        className: \"absolute right-1 top-1 z-10 h-5 w-5 rounded-full bg-black/50\",\n                        onClick: handleRemoveImage,\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_ImageIcon_Loader2_RefreshCw_Send_Sparkles_X_lucide_react__WEBPACK_IMPORTED_MODULE_14__[\"default\"], {\n                            className: \"h-3 w-3 text-white\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                            lineNumber: 1111,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                        lineNumber: 1105,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                        src: imagePreview,\n                        alt: \"Vista previa\",\n                        className: \"max-h-full max-w-full object-contain\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                        lineNumber: 1113,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                lineNumber: 1104,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"bg-[rgb(30,15,45)] p-3 border-t border-purple-800/30\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex items-center gap-2\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex rounded overflow-hidden border border-purple-900/50 flex-1 bg-[rgb(25,12,40)]\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                                variant: \"ghost\",\n                                size: \"icon\",\n                                className: \"h-9 w-9 bg-transparent hover:bg-purple-800/20\",\n                                onClick: handleImageClick,\n                                disabled: isLoading || isAutoEditing,\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_ImageIcon_Loader2_RefreshCw_Send_Sparkles_X_lucide_react__WEBPACK_IMPORTED_MODULE_15__[\"default\"], {\n                                    className: \"h-4 w-4 text-zinc-400\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                    lineNumber: 1132,\n                                    columnNumber: 15\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                lineNumber: 1125,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_input__WEBPACK_IMPORTED_MODULE_3__.Input, {\n                                value: input,\n                                onChange: (e)=>setInput(e.target.value),\n                                onKeyDown: (e)=>{\n                                    if (e.key === \"Enter\" && !e.shiftKey) {\n                                        e.preventDefault();\n                                        handleSendMessage();\n                                    }\n                                },\n                                placeholder: mode === \"agent\" ? \"Escribe 'edita el video' para comenzar...\" : \"Escribe tu mensaje...\",\n                                disabled: isLoading || isAutoEditing,\n                                className: \"flex-1 border-0 bg-transparent h-9 focus:ring-0 focus-visible:ring-0 text-zinc-200\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                lineNumber: 1135,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                                onClick: handleSendMessage,\n                                disabled: !input.trim() && !imageFile || isLoading || isAutoEditing,\n                                className: \"h-9 px-3 rounded-none \".concat(!input.trim() && !imageFile || isLoading || isAutoEditing ? \"bg-purple-900/50 cursor-not-allowed text-purple-300/50\" : \"bg-purple-700 hover:bg-purple-600 text-white\"),\n                                children: isLoading || isUploading || isAutoEditing ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_ImageIcon_Loader2_RefreshCw_Send_Sparkles_X_lucide_react__WEBPACK_IMPORTED_MODULE_16__[\"default\"], {\n                                    className: \"h-4 w-4 animate-spin\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                    lineNumber: 1159,\n                                    columnNumber: 17\n                                }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_ImageIcon_Loader2_RefreshCw_Send_Sparkles_X_lucide_react__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {\n                                    className: \"h-3.5 w-3.5\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                    lineNumber: 1161,\n                                    columnNumber: 17\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                                lineNumber: 1149,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                        lineNumber: 1124,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                    lineNumber: 1123,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                lineNumber: 1122,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                type: \"file\",\n                ref: fileInputRef,\n                onChange: handleFileChange,\n                accept: \"image/*\",\n                className: \"hidden\",\n                disabled: isLoading || isAutoEditing\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n                lineNumber: 1168,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\david\\\\Desktop\\\\ai-video-agent\\\\react-video-editor\\\\components\\\\ai-chat\\\\index.tsx\",\n        lineNumber: 993,\n        columnNumber: 5\n    }, this);\n}\n_s2(AIChat, \"zSf9oIbobI4Gwu5cNUFZZbnjaxk=\", false, function() {\n    return [\n        _features_editor_hooks_state_manager__WEBPACK_IMPORTED_MODULE_6__.useStateManager,\n        _features_editor_store_use_data_state__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n        _features_editor_store_use_store__WEBPACK_IMPORTED_MODULE_10__[\"default\"]\n    ];\n});\n_c4 = AIChat;\n// Función para generar razonamiento basado en el contenido del mensaje\nfunction generateReasoning(content) {\n    // Detectar si es un mensaje relacionado con el modo de edición automática\n    if (content.includes(\"Subt\\xedtulos\") || content.includes(\"Recorte inteligente\") || content.includes(\"optimizar\") || content.includes(\"edici\\xf3n\")) {\n        // Determinar el tipo de mensaje y su contexto\n        let etapa = \"Planificaci\\xf3n inicial\";\n        let prioridad = \"Alta\";\n        let nextStep = \"Analizar contenido del video\";\n        if (content.includes(\"Analizando\") || content.includes(\"analiz\")) {\n            etapa = \"An\\xe1lisis de contenido\";\n            prioridad = \"Alta\";\n            nextStep = \"Identificar segmentos relevantes\";\n        } else if (content.includes(\"Recorte inteligente completado\") || content.includes(\"optimizado\")) {\n            etapa = \"Optimizaci\\xf3n de duraci\\xf3n\";\n            prioridad = \"Media\";\n            nextStep = \"Procesar audio para subt\\xedtulos\";\n        } else if (content.includes(\"Procesando el audio\") || content.includes(\"subt\\xedtulos\")) {\n            etapa = \"Generaci\\xf3n de subt\\xedtulos\";\n            prioridad = \"Alta\";\n            nextStep = \"Sincronizar texto con audio\";\n        } else if (content.includes(\"Edici\\xf3n completada\") || content.includes(\"completada\")) {\n            etapa = \"Finalizaci\\xf3n del proceso\";\n            prioridad = \"Baja\";\n            nextStep = \"Esperar feedback del usuario\";\n        }\n        return \"AN\\xc1LISIS DE PLAN [\".concat(etapa, \"]\\n--------------------------------------------------\\nIntenci\\xf3n detectada: Optimizaci\\xf3n autom\\xe1tica de video\\nObjetivo principal: Mejorar calidad y accesibilidad\\nPrioridad: \").concat(prioridad, \"\\n--------------------------------------------------\\n\\nAN\\xc1LISIS DE SOLICITUD:\\n• El usuario desea una edici\\xf3n eficiente sin intervenci\\xf3n manual\\n• Se requiere balance entre duraci\\xf3n \\xf3ptima y preservaci\\xf3n de contenido clave\\n• La accesibilidad mediante subt\\xedtulos es importante\\n\\nPLAN DE ACCI\\xd3N:\\n1. Evaluar el contenido completo del video\\n2. Identificar y preservar momentos de alto valor informativo\\n3. Eliminar secciones redundantes o de bajo inter\\xe9s\\n4. Generar y sincronizar subt\\xedtulos precisos\\n\\nRAZONAMIENTO:\\nHe determinado que esta combinaci\\xf3n de acciones maximiza\\nel impacto del video mientras minimiza la duraci\\xf3n total.\\nEl orden de las operaciones es cr\\xedtico: primero optimizar\\nestructura y luego a\\xf1adir elementos de accesibilidad.\\n\\nSIGUIENTE PASO:\\n→ \").concat(nextStep);\n    }\n    // Para otros mensajes, mantener un razonamiento enfocado en la asistencia\n    return \"AN\\xc1LISIS DE INTERACCI\\xd3N\\n--------------------------------------------------\\nTipo: Consulta general\\nContexto: Asistencia en edici\\xf3n de video\\nPrioridad: Media\\n--------------------------------------------------\\n\\nAN\\xc1LISIS DE SOLICITUD:\\n• El usuario busca informaci\\xf3n o asistencia espec\\xedfica\\n• Se requiere respuesta clara y orientada a soluciones\\n• Posible necesidad de sugerencias basadas en contexto\\n\\nPLAN DE ACCI\\xd3N:\\n1. Proporcionar informaci\\xf3n relevante y concisa\\n2. Ofrecer opciones de acci\\xf3n cuando sea apropiado\\n3. Mantener un tono \\xfatil y accesible\\n4. Anticipar posibles preguntas de seguimiento\\n\\nRAZONAMIENTO:\\nHe detectado que este tipo de interacci\\xf3n requiere un\\nbalance entre informaci\\xf3n t\\xe9cnica y accesibilidad.\\nLa respuesta debe ser informativa pero sin abrumar\\ncon detalles innecesarios.\\n\\nSIGUIENTE PASO:\\n→ Esperar indicaci\\xf3n espec\\xedfica del usuario\";\n}\nvar _c, _c1, _c2, _c3, _c4;\n$RefreshReg$(_c, \"MusicOptions\");\n$RefreshReg$(_c1, \"ThinkingAnimation\");\n$RefreshReg$(_c2, \"ReasoningSection\");\n$RefreshReg$(_c3, \"StreamingText\");\n$RefreshReg$(_c4, \"AIChat\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/ai-chat/index.tsx\n"));

/***/ })

});