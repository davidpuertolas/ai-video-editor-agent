"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@remotion";
exports.ids = ["vendor-chunks/@remotion"];
exports.modules = {

/***/ "(ssr)/./node_modules/@remotion/media-utils/dist/audio-buffer/audio-buffer-to-wav.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@remotion/media-utils/dist/audio-buffer/audio-buffer-to-wav.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/**\n * Inlined from https://github.com/Jam3/audiobuffer-to-wav/commit/2272eb09bd46a05e50a6d684d908aa6f13c58f63#diff-e727e4bdf3657fd1d798edcd6b099d6e092f8573cba266154583a746bba0f346\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.audioBufferToWav = audioBufferToWav;\nfunction interleave(inputL, inputR) {\n    const length = inputL.length + inputR.length;\n    const result = new Float32Array(length);\n    let index = 0;\n    let inputIndex = 0;\n    while (index < length) {\n        result[index++] = inputL[inputIndex];\n        result[index++] = inputR[inputIndex];\n        inputIndex++;\n    }\n    return result;\n}\nfunction writeFloat32(output, offset, input) {\n    for (let i = 0; i < input.length; i++, offset += 4) {\n        output.setFloat32(offset, input[i], true);\n    }\n}\nfunction floatTo16BitPCM(output, offset, input) {\n    for (let i = 0; i < input.length; i++, offset += 2) {\n        const s = Math.max(-1, Math.min(1, input[i]));\n        output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7fff, true);\n    }\n}\nfunction writeString(view, offset, string) {\n    for (let i = 0; i < string.length; i++) {\n        view.setUint8(offset + i, string.charCodeAt(i));\n    }\n}\nfunction encodeWAV({ samples, format, sampleRate, numChannels, bitDepth, }) {\n    const bytesPerSample = bitDepth / 8;\n    const blockAlign = numChannels * bytesPerSample;\n    const buffer = new ArrayBuffer(44 + samples.length * bytesPerSample);\n    const view = new DataView(buffer);\n    /* RIFF identifier */\n    writeString(view, 0, 'RIFF');\n    /* RIFF chunk length */\n    view.setUint32(4, 36 + samples.length * bytesPerSample, true);\n    /* RIFF type */\n    writeString(view, 8, 'WAVE');\n    /* format chunk identifier */\n    writeString(view, 12, 'fmt ');\n    /* format chunk length */\n    view.setUint32(16, 16, true);\n    /* sample format (raw) */\n    view.setUint16(20, format, true);\n    /* channel count */\n    view.setUint16(22, numChannels, true);\n    /* sample rate */\n    view.setUint32(24, sampleRate, true);\n    /* byte rate (sample rate * block align) */\n    view.setUint32(28, sampleRate * blockAlign, true);\n    /* block align (channel count * bytes per sample) */\n    view.setUint16(32, blockAlign, true);\n    /* bits per sample */\n    view.setUint16(34, bitDepth, true);\n    /* data chunk identifier */\n    writeString(view, 36, 'data');\n    /* data chunk length */\n    view.setUint32(40, samples.length * bytesPerSample, true);\n    if (format === 1) {\n        // Raw PCM\n        floatTo16BitPCM(view, 44, samples);\n    }\n    else {\n        writeFloat32(view, 44, samples);\n    }\n    return buffer;\n}\nfunction audioBufferToWav(buffer, opt) {\n    const numChannels = buffer.numberOfChannels;\n    const { sampleRate } = buffer;\n    const format = opt.float32 ? 3 : 1;\n    const bitDepth = format === 3 ? 32 : 16;\n    let result;\n    if (numChannels === 2) {\n        result = interleave(buffer.getChannelData(0), buffer.getChannelData(1));\n    }\n    else {\n        result = buffer.getChannelData(0);\n    }\n    return encodeWAV({\n        samples: result,\n        format,\n        sampleRate,\n        numChannels,\n        bitDepth,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvYXVkaW8tYnVmZmVyL2F1ZGlvLWJ1ZmZlci10by13YXYuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGtCQUFrQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixrQkFBa0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixtQkFBbUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHFEQUFxRDtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxhQUFhO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL3JlbW90aW9uLWNhcHRpb25zLy4vbm9kZV9tb2R1bGVzL0ByZW1vdGlvbi9tZWRpYS11dGlscy9kaXN0L2F1ZGlvLWJ1ZmZlci9hdWRpby1idWZmZXItdG8td2F2LmpzPzg2MjMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIElubGluZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vSmFtMy9hdWRpb2J1ZmZlci10by13YXYvY29tbWl0LzIyNzJlYjA5YmQ0NmEwNWU1MGE2ZDY4NGQ5MDhhYTZmMTNjNThmNjMjZGlmZi1lNzI3ZTRiZGYzNjU3ZmQxZDc5OGVkY2Q2YjA5OWQ2ZTA5MmY4NTczY2JhMjY2MTU0NTgzYTc0NmJiYTBmMzQ2XG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYXVkaW9CdWZmZXJUb1dhdiA9IGF1ZGlvQnVmZmVyVG9XYXY7XG5mdW5jdGlvbiBpbnRlcmxlYXZlKGlucHV0TCwgaW5wdXRSKSB7XG4gICAgY29uc3QgbGVuZ3RoID0gaW5wdXRMLmxlbmd0aCArIGlucHV0Ui5sZW5ndGg7XG4gICAgY29uc3QgcmVzdWx0ID0gbmV3IEZsb2F0MzJBcnJheShsZW5ndGgpO1xuICAgIGxldCBpbmRleCA9IDA7XG4gICAgbGV0IGlucHV0SW5kZXggPSAwO1xuICAgIHdoaWxlIChpbmRleCA8IGxlbmd0aCkge1xuICAgICAgICByZXN1bHRbaW5kZXgrK10gPSBpbnB1dExbaW5wdXRJbmRleF07XG4gICAgICAgIHJlc3VsdFtpbmRleCsrXSA9IGlucHV0UltpbnB1dEluZGV4XTtcbiAgICAgICAgaW5wdXRJbmRleCsrO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gd3JpdGVGbG9hdDMyKG91dHB1dCwgb2Zmc2V0LCBpbnB1dCkge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaW5wdXQubGVuZ3RoOyBpKyssIG9mZnNldCArPSA0KSB7XG4gICAgICAgIG91dHB1dC5zZXRGbG9hdDMyKG9mZnNldCwgaW5wdXRbaV0sIHRydWUpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGZsb2F0VG8xNkJpdFBDTShvdXRwdXQsIG9mZnNldCwgaW5wdXQpIHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGlucHV0Lmxlbmd0aDsgaSsrLCBvZmZzZXQgKz0gMikge1xuICAgICAgICBjb25zdCBzID0gTWF0aC5tYXgoLTEsIE1hdGgubWluKDEsIGlucHV0W2ldKSk7XG4gICAgICAgIG91dHB1dC5zZXRJbnQxNihvZmZzZXQsIHMgPCAwID8gcyAqIDB4ODAwMCA6IHMgKiAweDdmZmYsIHRydWUpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHdyaXRlU3RyaW5nKHZpZXcsIG9mZnNldCwgc3RyaW5nKSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdHJpbmcubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmlldy5zZXRVaW50OChvZmZzZXQgKyBpLCBzdHJpbmcuY2hhckNvZGVBdChpKSk7XG4gICAgfVxufVxuZnVuY3Rpb24gZW5jb2RlV0FWKHsgc2FtcGxlcywgZm9ybWF0LCBzYW1wbGVSYXRlLCBudW1DaGFubmVscywgYml0RGVwdGgsIH0pIHtcbiAgICBjb25zdCBieXRlc1BlclNhbXBsZSA9IGJpdERlcHRoIC8gODtcbiAgICBjb25zdCBibG9ja0FsaWduID0gbnVtQ2hhbm5lbHMgKiBieXRlc1BlclNhbXBsZTtcbiAgICBjb25zdCBidWZmZXIgPSBuZXcgQXJyYXlCdWZmZXIoNDQgKyBzYW1wbGVzLmxlbmd0aCAqIGJ5dGVzUGVyU2FtcGxlKTtcbiAgICBjb25zdCB2aWV3ID0gbmV3IERhdGFWaWV3KGJ1ZmZlcik7XG4gICAgLyogUklGRiBpZGVudGlmaWVyICovXG4gICAgd3JpdGVTdHJpbmcodmlldywgMCwgJ1JJRkYnKTtcbiAgICAvKiBSSUZGIGNodW5rIGxlbmd0aCAqL1xuICAgIHZpZXcuc2V0VWludDMyKDQsIDM2ICsgc2FtcGxlcy5sZW5ndGggKiBieXRlc1BlclNhbXBsZSwgdHJ1ZSk7XG4gICAgLyogUklGRiB0eXBlICovXG4gICAgd3JpdGVTdHJpbmcodmlldywgOCwgJ1dBVkUnKTtcbiAgICAvKiBmb3JtYXQgY2h1bmsgaWRlbnRpZmllciAqL1xuICAgIHdyaXRlU3RyaW5nKHZpZXcsIDEyLCAnZm10ICcpO1xuICAgIC8qIGZvcm1hdCBjaHVuayBsZW5ndGggKi9cbiAgICB2aWV3LnNldFVpbnQzMigxNiwgMTYsIHRydWUpO1xuICAgIC8qIHNhbXBsZSBmb3JtYXQgKHJhdykgKi9cbiAgICB2aWV3LnNldFVpbnQxNigyMCwgZm9ybWF0LCB0cnVlKTtcbiAgICAvKiBjaGFubmVsIGNvdW50ICovXG4gICAgdmlldy5zZXRVaW50MTYoMjIsIG51bUNoYW5uZWxzLCB0cnVlKTtcbiAgICAvKiBzYW1wbGUgcmF0ZSAqL1xuICAgIHZpZXcuc2V0VWludDMyKDI0LCBzYW1wbGVSYXRlLCB0cnVlKTtcbiAgICAvKiBieXRlIHJhdGUgKHNhbXBsZSByYXRlICogYmxvY2sgYWxpZ24pICovXG4gICAgdmlldy5zZXRVaW50MzIoMjgsIHNhbXBsZVJhdGUgKiBibG9ja0FsaWduLCB0cnVlKTtcbiAgICAvKiBibG9jayBhbGlnbiAoY2hhbm5lbCBjb3VudCAqIGJ5dGVzIHBlciBzYW1wbGUpICovXG4gICAgdmlldy5zZXRVaW50MTYoMzIsIGJsb2NrQWxpZ24sIHRydWUpO1xuICAgIC8qIGJpdHMgcGVyIHNhbXBsZSAqL1xuICAgIHZpZXcuc2V0VWludDE2KDM0LCBiaXREZXB0aCwgdHJ1ZSk7XG4gICAgLyogZGF0YSBjaHVuayBpZGVudGlmaWVyICovXG4gICAgd3JpdGVTdHJpbmcodmlldywgMzYsICdkYXRhJyk7XG4gICAgLyogZGF0YSBjaHVuayBsZW5ndGggKi9cbiAgICB2aWV3LnNldFVpbnQzMig0MCwgc2FtcGxlcy5sZW5ndGggKiBieXRlc1BlclNhbXBsZSwgdHJ1ZSk7XG4gICAgaWYgKGZvcm1hdCA9PT0gMSkge1xuICAgICAgICAvLyBSYXcgUENNXG4gICAgICAgIGZsb2F0VG8xNkJpdFBDTSh2aWV3LCA0NCwgc2FtcGxlcyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB3cml0ZUZsb2F0MzIodmlldywgNDQsIHNhbXBsZXMpO1xuICAgIH1cbiAgICByZXR1cm4gYnVmZmVyO1xufVxuZnVuY3Rpb24gYXVkaW9CdWZmZXJUb1dhdihidWZmZXIsIG9wdCkge1xuICAgIGNvbnN0IG51bUNoYW5uZWxzID0gYnVmZmVyLm51bWJlck9mQ2hhbm5lbHM7XG4gICAgY29uc3QgeyBzYW1wbGVSYXRlIH0gPSBidWZmZXI7XG4gICAgY29uc3QgZm9ybWF0ID0gb3B0LmZsb2F0MzIgPyAzIDogMTtcbiAgICBjb25zdCBiaXREZXB0aCA9IGZvcm1hdCA9PT0gMyA/IDMyIDogMTY7XG4gICAgbGV0IHJlc3VsdDtcbiAgICBpZiAobnVtQ2hhbm5lbHMgPT09IDIpIHtcbiAgICAgICAgcmVzdWx0ID0gaW50ZXJsZWF2ZShidWZmZXIuZ2V0Q2hhbm5lbERhdGEoMCksIGJ1ZmZlci5nZXRDaGFubmVsRGF0YSgxKSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXN1bHQgPSBidWZmZXIuZ2V0Q2hhbm5lbERhdGEoMCk7XG4gICAgfVxuICAgIHJldHVybiBlbmNvZGVXQVYoe1xuICAgICAgICBzYW1wbGVzOiByZXN1bHQsXG4gICAgICAgIGZvcm1hdCxcbiAgICAgICAgc2FtcGxlUmF0ZSxcbiAgICAgICAgbnVtQ2hhbm5lbHMsXG4gICAgICAgIGJpdERlcHRoLFxuICAgIH0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@remotion/media-utils/dist/audio-buffer/audio-buffer-to-wav.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@remotion/media-utils/dist/audio-buffer/audio-url-helpers.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@remotion/media-utils/dist/audio-buffer/audio-url-helpers.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.audioBufferToDataUrl = void 0;\nconst audio_buffer_to_wav_1 = __webpack_require__(/*! ./audio-buffer-to-wav */ \"(ssr)/./node_modules/@remotion/media-utils/dist/audio-buffer/audio-buffer-to-wav.js\");\n/**\n * @description This API takes an AudioBuffer instance and converts it to a Base 64 Data URL so it can be passed to an <Audio /> tag.\n * @see [Documentation](https://www.remotion.dev/docs/audio-buffer-to-data-url)\n */\nconst audioBufferToDataUrl = (buffer) => {\n    const wavAsArrayBuffer = (0, audio_buffer_to_wav_1.audioBufferToWav)(buffer, {\n        float32: true,\n    });\n    let binary = '';\n    const bytes = new Uint8Array(wavAsArrayBuffer);\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return 'data:audio/wav;base64,' + window.btoa(binary);\n};\nexports.audioBufferToDataUrl = audioBufferToDataUrl;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvYXVkaW8tYnVmZmVyL2F1ZGlvLXVybC1oZWxwZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QjtBQUM1Qiw4QkFBOEIsbUJBQU8sQ0FBQyxrSEFBdUI7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFNBQVM7QUFDN0I7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBLDRCQUE0QiIsInNvdXJjZXMiOlsid2VicGFjazovL3JlbW90aW9uLWNhcHRpb25zLy4vbm9kZV9tb2R1bGVzL0ByZW1vdGlvbi9tZWRpYS11dGlscy9kaXN0L2F1ZGlvLWJ1ZmZlci9hdWRpby11cmwtaGVscGVycy5qcz9iZjBmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5hdWRpb0J1ZmZlclRvRGF0YVVybCA9IHZvaWQgMDtcbmNvbnN0IGF1ZGlvX2J1ZmZlcl90b193YXZfMSA9IHJlcXVpcmUoXCIuL2F1ZGlvLWJ1ZmZlci10by13YXZcIik7XG4vKipcbiAqIEBkZXNjcmlwdGlvbiBUaGlzIEFQSSB0YWtlcyBhbiBBdWRpb0J1ZmZlciBpbnN0YW5jZSBhbmQgY29udmVydHMgaXQgdG8gYSBCYXNlIDY0IERhdGEgVVJMIHNvIGl0IGNhbiBiZSBwYXNzZWQgdG8gYW4gPEF1ZGlvIC8+IHRhZy5cbiAqIEBzZWUgW0RvY3VtZW50YXRpb25dKGh0dHBzOi8vd3d3LnJlbW90aW9uLmRldi9kb2NzL2F1ZGlvLWJ1ZmZlci10by1kYXRhLXVybClcbiAqL1xuY29uc3QgYXVkaW9CdWZmZXJUb0RhdGFVcmwgPSAoYnVmZmVyKSA9PiB7XG4gICAgY29uc3Qgd2F2QXNBcnJheUJ1ZmZlciA9ICgwLCBhdWRpb19idWZmZXJfdG9fd2F2XzEuYXVkaW9CdWZmZXJUb1dhdikoYnVmZmVyLCB7XG4gICAgICAgIGZsb2F0MzI6IHRydWUsXG4gICAgfSk7XG4gICAgbGV0IGJpbmFyeSA9ICcnO1xuICAgIGNvbnN0IGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkod2F2QXNBcnJheUJ1ZmZlcik7XG4gICAgY29uc3QgbGVuID0gYnl0ZXMuYnl0ZUxlbmd0aDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgIGJpbmFyeSArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGJ5dGVzW2ldKTtcbiAgICB9XG4gICAgcmV0dXJuICdkYXRhOmF1ZGlvL3dhdjtiYXNlNjQsJyArIHdpbmRvdy5idG9hKGJpbmFyeSk7XG59O1xuZXhwb3J0cy5hdWRpb0J1ZmZlclRvRGF0YVVybCA9IGF1ZGlvQnVmZmVyVG9EYXRhVXJsO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@remotion/media-utils/dist/audio-buffer/audio-url-helpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@remotion/media-utils/dist/fft/complex.js":
/*!****************************************************************!*\
  !*** ./node_modules/@remotion/media-utils/dist/fft/complex.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Adapted from node-fft project by Joshua Wong and Ben Bryan\n// https://github.com/vail-systems/node-fft\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.complexMagnitude = exports.complexMultiply = exports.complexSubtract = exports.complexAdd = void 0;\nconst complexAdd = function (a, b) {\n    return [a[0] + b[0], a[1] + b[1]];\n};\nexports.complexAdd = complexAdd;\nconst complexSubtract = function (a, b) {\n    return [a[0] - b[0], a[1] - b[1]];\n};\nexports.complexSubtract = complexSubtract;\nconst complexMultiply = function (a, b) {\n    return [a[0] * b[0] - a[1] * b[1], a[0] * b[1] + a[1] * b[0]];\n};\nexports.complexMultiply = complexMultiply;\nconst complexMagnitude = function (c) {\n    return Math.sqrt(c[0] * c[0] + c[1] * c[1]);\n};\nexports.complexMagnitude = complexMagnitude;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvZmZ0L2NvbXBsZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QixHQUFHLHVCQUF1QixHQUFHLHVCQUF1QixHQUFHLGtCQUFrQjtBQUNqRztBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZW1vdGlvbi1jYXB0aW9ucy8uL25vZGVfbW9kdWxlcy9AcmVtb3Rpb24vbWVkaWEtdXRpbHMvZGlzdC9mZnQvY29tcGxleC5qcz84MTIwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQWRhcHRlZCBmcm9tIG5vZGUtZmZ0IHByb2plY3QgYnkgSm9zaHVhIFdvbmcgYW5kIEJlbiBCcnlhblxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3ZhaWwtc3lzdGVtcy9ub2RlLWZmdFxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jb21wbGV4TWFnbml0dWRlID0gZXhwb3J0cy5jb21wbGV4TXVsdGlwbHkgPSBleHBvcnRzLmNvbXBsZXhTdWJ0cmFjdCA9IGV4cG9ydHMuY29tcGxleEFkZCA9IHZvaWQgMDtcbmNvbnN0IGNvbXBsZXhBZGQgPSBmdW5jdGlvbiAoYSwgYikge1xuICAgIHJldHVybiBbYVswXSArIGJbMF0sIGFbMV0gKyBiWzFdXTtcbn07XG5leHBvcnRzLmNvbXBsZXhBZGQgPSBjb21wbGV4QWRkO1xuY29uc3QgY29tcGxleFN1YnRyYWN0ID0gZnVuY3Rpb24gKGEsIGIpIHtcbiAgICByZXR1cm4gW2FbMF0gLSBiWzBdLCBhWzFdIC0gYlsxXV07XG59O1xuZXhwb3J0cy5jb21wbGV4U3VidHJhY3QgPSBjb21wbGV4U3VidHJhY3Q7XG5jb25zdCBjb21wbGV4TXVsdGlwbHkgPSBmdW5jdGlvbiAoYSwgYikge1xuICAgIHJldHVybiBbYVswXSAqIGJbMF0gLSBhWzFdICogYlsxXSwgYVswXSAqIGJbMV0gKyBhWzFdICogYlswXV07XG59O1xuZXhwb3J0cy5jb21wbGV4TXVsdGlwbHkgPSBjb21wbGV4TXVsdGlwbHk7XG5jb25zdCBjb21wbGV4TWFnbml0dWRlID0gZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gTWF0aC5zcXJ0KGNbMF0gKiBjWzBdICsgY1sxXSAqIGNbMV0pO1xufTtcbmV4cG9ydHMuY29tcGxleE1hZ25pdHVkZSA9IGNvbXBsZXhNYWduaXR1ZGU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@remotion/media-utils/dist/fft/complex.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@remotion/media-utils/dist/fft/exponent.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@remotion/media-utils/dist/fft/exponent.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Adapted from node-fft project by Joshua Wong and Ben Bryan\n// https://github.com/vail-systems/node-fft\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.exponent = void 0;\nconst mapExponent = {};\nconst exponent = function (k, N) {\n    const x = -2 * Math.PI * (k / N);\n    mapExponent[N] = mapExponent[N] || {};\n    mapExponent[N][k] = mapExponent[N][k] || [Math.cos(x), Math.sin(x)]; // [Real, Imaginary]\n    return mapExponent[N][k];\n};\nexports.exponent = exponent;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvZmZ0L2V4cG9uZW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RUFBeUU7QUFDekU7QUFDQTtBQUNBLGdCQUFnQiIsInNvdXJjZXMiOlsid2VicGFjazovL3JlbW90aW9uLWNhcHRpb25zLy4vbm9kZV9tb2R1bGVzL0ByZW1vdGlvbi9tZWRpYS11dGlscy9kaXN0L2ZmdC9leHBvbmVudC5qcz80YmE0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQWRhcHRlZCBmcm9tIG5vZGUtZmZ0IHByb2plY3QgYnkgSm9zaHVhIFdvbmcgYW5kIEJlbiBCcnlhblxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3ZhaWwtc3lzdGVtcy9ub2RlLWZmdFxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5leHBvbmVudCA9IHZvaWQgMDtcbmNvbnN0IG1hcEV4cG9uZW50ID0ge307XG5jb25zdCBleHBvbmVudCA9IGZ1bmN0aW9uIChrLCBOKSB7XG4gICAgY29uc3QgeCA9IC0yICogTWF0aC5QSSAqIChrIC8gTik7XG4gICAgbWFwRXhwb25lbnRbTl0gPSBtYXBFeHBvbmVudFtOXSB8fCB7fTtcbiAgICBtYXBFeHBvbmVudFtOXVtrXSA9IG1hcEV4cG9uZW50W05dW2tdIHx8IFtNYXRoLmNvcyh4KSwgTWF0aC5zaW4oeCldOyAvLyBbUmVhbCwgSW1hZ2luYXJ5XVxuICAgIHJldHVybiBtYXBFeHBvbmVudFtOXVtrXTtcbn07XG5leHBvcnRzLmV4cG9uZW50ID0gZXhwb25lbnQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@remotion/media-utils/dist/fft/exponent.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@remotion/media-utils/dist/fft/fft-accurate.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@remotion/media-utils/dist/fft/fft-accurate.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Adapted from node-fft project by Joshua Wong and Ben Bryan\n// https://github.com/vail-systems/node-fft\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fftAccurate = void 0;\nconst complex_1 = __webpack_require__(/*! ./complex */ \"(ssr)/./node_modules/@remotion/media-utils/dist/fft/complex.js\");\nconst exponent_1 = __webpack_require__(/*! ./exponent */ \"(ssr)/./node_modules/@remotion/media-utils/dist/fft/exponent.js\");\nconst fftAccurate = function (vector) {\n    const X = [];\n    const N = vector.length;\n    // Base case is X = x + 0i since our input is assumed to be real only.\n    if (N === 1) {\n        if (Array.isArray(vector[0])) {\n            // If input vector contains complex numbers\n            return [[vector[0][0], vector[0][1]]];\n        }\n        return [[vector[0], 0]];\n    }\n    // Recurse: all even samples\n    const X_evens = (0, exports.fftAccurate)(vector.filter((_, ix) => ix % 2 === 0));\n    // Recurse: all odd samples\n    const X_odds = (0, exports.fftAccurate)(vector.filter((__, ix) => ix % 2 === 1));\n    // Now, perform N/2 operations!\n    for (let k = 0; k < N / 2; k++) {\n        // t is a complex number!\n        const t = X_evens[k];\n        const e = (0, complex_1.complexMultiply)((0, exponent_1.exponent)(k, N), X_odds[k]);\n        X[k] = (0, complex_1.complexAdd)(t, e);\n        X[k + N / 2] = (0, complex_1.complexSubtract)(t, e);\n    }\n    return X;\n};\nexports.fftAccurate = fftAccurate;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvZmZ0L2ZmdC1hY2N1cmF0ZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CLGtCQUFrQixtQkFBTyxDQUFDLGlGQUFXO0FBQ3JDLG1CQUFtQixtQkFBTyxDQUFDLG1GQUFZO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFdBQVc7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiIsInNvdXJjZXMiOlsid2VicGFjazovL3JlbW90aW9uLWNhcHRpb25zLy4vbm9kZV9tb2R1bGVzL0ByZW1vdGlvbi9tZWRpYS11dGlscy9kaXN0L2ZmdC9mZnQtYWNjdXJhdGUuanM/N2MyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIEFkYXB0ZWQgZnJvbSBub2RlLWZmdCBwcm9qZWN0IGJ5IEpvc2h1YSBXb25nIGFuZCBCZW4gQnJ5YW5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS92YWlsLXN5c3RlbXMvbm9kZS1mZnRcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZmZ0QWNjdXJhdGUgPSB2b2lkIDA7XG5jb25zdCBjb21wbGV4XzEgPSByZXF1aXJlKFwiLi9jb21wbGV4XCIpO1xuY29uc3QgZXhwb25lbnRfMSA9IHJlcXVpcmUoXCIuL2V4cG9uZW50XCIpO1xuY29uc3QgZmZ0QWNjdXJhdGUgPSBmdW5jdGlvbiAodmVjdG9yKSB7XG4gICAgY29uc3QgWCA9IFtdO1xuICAgIGNvbnN0IE4gPSB2ZWN0b3IubGVuZ3RoO1xuICAgIC8vIEJhc2UgY2FzZSBpcyBYID0geCArIDBpIHNpbmNlIG91ciBpbnB1dCBpcyBhc3N1bWVkIHRvIGJlIHJlYWwgb25seS5cbiAgICBpZiAoTiA9PT0gMSkge1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2ZWN0b3JbMF0pKSB7XG4gICAgICAgICAgICAvLyBJZiBpbnB1dCB2ZWN0b3IgY29udGFpbnMgY29tcGxleCBudW1iZXJzXG4gICAgICAgICAgICByZXR1cm4gW1t2ZWN0b3JbMF1bMF0sIHZlY3RvclswXVsxXV1dO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBbW3ZlY3RvclswXSwgMF1dO1xuICAgIH1cbiAgICAvLyBSZWN1cnNlOiBhbGwgZXZlbiBzYW1wbGVzXG4gICAgY29uc3QgWF9ldmVucyA9ICgwLCBleHBvcnRzLmZmdEFjY3VyYXRlKSh2ZWN0b3IuZmlsdGVyKChfLCBpeCkgPT4gaXggJSAyID09PSAwKSk7XG4gICAgLy8gUmVjdXJzZTogYWxsIG9kZCBzYW1wbGVzXG4gICAgY29uc3QgWF9vZGRzID0gKDAsIGV4cG9ydHMuZmZ0QWNjdXJhdGUpKHZlY3Rvci5maWx0ZXIoKF9fLCBpeCkgPT4gaXggJSAyID09PSAxKSk7XG4gICAgLy8gTm93LCBwZXJmb3JtIE4vMiBvcGVyYXRpb25zIVxuICAgIGZvciAobGV0IGsgPSAwOyBrIDwgTiAvIDI7IGsrKykge1xuICAgICAgICAvLyB0IGlzIGEgY29tcGxleCBudW1iZXIhXG4gICAgICAgIGNvbnN0IHQgPSBYX2V2ZW5zW2tdO1xuICAgICAgICBjb25zdCBlID0gKDAsIGNvbXBsZXhfMS5jb21wbGV4TXVsdGlwbHkpKCgwLCBleHBvbmVudF8xLmV4cG9uZW50KShrLCBOKSwgWF9vZGRzW2tdKTtcbiAgICAgICAgWFtrXSA9ICgwLCBjb21wbGV4XzEuY29tcGxleEFkZCkodCwgZSk7XG4gICAgICAgIFhbayArIE4gLyAyXSA9ICgwLCBjb21wbGV4XzEuY29tcGxleFN1YnRyYWN0KSh0LCBlKTtcbiAgICB9XG4gICAgcmV0dXJuIFg7XG59O1xuZXhwb3J0cy5mZnRBY2N1cmF0ZSA9IGZmdEFjY3VyYXRlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@remotion/media-utils/dist/fft/fft-accurate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@remotion/media-utils/dist/fft/fft-fast.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@remotion/media-utils/dist/fft/fft-fast.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// https://pastebin.com/raw/D42RbPe5\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fftFast = void 0;\n// Function to reverse bits in an integer\nfunction reverseBits(num, numBits) {\n    let result = 0;\n    for (let i = 0; i < numBits; i++) {\n        result = (result << 1) | ((num >> i) & 1);\n    }\n    return result;\n}\n// Hamming window function\nfunction hammingWindow(N) {\n    const win = new Array(N);\n    for (let i = 0; i < N; i++) {\n        win[i] = 0.8 - 0.46 * Math.cos((2 * Math.PI * i) / (N - 1));\n    }\n    return win;\n}\n// Function to calculate the bit-reversed permutation indices\nfunction bitReversePermutation(N) {\n    const bitReversed = new Array(N);\n    for (let i = 0; i < N; i++) {\n        bitReversed[i] = reverseBits(i, Math.log2(N));\n    }\n    return bitReversed;\n}\nconst fftFast = function (vector) {\n    const N = vector.length;\n    const X = new Array(N);\n    if (N <= 1) {\n        for (let i = 0; i < vector.length; i++) {\n            const value = vector[i];\n            X[i] = [value * 2, 0];\n        }\n        return X;\n    }\n    // Apply a windowing function to the input data\n    const window = hammingWindow(N); // You can choose a different window function if needed\n    for (let i = 0; i < N; i++) {\n        X[i] = [vector[i] * window[i], 0];\n    }\n    // Bit-Reversal Permutation\n    const bitReversed = bitReversePermutation(N);\n    for (let i = 0; i < N; i++) {\n        X[i] = [vector[bitReversed[i]], 0];\n    }\n    // Cooley-Tukey FFT\n    for (let s = 1; s <= Math.log2(N); s++) {\n        const m = 1 << s; // Number of elements in each subarray\n        const mHalf = m / 2; // Half the number of elements in each subarray\n        const angleIncrement = (2 * Math.PI) / m;\n        for (let k = 0; k < N; k += m) {\n            let omegaReal = 1.0;\n            let omegaImag = 0.0;\n            for (let j = 0; j < mHalf; j++) {\n                const tReal = omegaReal * X[k + j + mHalf][0] - omegaImag * X[k + j + mHalf][1];\n                const tImag = omegaReal * X[k + j + mHalf][1] + omegaImag * X[k + j + mHalf][0];\n                const uReal = X[k + j][0];\n                const uImag = X[k + j][1];\n                X[k + j] = [uReal + tReal, uImag + tImag];\n                X[k + j + mHalf] = [uReal - tReal, uImag - tImag];\n                // Twiddle factor update\n                const tempReal = omegaReal * Math.cos(angleIncrement) -\n                    omegaImag * Math.sin(angleIncrement);\n                omegaImag =\n                    omegaReal * Math.sin(angleIncrement) +\n                        omegaImag * Math.cos(angleIncrement);\n                omegaReal = tempReal;\n            }\n        }\n    }\n    return X;\n};\nexports.fftFast = fftFast;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvZmZ0L2ZmdC1mYXN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixhQUFhO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLE9BQU87QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG1CQUFtQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckMsb0JBQW9CLE9BQU87QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsbUJBQW1CO0FBQ3ZDLDBCQUEwQjtBQUMxQiw2QkFBNkI7QUFDN0I7QUFDQSx3QkFBd0IsT0FBTztBQUMvQjtBQUNBO0FBQ0EsNEJBQTRCLFdBQVc7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlbW90aW9uLWNhcHRpb25zLy4vbm9kZV9tb2R1bGVzL0ByZW1vdGlvbi9tZWRpYS11dGlscy9kaXN0L2ZmdC9mZnQtZmFzdC5qcz85Mjk1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gaHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L0Q0MlJiUGU1XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmZmdEZhc3QgPSB2b2lkIDA7XG4vLyBGdW5jdGlvbiB0byByZXZlcnNlIGJpdHMgaW4gYW4gaW50ZWdlclxuZnVuY3Rpb24gcmV2ZXJzZUJpdHMobnVtLCBudW1CaXRzKSB7XG4gICAgbGV0IHJlc3VsdCA9IDA7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW1CaXRzOyBpKyspIHtcbiAgICAgICAgcmVzdWx0ID0gKHJlc3VsdCA8PCAxKSB8ICgobnVtID4+IGkpICYgMSk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG4vLyBIYW1taW5nIHdpbmRvdyBmdW5jdGlvblxuZnVuY3Rpb24gaGFtbWluZ1dpbmRvdyhOKSB7XG4gICAgY29uc3Qgd2luID0gbmV3IEFycmF5KE4pO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgTjsgaSsrKSB7XG4gICAgICAgIHdpbltpXSA9IDAuOCAtIDAuNDYgKiBNYXRoLmNvcygoMiAqIE1hdGguUEkgKiBpKSAvIChOIC0gMSkpO1xuICAgIH1cbiAgICByZXR1cm4gd2luO1xufVxuLy8gRnVuY3Rpb24gdG8gY2FsY3VsYXRlIHRoZSBiaXQtcmV2ZXJzZWQgcGVybXV0YXRpb24gaW5kaWNlc1xuZnVuY3Rpb24gYml0UmV2ZXJzZVBlcm11dGF0aW9uKE4pIHtcbiAgICBjb25zdCBiaXRSZXZlcnNlZCA9IG5ldyBBcnJheShOKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IE47IGkrKykge1xuICAgICAgICBiaXRSZXZlcnNlZFtpXSA9IHJldmVyc2VCaXRzKGksIE1hdGgubG9nMihOKSk7XG4gICAgfVxuICAgIHJldHVybiBiaXRSZXZlcnNlZDtcbn1cbmNvbnN0IGZmdEZhc3QgPSBmdW5jdGlvbiAodmVjdG9yKSB7XG4gICAgY29uc3QgTiA9IHZlY3Rvci5sZW5ndGg7XG4gICAgY29uc3QgWCA9IG5ldyBBcnJheShOKTtcbiAgICBpZiAoTiA8PSAxKSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdmVjdG9yLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHZlY3RvcltpXTtcbiAgICAgICAgICAgIFhbaV0gPSBbdmFsdWUgKiAyLCAwXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gWDtcbiAgICB9XG4gICAgLy8gQXBwbHkgYSB3aW5kb3dpbmcgZnVuY3Rpb24gdG8gdGhlIGlucHV0IGRhdGFcbiAgICBjb25zdCB3aW5kb3cgPSBoYW1taW5nV2luZG93KE4pOyAvLyBZb3UgY2FuIGNob29zZSBhIGRpZmZlcmVudCB3aW5kb3cgZnVuY3Rpb24gaWYgbmVlZGVkXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBOOyBpKyspIHtcbiAgICAgICAgWFtpXSA9IFt2ZWN0b3JbaV0gKiB3aW5kb3dbaV0sIDBdO1xuICAgIH1cbiAgICAvLyBCaXQtUmV2ZXJzYWwgUGVybXV0YXRpb25cbiAgICBjb25zdCBiaXRSZXZlcnNlZCA9IGJpdFJldmVyc2VQZXJtdXRhdGlvbihOKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IE47IGkrKykge1xuICAgICAgICBYW2ldID0gW3ZlY3RvcltiaXRSZXZlcnNlZFtpXV0sIDBdO1xuICAgIH1cbiAgICAvLyBDb29sZXktVHVrZXkgRkZUXG4gICAgZm9yIChsZXQgcyA9IDE7IHMgPD0gTWF0aC5sb2cyKE4pOyBzKyspIHtcbiAgICAgICAgY29uc3QgbSA9IDEgPDwgczsgLy8gTnVtYmVyIG9mIGVsZW1lbnRzIGluIGVhY2ggc3ViYXJyYXlcbiAgICAgICAgY29uc3QgbUhhbGYgPSBtIC8gMjsgLy8gSGFsZiB0aGUgbnVtYmVyIG9mIGVsZW1lbnRzIGluIGVhY2ggc3ViYXJyYXlcbiAgICAgICAgY29uc3QgYW5nbGVJbmNyZW1lbnQgPSAoMiAqIE1hdGguUEkpIC8gbTtcbiAgICAgICAgZm9yIChsZXQgayA9IDA7IGsgPCBOOyBrICs9IG0pIHtcbiAgICAgICAgICAgIGxldCBvbWVnYVJlYWwgPSAxLjA7XG4gICAgICAgICAgICBsZXQgb21lZ2FJbWFnID0gMC4wO1xuICAgICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBtSGFsZjsgaisrKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgdFJlYWwgPSBvbWVnYVJlYWwgKiBYW2sgKyBqICsgbUhhbGZdWzBdIC0gb21lZ2FJbWFnICogWFtrICsgaiArIG1IYWxmXVsxXTtcbiAgICAgICAgICAgICAgICBjb25zdCB0SW1hZyA9IG9tZWdhUmVhbCAqIFhbayArIGogKyBtSGFsZl1bMV0gKyBvbWVnYUltYWcgKiBYW2sgKyBqICsgbUhhbGZdWzBdO1xuICAgICAgICAgICAgICAgIGNvbnN0IHVSZWFsID0gWFtrICsgal1bMF07XG4gICAgICAgICAgICAgICAgY29uc3QgdUltYWcgPSBYW2sgKyBqXVsxXTtcbiAgICAgICAgICAgICAgICBYW2sgKyBqXSA9IFt1UmVhbCArIHRSZWFsLCB1SW1hZyArIHRJbWFnXTtcbiAgICAgICAgICAgICAgICBYW2sgKyBqICsgbUhhbGZdID0gW3VSZWFsIC0gdFJlYWwsIHVJbWFnIC0gdEltYWddO1xuICAgICAgICAgICAgICAgIC8vIFR3aWRkbGUgZmFjdG9yIHVwZGF0ZVxuICAgICAgICAgICAgICAgIGNvbnN0IHRlbXBSZWFsID0gb21lZ2FSZWFsICogTWF0aC5jb3MoYW5nbGVJbmNyZW1lbnQpIC1cbiAgICAgICAgICAgICAgICAgICAgb21lZ2FJbWFnICogTWF0aC5zaW4oYW5nbGVJbmNyZW1lbnQpO1xuICAgICAgICAgICAgICAgIG9tZWdhSW1hZyA9XG4gICAgICAgICAgICAgICAgICAgIG9tZWdhUmVhbCAqIE1hdGguc2luKGFuZ2xlSW5jcmVtZW50KSArXG4gICAgICAgICAgICAgICAgICAgICAgICBvbWVnYUltYWcgKiBNYXRoLmNvcyhhbmdsZUluY3JlbWVudCk7XG4gICAgICAgICAgICAgICAgb21lZ2FSZWFsID0gdGVtcFJlYWw7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIFg7XG59O1xuZXhwb3J0cy5mZnRGYXN0ID0gZmZ0RmFzdDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@remotion/media-utils/dist/fft/fft-fast.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@remotion/media-utils/dist/fft/get-visualization.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@remotion/media-utils/dist/fft/get-visualization.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Adapted from node-fft project by Joshua Wong and Ben Bryan\n// https://github.com/vail-systems/node-fft\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getVisualization = void 0;\nconst fft_accurate_1 = __webpack_require__(/*! ./fft-accurate */ \"(ssr)/./node_modules/@remotion/media-utils/dist/fft/fft-accurate.js\");\nconst fft_fast_1 = __webpack_require__(/*! ./fft-fast */ \"(ssr)/./node_modules/@remotion/media-utils/dist/fft/fft-fast.js\");\nconst mag_1 = __webpack_require__(/*! ./mag */ \"(ssr)/./node_modules/@remotion/media-utils/dist/fft/mag.js\");\nconst smoothing_1 = __webpack_require__(/*! ./smoothing */ \"(ssr)/./node_modules/@remotion/media-utils/dist/fft/smoothing.js\");\nconst to_int_16_1 = __webpack_require__(/*! ./to-int-16 */ \"(ssr)/./node_modules/@remotion/media-utils/dist/fft/to-int-16.js\");\nconst getVisualization = ({ sampleSize, data, sampleRate, frame, fps, maxInt, optimizeFor = 'accuracy', }) => {\n    const isPowerOfTwo = sampleSize > 0 && (sampleSize & (sampleSize - 1)) === 0;\n    if (!isPowerOfTwo) {\n        throw new TypeError(`The argument \"bars\" must be a power of two. For example: 64, 128. Got instead: ${sampleSize}`);\n    }\n    if (!fps) {\n        throw new TypeError('The argument \"fps\" was not provided');\n    }\n    if (data.length < sampleSize) {\n        throw new TypeError('Audio data is not big enough to provide ' + sampleSize + ' bars.');\n    }\n    const start = Math.floor((frame / fps) * sampleRate);\n    const actualStart = Math.max(0, start - sampleSize / 2);\n    const ints = new Int16Array({\n        length: sampleSize,\n    });\n    ints.set(data.subarray(actualStart, actualStart + sampleSize).map((x) => (0, to_int_16_1.toInt16)(x)));\n    const alg = optimizeFor === 'accuracy' ? fft_accurate_1.fftAccurate : fft_fast_1.fftFast;\n    const phasors = alg(ints);\n    const magnitudes = (0, mag_1.fftMag)(phasors).map((p) => p);\n    return (0, smoothing_1.smoothen)(magnitudes).map((m) => m / (sampleSize / 2) / maxInt);\n};\nexports.getVisualization = getVisualization;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvZmZ0L2dldC12aXN1YWxpemF0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0I7QUFDeEIsdUJBQXVCLG1CQUFPLENBQUMsMkZBQWdCO0FBQy9DLG1CQUFtQixtQkFBTyxDQUFDLG1GQUFZO0FBQ3ZDLGNBQWMsbUJBQU8sQ0FBQyx5RUFBTztBQUM3QixvQkFBb0IsbUJBQU8sQ0FBQyxxRkFBYTtBQUN6QyxvQkFBb0IsbUJBQU8sQ0FBQyxxRkFBYTtBQUN6Qyw0QkFBNEIsNkVBQTZFO0FBQ3pHO0FBQ0E7QUFDQSw4R0FBOEcsV0FBVztBQUN6SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiIsInNvdXJjZXMiOlsid2VicGFjazovL3JlbW90aW9uLWNhcHRpb25zLy4vbm9kZV9tb2R1bGVzL0ByZW1vdGlvbi9tZWRpYS11dGlscy9kaXN0L2ZmdC9nZXQtdmlzdWFsaXphdGlvbi5qcz9hMDE3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQWRhcHRlZCBmcm9tIG5vZGUtZmZ0IHByb2plY3QgYnkgSm9zaHVhIFdvbmcgYW5kIEJlbiBCcnlhblxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3ZhaWwtc3lzdGVtcy9ub2RlLWZmdFxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRWaXN1YWxpemF0aW9uID0gdm9pZCAwO1xuY29uc3QgZmZ0X2FjY3VyYXRlXzEgPSByZXF1aXJlKFwiLi9mZnQtYWNjdXJhdGVcIik7XG5jb25zdCBmZnRfZmFzdF8xID0gcmVxdWlyZShcIi4vZmZ0LWZhc3RcIik7XG5jb25zdCBtYWdfMSA9IHJlcXVpcmUoXCIuL21hZ1wiKTtcbmNvbnN0IHNtb290aGluZ18xID0gcmVxdWlyZShcIi4vc21vb3RoaW5nXCIpO1xuY29uc3QgdG9faW50XzE2XzEgPSByZXF1aXJlKFwiLi90by1pbnQtMTZcIik7XG5jb25zdCBnZXRWaXN1YWxpemF0aW9uID0gKHsgc2FtcGxlU2l6ZSwgZGF0YSwgc2FtcGxlUmF0ZSwgZnJhbWUsIGZwcywgbWF4SW50LCBvcHRpbWl6ZUZvciA9ICdhY2N1cmFjeScsIH0pID0+IHtcbiAgICBjb25zdCBpc1Bvd2VyT2ZUd28gPSBzYW1wbGVTaXplID4gMCAmJiAoc2FtcGxlU2l6ZSAmIChzYW1wbGVTaXplIC0gMSkpID09PSAwO1xuICAgIGlmICghaXNQb3dlck9mVHdvKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYFRoZSBhcmd1bWVudCBcImJhcnNcIiBtdXN0IGJlIGEgcG93ZXIgb2YgdHdvLiBGb3IgZXhhbXBsZTogNjQsIDEyOC4gR290IGluc3RlYWQ6ICR7c2FtcGxlU2l6ZX1gKTtcbiAgICB9XG4gICAgaWYgKCFmcHMpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIGFyZ3VtZW50IFwiZnBzXCIgd2FzIG5vdCBwcm92aWRlZCcpO1xuICAgIH1cbiAgICBpZiAoZGF0YS5sZW5ndGggPCBzYW1wbGVTaXplKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0F1ZGlvIGRhdGEgaXMgbm90IGJpZyBlbm91Z2ggdG8gcHJvdmlkZSAnICsgc2FtcGxlU2l6ZSArICcgYmFycy4nKTtcbiAgICB9XG4gICAgY29uc3Qgc3RhcnQgPSBNYXRoLmZsb29yKChmcmFtZSAvIGZwcykgKiBzYW1wbGVSYXRlKTtcbiAgICBjb25zdCBhY3R1YWxTdGFydCA9IE1hdGgubWF4KDAsIHN0YXJ0IC0gc2FtcGxlU2l6ZSAvIDIpO1xuICAgIGNvbnN0IGludHMgPSBuZXcgSW50MTZBcnJheSh7XG4gICAgICAgIGxlbmd0aDogc2FtcGxlU2l6ZSxcbiAgICB9KTtcbiAgICBpbnRzLnNldChkYXRhLnN1YmFycmF5KGFjdHVhbFN0YXJ0LCBhY3R1YWxTdGFydCArIHNhbXBsZVNpemUpLm1hcCgoeCkgPT4gKDAsIHRvX2ludF8xNl8xLnRvSW50MTYpKHgpKSk7XG4gICAgY29uc3QgYWxnID0gb3B0aW1pemVGb3IgPT09ICdhY2N1cmFjeScgPyBmZnRfYWNjdXJhdGVfMS5mZnRBY2N1cmF0ZSA6IGZmdF9mYXN0XzEuZmZ0RmFzdDtcbiAgICBjb25zdCBwaGFzb3JzID0gYWxnKGludHMpO1xuICAgIGNvbnN0IG1hZ25pdHVkZXMgPSAoMCwgbWFnXzEuZmZ0TWFnKShwaGFzb3JzKS5tYXAoKHApID0+IHApO1xuICAgIHJldHVybiAoMCwgc21vb3RoaW5nXzEuc21vb3RoZW4pKG1hZ25pdHVkZXMpLm1hcCgobSkgPT4gbSAvIChzYW1wbGVTaXplIC8gMikgLyBtYXhJbnQpO1xufTtcbmV4cG9ydHMuZ2V0VmlzdWFsaXphdGlvbiA9IGdldFZpc3VhbGl6YXRpb247XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@remotion/media-utils/dist/fft/get-visualization.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@remotion/media-utils/dist/fft/mag.js":
/*!************************************************************!*\
  !*** ./node_modules/@remotion/media-utils/dist/fft/mag.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Adapted from node-fft project by Joshua Wong and Ben Bryan\n// https://github.com/vail-systems/node-fft\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fftMag = void 0;\nconst complex_1 = __webpack_require__(/*! ./complex */ \"(ssr)/./node_modules/@remotion/media-utils/dist/fft/complex.js\");\nconst fftMag = function (fftBins) {\n    const ret = fftBins.map((f) => (0, complex_1.complexMagnitude)(f));\n    return ret.slice(0, ret.length / 2);\n};\nexports.fftMag = fftMag;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvZmZ0L21hZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkLGtCQUFrQixtQkFBTyxDQUFDLGlGQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyIsInNvdXJjZXMiOlsid2VicGFjazovL3JlbW90aW9uLWNhcHRpb25zLy4vbm9kZV9tb2R1bGVzL0ByZW1vdGlvbi9tZWRpYS11dGlscy9kaXN0L2ZmdC9tYWcuanM/NGJhNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIEFkYXB0ZWQgZnJvbSBub2RlLWZmdCBwcm9qZWN0IGJ5IEpvc2h1YSBXb25nIGFuZCBCZW4gQnJ5YW5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS92YWlsLXN5c3RlbXMvbm9kZS1mZnRcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZmZ0TWFnID0gdm9pZCAwO1xuY29uc3QgY29tcGxleF8xID0gcmVxdWlyZShcIi4vY29tcGxleFwiKTtcbmNvbnN0IGZmdE1hZyA9IGZ1bmN0aW9uIChmZnRCaW5zKSB7XG4gICAgY29uc3QgcmV0ID0gZmZ0Qmlucy5tYXAoKGYpID0+ICgwLCBjb21wbGV4XzEuY29tcGxleE1hZ25pdHVkZSkoZikpO1xuICAgIHJldHVybiByZXQuc2xpY2UoMCwgcmV0Lmxlbmd0aCAvIDIpO1xufTtcbmV4cG9ydHMuZmZ0TWFnID0gZmZ0TWFnO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@remotion/media-utils/dist/fft/mag.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@remotion/media-utils/dist/fft/max-value-cached.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@remotion/media-utils/dist/fft/max-value-cached.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Adapted from node-fft project by Joshua Wong and Ben Bryan\n// https://github.com/vail-systems/node-fft\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getMaxPossibleMagnitude = void 0;\nconst to_int_16_1 = __webpack_require__(/*! ./to-int-16 */ \"(ssr)/./node_modules/@remotion/media-utils/dist/fft/to-int-16.js\");\nconst getMax = (array) => {\n    let max = 0;\n    for (let i = 0; i < array.length; i++) {\n        const val = array[i];\n        if (val > max) {\n            max = val;\n        }\n    }\n    return max;\n};\nconst cache = {};\nconst getMaxPossibleMagnitude = (metadata) => {\n    if (cache[metadata.resultId]) {\n        return cache[metadata.resultId];\n    }\n    const result = (0, to_int_16_1.toInt16)(getMax(metadata.channelWaveforms[0]));\n    cache[metadata.resultId] = result;\n    return result;\n};\nexports.getMaxPossibleMagnitude = getMaxPossibleMagnitude;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvZmZ0L21heC12YWx1ZS1jYWNoZWQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELCtCQUErQjtBQUMvQixvQkFBb0IsbUJBQU8sQ0FBQyxxRkFBYTtBQUN6QztBQUNBO0FBQ0Esb0JBQW9CLGtCQUFrQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovL3JlbW90aW9uLWNhcHRpb25zLy4vbm9kZV9tb2R1bGVzL0ByZW1vdGlvbi9tZWRpYS11dGlscy9kaXN0L2ZmdC9tYXgtdmFsdWUtY2FjaGVkLmpzPzQ0ZjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBBZGFwdGVkIGZyb20gbm9kZS1mZnQgcHJvamVjdCBieSBKb3NodWEgV29uZyBhbmQgQmVuIEJyeWFuXG4vLyBodHRwczovL2dpdGh1Yi5jb20vdmFpbC1zeXN0ZW1zL25vZGUtZmZ0XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldE1heFBvc3NpYmxlTWFnbml0dWRlID0gdm9pZCAwO1xuY29uc3QgdG9faW50XzE2XzEgPSByZXF1aXJlKFwiLi90by1pbnQtMTZcIik7XG5jb25zdCBnZXRNYXggPSAoYXJyYXkpID0+IHtcbiAgICBsZXQgbWF4ID0gMDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IHZhbCA9IGFycmF5W2ldO1xuICAgICAgICBpZiAodmFsID4gbWF4KSB7XG4gICAgICAgICAgICBtYXggPSB2YWw7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG1heDtcbn07XG5jb25zdCBjYWNoZSA9IHt9O1xuY29uc3QgZ2V0TWF4UG9zc2libGVNYWduaXR1ZGUgPSAobWV0YWRhdGEpID0+IHtcbiAgICBpZiAoY2FjaGVbbWV0YWRhdGEucmVzdWx0SWRdKSB7XG4gICAgICAgIHJldHVybiBjYWNoZVttZXRhZGF0YS5yZXN1bHRJZF07XG4gICAgfVxuICAgIGNvbnN0IHJlc3VsdCA9ICgwLCB0b19pbnRfMTZfMS50b0ludDE2KShnZXRNYXgobWV0YWRhdGEuY2hhbm5lbFdhdmVmb3Jtc1swXSkpO1xuICAgIGNhY2hlW21ldGFkYXRhLnJlc3VsdElkXSA9IHJlc3VsdDtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbmV4cG9ydHMuZ2V0TWF4UG9zc2libGVNYWduaXR1ZGUgPSBnZXRNYXhQb3NzaWJsZU1hZ25pdHVkZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@remotion/media-utils/dist/fft/max-value-cached.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@remotion/media-utils/dist/fft/smoothing.js":
/*!******************************************************************!*\
  !*** ./node_modules/@remotion/media-utils/dist/fft/smoothing.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Adapted from node-fft project by Joshua Wong and Ben Bryan\n// https://github.com/vail-systems/node-fft\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.smoothen = void 0;\nconst smoothingPasses = 3;\nconst smoothingPoints = 3;\nconst smoothen = function (array) {\n    let lastArray = array;\n    const newArr = [];\n    for (let pass = 0; pass < smoothingPasses; pass++) {\n        const sidePoints = Math.floor(smoothingPoints / 2); // our window is centered so this is both nL and nR\n        const cn = 1 / (2 * sidePoints + 1); // constant\n        for (let i = 0; i < sidePoints; i++) {\n            newArr[i] = lastArray[i];\n            newArr[lastArray.length - i - 1] = lastArray[lastArray.length - i - 1];\n        }\n        for (let i = sidePoints; i < lastArray.length - sidePoints; i++) {\n            let sum = 0;\n            for (let n = -sidePoints; n <= sidePoints; n++) {\n                sum += cn * lastArray[i + n] + n;\n            }\n            newArr[i] = sum;\n        }\n        lastArray = newArr;\n    }\n    return newArr;\n};\nexports.smoothen = smoothen;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvZmZ0L3Ntb290aGluZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsd0JBQXdCO0FBQy9DLDREQUE0RDtBQUM1RCw2Q0FBNkM7QUFDN0Msd0JBQXdCLGdCQUFnQjtBQUN4QztBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsbUNBQW1DO0FBQ3BFO0FBQ0Esc0NBQXNDLGlCQUFpQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVtb3Rpb24tY2FwdGlvbnMvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvZmZ0L3Ntb290aGluZy5qcz9jMDE1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQWRhcHRlZCBmcm9tIG5vZGUtZmZ0IHByb2plY3QgYnkgSm9zaHVhIFdvbmcgYW5kIEJlbiBCcnlhblxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3ZhaWwtc3lzdGVtcy9ub2RlLWZmdFxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zbW9vdGhlbiA9IHZvaWQgMDtcbmNvbnN0IHNtb290aGluZ1Bhc3NlcyA9IDM7XG5jb25zdCBzbW9vdGhpbmdQb2ludHMgPSAzO1xuY29uc3Qgc21vb3RoZW4gPSBmdW5jdGlvbiAoYXJyYXkpIHtcbiAgICBsZXQgbGFzdEFycmF5ID0gYXJyYXk7XG4gICAgY29uc3QgbmV3QXJyID0gW107XG4gICAgZm9yIChsZXQgcGFzcyA9IDA7IHBhc3MgPCBzbW9vdGhpbmdQYXNzZXM7IHBhc3MrKykge1xuICAgICAgICBjb25zdCBzaWRlUG9pbnRzID0gTWF0aC5mbG9vcihzbW9vdGhpbmdQb2ludHMgLyAyKTsgLy8gb3VyIHdpbmRvdyBpcyBjZW50ZXJlZCBzbyB0aGlzIGlzIGJvdGggbkwgYW5kIG5SXG4gICAgICAgIGNvbnN0IGNuID0gMSAvICgyICogc2lkZVBvaW50cyArIDEpOyAvLyBjb25zdGFudFxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNpZGVQb2ludHM7IGkrKykge1xuICAgICAgICAgICAgbmV3QXJyW2ldID0gbGFzdEFycmF5W2ldO1xuICAgICAgICAgICAgbmV3QXJyW2xhc3RBcnJheS5sZW5ndGggLSBpIC0gMV0gPSBsYXN0QXJyYXlbbGFzdEFycmF5Lmxlbmd0aCAtIGkgLSAxXTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGxldCBpID0gc2lkZVBvaW50czsgaSA8IGxhc3RBcnJheS5sZW5ndGggLSBzaWRlUG9pbnRzOyBpKyspIHtcbiAgICAgICAgICAgIGxldCBzdW0gPSAwO1xuICAgICAgICAgICAgZm9yIChsZXQgbiA9IC1zaWRlUG9pbnRzOyBuIDw9IHNpZGVQb2ludHM7IG4rKykge1xuICAgICAgICAgICAgICAgIHN1bSArPSBjbiAqIGxhc3RBcnJheVtpICsgbl0gKyBuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbmV3QXJyW2ldID0gc3VtO1xuICAgICAgICB9XG4gICAgICAgIGxhc3RBcnJheSA9IG5ld0FycjtcbiAgICB9XG4gICAgcmV0dXJuIG5ld0Fycjtcbn07XG5leHBvcnRzLnNtb290aGVuID0gc21vb3RoZW47XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@remotion/media-utils/dist/fft/smoothing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@remotion/media-utils/dist/fft/to-int-16.js":
/*!******************************************************************!*\
  !*** ./node_modules/@remotion/media-utils/dist/fft/to-int-16.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toInt16 = void 0;\nconst toInt16 = (x) => (x > 0 ? x * 0x7fff : x * 0x8000);\nexports.toInt16 = toInt16;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvZmZ0L3RvLWludC0xNi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlO0FBQ2Y7QUFDQSxlQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVtb3Rpb24tY2FwdGlvbnMvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvZmZ0L3RvLWludC0xNi5qcz9jZTVkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0ludDE2ID0gdm9pZCAwO1xuY29uc3QgdG9JbnQxNiA9ICh4KSA9PiAoeCA+IDAgPyB4ICogMHg3ZmZmIDogeCAqIDB4ODAwMCk7XG5leHBvcnRzLnRvSW50MTYgPSB0b0ludDE2O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@remotion/media-utils/dist/fft/to-int-16.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@remotion/media-utils/dist/get-audio-data.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@remotion/media-utils/dist/get-audio-data.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getAudioData = void 0;\nconst is_remote_asset_1 = __webpack_require__(/*! ./is-remote-asset */ \"(ssr)/./node_modules/@remotion/media-utils/dist/is-remote-asset.js\");\nconst p_limit_1 = __webpack_require__(/*! ./p-limit */ \"(ssr)/./node_modules/@remotion/media-utils/dist/p-limit.js\");\nconst metadataCache = {};\nconst limit = (0, p_limit_1.pLimit)(3);\nconst fetchWithCorsCatch = async (src) => {\n    try {\n        const response = await fetch(src, {\n            mode: 'cors',\n            referrerPolicy: 'no-referrer-when-downgrade',\n        });\n        return response;\n    }\n    catch (err) {\n        const error = err;\n        if (\n        // Chrome\n        error.message.includes('Failed to fetch') ||\n            // Safari\n            error.message.includes('Load failed') ||\n            // Firefox\n            error.message.includes('NetworkError when attempting to fetch resource')) {\n            throw new TypeError(`Failed to read from ${src}: ${error.message}. Does the resource support CORS?`);\n        }\n        throw err;\n    }\n};\nconst fn = async (src, options) => {\n    var _a;\n    if (metadataCache[src]) {\n        return metadataCache[src];\n    }\n    if (typeof document === 'undefined') {\n        throw new Error('getAudioData() is only available in the browser.');\n    }\n    const audioContext = new AudioContext({\n        sampleRate: (_a = options === null || options === void 0 ? void 0 : options.sampleRate) !== null && _a !== void 0 ? _a : 48000,\n    });\n    const response = await fetchWithCorsCatch(src);\n    const arrayBuffer = await response.arrayBuffer();\n    const wave = await audioContext.decodeAudioData(arrayBuffer);\n    const channelWaveforms = new Array(wave.numberOfChannels)\n        .fill(true)\n        .map((_, channel) => {\n        return wave.getChannelData(channel);\n    });\n    const metadata = {\n        channelWaveforms,\n        sampleRate: wave.sampleRate,\n        durationInSeconds: wave.duration,\n        numberOfChannels: wave.numberOfChannels,\n        resultId: String(Math.random()),\n        isRemote: (0, is_remote_asset_1.isRemoteAsset)(src),\n    };\n    metadataCache[src] = metadata;\n    return metadata;\n};\n/**\n * @description Takes an audio src, loads it and returns data and metadata for the specified source.\n * @see [Documentation](https://www.remotion.dev/docs/get-audio-data)\n */\nconst getAudioData = (src, options) => {\n    return limit(fn, src, options);\n};\nexports.getAudioData = getAudioData;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvZ2V0LWF1ZGlvLWRhdGEuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CO0FBQ3BCLDBCQUEwQixtQkFBTyxDQUFDLDZGQUFtQjtBQUNyRCxrQkFBa0IsbUJBQU8sQ0FBQyw2RUFBVztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVELElBQUksSUFBSSxjQUFjO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVtb3Rpb24tY2FwdGlvbnMvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvZ2V0LWF1ZGlvLWRhdGEuanM/MjZjNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0QXVkaW9EYXRhID0gdm9pZCAwO1xuY29uc3QgaXNfcmVtb3RlX2Fzc2V0XzEgPSByZXF1aXJlKFwiLi9pcy1yZW1vdGUtYXNzZXRcIik7XG5jb25zdCBwX2xpbWl0XzEgPSByZXF1aXJlKFwiLi9wLWxpbWl0XCIpO1xuY29uc3QgbWV0YWRhdGFDYWNoZSA9IHt9O1xuY29uc3QgbGltaXQgPSAoMCwgcF9saW1pdF8xLnBMaW1pdCkoMyk7XG5jb25zdCBmZXRjaFdpdGhDb3JzQ2F0Y2ggPSBhc3luYyAoc3JjKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChzcmMsIHtcbiAgICAgICAgICAgIG1vZGU6ICdjb3JzJyxcbiAgICAgICAgICAgIHJlZmVycmVyUG9saWN5OiAnbm8tcmVmZXJyZXItd2hlbi1kb3duZ3JhZGUnLFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGNvbnN0IGVycm9yID0gZXJyO1xuICAgICAgICBpZiAoXG4gICAgICAgIC8vIENocm9tZVxuICAgICAgICBlcnJvci5tZXNzYWdlLmluY2x1ZGVzKCdGYWlsZWQgdG8gZmV0Y2gnKSB8fFxuICAgICAgICAgICAgLy8gU2FmYXJpXG4gICAgICAgICAgICBlcnJvci5tZXNzYWdlLmluY2x1ZGVzKCdMb2FkIGZhaWxlZCcpIHx8XG4gICAgICAgICAgICAvLyBGaXJlZm94XG4gICAgICAgICAgICBlcnJvci5tZXNzYWdlLmluY2x1ZGVzKCdOZXR3b3JrRXJyb3Igd2hlbiBhdHRlbXB0aW5nIHRvIGZldGNoIHJlc291cmNlJykpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYEZhaWxlZCB0byByZWFkIGZyb20gJHtzcmN9OiAke2Vycm9yLm1lc3NhZ2V9LiBEb2VzIHRoZSByZXNvdXJjZSBzdXBwb3J0IENPUlM/YCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgZXJyO1xuICAgIH1cbn07XG5jb25zdCBmbiA9IGFzeW5jIChzcmMsIG9wdGlvbnMpID0+IHtcbiAgICB2YXIgX2E7XG4gICAgaWYgKG1ldGFkYXRhQ2FjaGVbc3JjXSkge1xuICAgICAgICByZXR1cm4gbWV0YWRhdGFDYWNoZVtzcmNdO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2dldEF1ZGlvRGF0YSgpIGlzIG9ubHkgYXZhaWxhYmxlIGluIHRoZSBicm93c2VyLicpO1xuICAgIH1cbiAgICBjb25zdCBhdWRpb0NvbnRleHQgPSBuZXcgQXVkaW9Db250ZXh0KHtcbiAgICAgICAgc2FtcGxlUmF0ZTogKF9hID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLnNhbXBsZVJhdGUpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IDQ4MDAwLFxuICAgIH0pO1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2hXaXRoQ29yc0NhdGNoKHNyYyk7XG4gICAgY29uc3QgYXJyYXlCdWZmZXIgPSBhd2FpdCByZXNwb25zZS5hcnJheUJ1ZmZlcigpO1xuICAgIGNvbnN0IHdhdmUgPSBhd2FpdCBhdWRpb0NvbnRleHQuZGVjb2RlQXVkaW9EYXRhKGFycmF5QnVmZmVyKTtcbiAgICBjb25zdCBjaGFubmVsV2F2ZWZvcm1zID0gbmV3IEFycmF5KHdhdmUubnVtYmVyT2ZDaGFubmVscylcbiAgICAgICAgLmZpbGwodHJ1ZSlcbiAgICAgICAgLm1hcCgoXywgY2hhbm5lbCkgPT4ge1xuICAgICAgICByZXR1cm4gd2F2ZS5nZXRDaGFubmVsRGF0YShjaGFubmVsKTtcbiAgICB9KTtcbiAgICBjb25zdCBtZXRhZGF0YSA9IHtcbiAgICAgICAgY2hhbm5lbFdhdmVmb3JtcyxcbiAgICAgICAgc2FtcGxlUmF0ZTogd2F2ZS5zYW1wbGVSYXRlLFxuICAgICAgICBkdXJhdGlvbkluU2Vjb25kczogd2F2ZS5kdXJhdGlvbixcbiAgICAgICAgbnVtYmVyT2ZDaGFubmVsczogd2F2ZS5udW1iZXJPZkNoYW5uZWxzLFxuICAgICAgICByZXN1bHRJZDogU3RyaW5nKE1hdGgucmFuZG9tKCkpLFxuICAgICAgICBpc1JlbW90ZTogKDAsIGlzX3JlbW90ZV9hc3NldF8xLmlzUmVtb3RlQXNzZXQpKHNyYyksXG4gICAgfTtcbiAgICBtZXRhZGF0YUNhY2hlW3NyY10gPSBtZXRhZGF0YTtcbiAgICByZXR1cm4gbWV0YWRhdGE7XG59O1xuLyoqXG4gKiBAZGVzY3JpcHRpb24gVGFrZXMgYW4gYXVkaW8gc3JjLCBsb2FkcyBpdCBhbmQgcmV0dXJucyBkYXRhIGFuZCBtZXRhZGF0YSBmb3IgdGhlIHNwZWNpZmllZCBzb3VyY2UuXG4gKiBAc2VlIFtEb2N1bWVudGF0aW9uXShodHRwczovL3d3dy5yZW1vdGlvbi5kZXYvZG9jcy9nZXQtYXVkaW8tZGF0YSlcbiAqL1xuY29uc3QgZ2V0QXVkaW9EYXRhID0gKHNyYywgb3B0aW9ucykgPT4ge1xuICAgIHJldHVybiBsaW1pdChmbiwgc3JjLCBvcHRpb25zKTtcbn07XG5leHBvcnRzLmdldEF1ZGlvRGF0YSA9IGdldEF1ZGlvRGF0YTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@remotion/media-utils/dist/get-audio-data.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@remotion/media-utils/dist/get-audio-duration-in-seconds.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@remotion/media-utils/dist/get-audio-duration-in-seconds.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getAudioDuration = exports.getAudioDurationInSeconds = void 0;\n/* eslint-disable @typescript-eslint/no-use-before-define */\nconst media_tag_error_handling_1 = __webpack_require__(/*! ./media-tag-error-handling */ \"(ssr)/./node_modules/@remotion/media-utils/dist/media-tag-error-handling.js\");\nconst p_limit_1 = __webpack_require__(/*! ./p-limit */ \"(ssr)/./node_modules/@remotion/media-utils/dist/p-limit.js\");\nconst limit = (0, p_limit_1.pLimit)(3);\nconst metadataCache = {};\nconst fn = (src) => {\n    if (metadataCache[src]) {\n        return Promise.resolve(metadataCache[src]);\n    }\n    if (typeof document === 'undefined') {\n        throw new Error('getAudioDuration() is only available in the browser.');\n    }\n    const audio = document.createElement('audio');\n    audio.src = src;\n    return new Promise((resolve, reject) => {\n        const onError = () => {\n            (0, media_tag_error_handling_1.onMediaError)({\n                error: audio.error,\n                src,\n                cleanup,\n                reject,\n                api: 'getAudioDurationInSeconds()',\n            });\n        };\n        const onLoadedMetadata = () => {\n            metadataCache[src] = audio.duration;\n            resolve(audio.duration);\n            cleanup();\n        };\n        const cleanup = () => {\n            audio.removeEventListener('loadedmetadata', onLoadedMetadata);\n            audio.removeEventListener('error', onError);\n            audio.remove();\n        };\n        audio.addEventListener('loadedmetadata', onLoadedMetadata, { once: true });\n        audio.addEventListener('error', onError, { once: true });\n    });\n};\n/**\n * @default Get the audio file passed in parameter duration in seconds\n * @async\n * @param src path to the audio file\n * @return {number} duration of the audio file in seconds\n * @see [Documentation](https://www.remotion.dev/docs/get-audio-duration-in-seconds)\n */\nconst getAudioDurationInSeconds = (src) => {\n    return limit(fn, src);\n};\nexports.getAudioDurationInSeconds = getAudioDurationInSeconds;\n/**\n * @deprecated Renamed to `getAudioDurationInSeconds`\n */\nconst getAudioDuration = (src) => (0, exports.getAudioDurationInSeconds)(src);\nexports.getAudioDuration = getAudioDuration;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvZ2V0LWF1ZGlvLWR1cmF0aW9uLWluLXNlY29uZHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCLEdBQUcsaUNBQWlDO0FBQzVEO0FBQ0EsbUNBQW1DLG1CQUFPLENBQUMsK0dBQTRCO0FBQ3ZFLGtCQUFrQixtQkFBTyxDQUFDLDZFQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxRUFBcUUsWUFBWTtBQUNqRixtREFBbUQsWUFBWTtBQUMvRCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVtb3Rpb24tY2FwdGlvbnMvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvZ2V0LWF1ZGlvLWR1cmF0aW9uLWluLXNlY29uZHMuanM/Y2MwMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0QXVkaW9EdXJhdGlvbiA9IGV4cG9ydHMuZ2V0QXVkaW9EdXJhdGlvbkluU2Vjb25kcyA9IHZvaWQgMDtcbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11c2UtYmVmb3JlLWRlZmluZSAqL1xuY29uc3QgbWVkaWFfdGFnX2Vycm9yX2hhbmRsaW5nXzEgPSByZXF1aXJlKFwiLi9tZWRpYS10YWctZXJyb3ItaGFuZGxpbmdcIik7XG5jb25zdCBwX2xpbWl0XzEgPSByZXF1aXJlKFwiLi9wLWxpbWl0XCIpO1xuY29uc3QgbGltaXQgPSAoMCwgcF9saW1pdF8xLnBMaW1pdCkoMyk7XG5jb25zdCBtZXRhZGF0YUNhY2hlID0ge307XG5jb25zdCBmbiA9IChzcmMpID0+IHtcbiAgICBpZiAobWV0YWRhdGFDYWNoZVtzcmNdKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUobWV0YWRhdGFDYWNoZVtzcmNdKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdnZXRBdWRpb0R1cmF0aW9uKCkgaXMgb25seSBhdmFpbGFibGUgaW4gdGhlIGJyb3dzZXIuJyk7XG4gICAgfVxuICAgIGNvbnN0IGF1ZGlvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYXVkaW8nKTtcbiAgICBhdWRpby5zcmMgPSBzcmM7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgY29uc3Qgb25FcnJvciA9ICgpID0+IHtcbiAgICAgICAgICAgICgwLCBtZWRpYV90YWdfZXJyb3JfaGFuZGxpbmdfMS5vbk1lZGlhRXJyb3IpKHtcbiAgICAgICAgICAgICAgICBlcnJvcjogYXVkaW8uZXJyb3IsXG4gICAgICAgICAgICAgICAgc3JjLFxuICAgICAgICAgICAgICAgIGNsZWFudXAsXG4gICAgICAgICAgICAgICAgcmVqZWN0LFxuICAgICAgICAgICAgICAgIGFwaTogJ2dldEF1ZGlvRHVyYXRpb25JblNlY29uZHMoKScsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3Qgb25Mb2FkZWRNZXRhZGF0YSA9ICgpID0+IHtcbiAgICAgICAgICAgIG1ldGFkYXRhQ2FjaGVbc3JjXSA9IGF1ZGlvLmR1cmF0aW9uO1xuICAgICAgICAgICAgcmVzb2x2ZShhdWRpby5kdXJhdGlvbik7XG4gICAgICAgICAgICBjbGVhbnVwKCk7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IGNsZWFudXAgPSAoKSA9PiB7XG4gICAgICAgICAgICBhdWRpby5yZW1vdmVFdmVudExpc3RlbmVyKCdsb2FkZWRtZXRhZGF0YScsIG9uTG9hZGVkTWV0YWRhdGEpO1xuICAgICAgICAgICAgYXVkaW8ucmVtb3ZlRXZlbnRMaXN0ZW5lcignZXJyb3InLCBvbkVycm9yKTtcbiAgICAgICAgICAgIGF1ZGlvLnJlbW92ZSgpO1xuICAgICAgICB9O1xuICAgICAgICBhdWRpby5hZGRFdmVudExpc3RlbmVyKCdsb2FkZWRtZXRhZGF0YScsIG9uTG9hZGVkTWV0YWRhdGEsIHsgb25jZTogdHJ1ZSB9KTtcbiAgICAgICAgYXVkaW8uYWRkRXZlbnRMaXN0ZW5lcignZXJyb3InLCBvbkVycm9yLCB7IG9uY2U6IHRydWUgfSk7XG4gICAgfSk7XG59O1xuLyoqXG4gKiBAZGVmYXVsdCBHZXQgdGhlIGF1ZGlvIGZpbGUgcGFzc2VkIGluIHBhcmFtZXRlciBkdXJhdGlvbiBpbiBzZWNvbmRzXG4gKiBAYXN5bmNcbiAqIEBwYXJhbSBzcmMgcGF0aCB0byB0aGUgYXVkaW8gZmlsZVxuICogQHJldHVybiB7bnVtYmVyfSBkdXJhdGlvbiBvZiB0aGUgYXVkaW8gZmlsZSBpbiBzZWNvbmRzXG4gKiBAc2VlIFtEb2N1bWVudGF0aW9uXShodHRwczovL3d3dy5yZW1vdGlvbi5kZXYvZG9jcy9nZXQtYXVkaW8tZHVyYXRpb24taW4tc2Vjb25kcylcbiAqL1xuY29uc3QgZ2V0QXVkaW9EdXJhdGlvbkluU2Vjb25kcyA9IChzcmMpID0+IHtcbiAgICByZXR1cm4gbGltaXQoZm4sIHNyYyk7XG59O1xuZXhwb3J0cy5nZXRBdWRpb0R1cmF0aW9uSW5TZWNvbmRzID0gZ2V0QXVkaW9EdXJhdGlvbkluU2Vjb25kcztcbi8qKlxuICogQGRlcHJlY2F0ZWQgUmVuYW1lZCB0byBgZ2V0QXVkaW9EdXJhdGlvbkluU2Vjb25kc2BcbiAqL1xuY29uc3QgZ2V0QXVkaW9EdXJhdGlvbiA9IChzcmMpID0+ICgwLCBleHBvcnRzLmdldEF1ZGlvRHVyYXRpb25JblNlY29uZHMpKHNyYyk7XG5leHBvcnRzLmdldEF1ZGlvRHVyYXRpb24gPSBnZXRBdWRpb0R1cmF0aW9uO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@remotion/media-utils/dist/get-audio-duration-in-seconds.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@remotion/media-utils/dist/get-image-dimensions.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@remotion/media-utils/dist/get-image-dimensions.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getImageDimensions = getImageDimensions;\nconst p_limit_1 = __webpack_require__(/*! ./p-limit */ \"(ssr)/./node_modules/@remotion/media-utils/dist/p-limit.js\");\nconst imageDimensionsCache = {};\nconst limit = (0, p_limit_1.pLimit)(3);\nconst fn = async (src) => {\n    if (imageDimensionsCache[src]) {\n        return imageDimensionsCache[src];\n    }\n    if (typeof document === 'undefined') {\n        throw new Error('getImageDimensions() is only available in the browser.');\n    }\n    const imageDimensions = await new Promise((resolved, reject) => {\n        const image = new Image();\n        image.onload = () => {\n            const { width, height } = image;\n            resolved({ width, height });\n        };\n        image.onerror = reject;\n        image.src = src;\n    });\n    imageDimensionsCache[src] = imageDimensions;\n    return imageDimensions;\n};\n/**\n * @description Takes an image src, retrieves the dimensions of an image.\n * @see [Documentation](https://www.remotion.dev/docs/get-image-dimensions)\n */\nfunction getImageDimensions(src) {\n    return limit(fn, src);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvZ2V0LWltYWdlLWRpbWVuc2lvbnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCO0FBQzFCLGtCQUFrQixtQkFBTyxDQUFDLDZFQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixnQkFBZ0I7QUFDcEMsdUJBQXVCLGVBQWU7QUFDdEM7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVtb3Rpb24tY2FwdGlvbnMvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvZ2V0LWltYWdlLWRpbWVuc2lvbnMuanM/MThjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0SW1hZ2VEaW1lbnNpb25zID0gZ2V0SW1hZ2VEaW1lbnNpb25zO1xuY29uc3QgcF9saW1pdF8xID0gcmVxdWlyZShcIi4vcC1saW1pdFwiKTtcbmNvbnN0IGltYWdlRGltZW5zaW9uc0NhY2hlID0ge307XG5jb25zdCBsaW1pdCA9ICgwLCBwX2xpbWl0XzEucExpbWl0KSgzKTtcbmNvbnN0IGZuID0gYXN5bmMgKHNyYykgPT4ge1xuICAgIGlmIChpbWFnZURpbWVuc2lvbnNDYWNoZVtzcmNdKSB7XG4gICAgICAgIHJldHVybiBpbWFnZURpbWVuc2lvbnNDYWNoZVtzcmNdO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2dldEltYWdlRGltZW5zaW9ucygpIGlzIG9ubHkgYXZhaWxhYmxlIGluIHRoZSBicm93c2VyLicpO1xuICAgIH1cbiAgICBjb25zdCBpbWFnZURpbWVuc2lvbnMgPSBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZWQsIHJlamVjdCkgPT4ge1xuICAgICAgICBjb25zdCBpbWFnZSA9IG5ldyBJbWFnZSgpO1xuICAgICAgICBpbWFnZS5vbmxvYWQgPSAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB7IHdpZHRoLCBoZWlnaHQgfSA9IGltYWdlO1xuICAgICAgICAgICAgcmVzb2x2ZWQoeyB3aWR0aCwgaGVpZ2h0IH0pO1xuICAgICAgICB9O1xuICAgICAgICBpbWFnZS5vbmVycm9yID0gcmVqZWN0O1xuICAgICAgICBpbWFnZS5zcmMgPSBzcmM7XG4gICAgfSk7XG4gICAgaW1hZ2VEaW1lbnNpb25zQ2FjaGVbc3JjXSA9IGltYWdlRGltZW5zaW9ucztcbiAgICByZXR1cm4gaW1hZ2VEaW1lbnNpb25zO1xufTtcbi8qKlxuICogQGRlc2NyaXB0aW9uIFRha2VzIGFuIGltYWdlIHNyYywgcmV0cmlldmVzIHRoZSBkaW1lbnNpb25zIG9mIGFuIGltYWdlLlxuICogQHNlZSBbRG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly93d3cucmVtb3Rpb24uZGV2L2RvY3MvZ2V0LWltYWdlLWRpbWVuc2lvbnMpXG4gKi9cbmZ1bmN0aW9uIGdldEltYWdlRGltZW5zaW9ucyhzcmMpIHtcbiAgICByZXR1cm4gbGltaXQoZm4sIHNyYyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@remotion/media-utils/dist/get-image-dimensions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@remotion/media-utils/dist/get-video-metadata.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@remotion/media-utils/dist/get-video-metadata.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getVideoMetadata = void 0;\n/* eslint-disable @typescript-eslint/no-use-before-define */\nconst is_remote_asset_1 = __webpack_require__(/*! ./is-remote-asset */ \"(ssr)/./node_modules/@remotion/media-utils/dist/is-remote-asset.js\");\nconst media_tag_error_handling_1 = __webpack_require__(/*! ./media-tag-error-handling */ \"(ssr)/./node_modules/@remotion/media-utils/dist/media-tag-error-handling.js\");\nconst p_limit_1 = __webpack_require__(/*! ./p-limit */ \"(ssr)/./node_modules/@remotion/media-utils/dist/p-limit.js\");\nconst cache = {};\nconst limit = (0, p_limit_1.pLimit)(3);\nconst fn = (src) => {\n    if (cache[src]) {\n        return Promise.resolve(cache[src]);\n    }\n    if (typeof document === 'undefined') {\n        throw new Error('getVideoMetadata() is only available in the browser.');\n    }\n    const video = document.createElement('video');\n    video.src = src;\n    return new Promise((resolve, reject) => {\n        const onError = () => {\n            (0, media_tag_error_handling_1.onMediaError)({\n                error: video.error,\n                src,\n                cleanup,\n                reject,\n                api: 'getVideoMetadata()',\n            });\n        };\n        const onLoadedMetadata = () => {\n            const pixels = video.videoHeight * video.videoWidth;\n            if (pixels === 0) {\n                reject(new Error(`Unable to determine video metadata for ${src}`));\n                return;\n            }\n            if (!Number.isFinite(video.duration)) {\n                reject(new Error(`Unable to determine video duration for ${src} - got Infinity. Re-encoding this video may fix this issue.`));\n                return;\n            }\n            const metadata = {\n                durationInSeconds: video.duration,\n                width: video.videoWidth,\n                height: video.videoHeight,\n                aspectRatio: video.videoWidth / video.videoHeight,\n                isRemote: (0, is_remote_asset_1.isRemoteAsset)(src),\n            };\n            resolve(metadata);\n            cache[src] = metadata;\n            cleanup();\n        };\n        const cleanup = () => {\n            video.removeEventListener('loadedmetadata', onLoadedMetadata);\n            video.removeEventListener('error', onError);\n            video.remove();\n        };\n        video.addEventListener('loadedmetadata', onLoadedMetadata, { once: true });\n        video.addEventListener('error', onError, { once: true });\n    });\n};\n/**\n * @description Takes a src to a video, loads it and returns metadata for the specified source.\n * @see [Documentation](https://www.remotion.dev/docs/get-video-metadata)\n */\nconst getVideoMetadata = (src) => {\n    return limit(fn, src);\n};\nexports.getVideoMetadata = getVideoMetadata;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvZ2V0LXZpZGVvLW1ldGFkYXRhLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4QjtBQUNBLDBCQUEwQixtQkFBTyxDQUFDLDZGQUFtQjtBQUNyRCxtQ0FBbUMsbUJBQU8sQ0FBQywrR0FBNEI7QUFDdkUsa0JBQWtCLG1CQUFPLENBQUMsNkVBQVc7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyRUFBMkUsSUFBSTtBQUMvRTtBQUNBO0FBQ0E7QUFDQSwyRUFBMkUsS0FBSztBQUNoRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxRUFBcUUsWUFBWTtBQUNqRixtREFBbUQsWUFBWTtBQUMvRCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiIsInNvdXJjZXMiOlsid2VicGFjazovL3JlbW90aW9uLWNhcHRpb25zLy4vbm9kZV9tb2R1bGVzL0ByZW1vdGlvbi9tZWRpYS11dGlscy9kaXN0L2dldC12aWRlby1tZXRhZGF0YS5qcz9lZmE1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRWaWRlb01ldGFkYXRhID0gdm9pZCAwO1xuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVzZS1iZWZvcmUtZGVmaW5lICovXG5jb25zdCBpc19yZW1vdGVfYXNzZXRfMSA9IHJlcXVpcmUoXCIuL2lzLXJlbW90ZS1hc3NldFwiKTtcbmNvbnN0IG1lZGlhX3RhZ19lcnJvcl9oYW5kbGluZ18xID0gcmVxdWlyZShcIi4vbWVkaWEtdGFnLWVycm9yLWhhbmRsaW5nXCIpO1xuY29uc3QgcF9saW1pdF8xID0gcmVxdWlyZShcIi4vcC1saW1pdFwiKTtcbmNvbnN0IGNhY2hlID0ge307XG5jb25zdCBsaW1pdCA9ICgwLCBwX2xpbWl0XzEucExpbWl0KSgzKTtcbmNvbnN0IGZuID0gKHNyYykgPT4ge1xuICAgIGlmIChjYWNoZVtzcmNdKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoY2FjaGVbc3JjXSk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignZ2V0VmlkZW9NZXRhZGF0YSgpIGlzIG9ubHkgYXZhaWxhYmxlIGluIHRoZSBicm93c2VyLicpO1xuICAgIH1cbiAgICBjb25zdCB2aWRlbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3ZpZGVvJyk7XG4gICAgdmlkZW8uc3JjID0gc3JjO1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGNvbnN0IG9uRXJyb3IgPSAoKSA9PiB7XG4gICAgICAgICAgICAoMCwgbWVkaWFfdGFnX2Vycm9yX2hhbmRsaW5nXzEub25NZWRpYUVycm9yKSh7XG4gICAgICAgICAgICAgICAgZXJyb3I6IHZpZGVvLmVycm9yLFxuICAgICAgICAgICAgICAgIHNyYyxcbiAgICAgICAgICAgICAgICBjbGVhbnVwLFxuICAgICAgICAgICAgICAgIHJlamVjdCxcbiAgICAgICAgICAgICAgICBhcGk6ICdnZXRWaWRlb01ldGFkYXRhKCknLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IG9uTG9hZGVkTWV0YWRhdGEgPSAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBwaXhlbHMgPSB2aWRlby52aWRlb0hlaWdodCAqIHZpZGVvLnZpZGVvV2lkdGg7XG4gICAgICAgICAgICBpZiAocGl4ZWxzID09PSAwKSB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihgVW5hYmxlIHRvIGRldGVybWluZSB2aWRlbyBtZXRhZGF0YSBmb3IgJHtzcmN9YCkpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghTnVtYmVyLmlzRmluaXRlKHZpZGVvLmR1cmF0aW9uKSkge1xuICAgICAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoYFVuYWJsZSB0byBkZXRlcm1pbmUgdmlkZW8gZHVyYXRpb24gZm9yICR7c3JjfSAtIGdvdCBJbmZpbml0eS4gUmUtZW5jb2RpbmcgdGhpcyB2aWRlbyBtYXkgZml4IHRoaXMgaXNzdWUuYCkpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IG1ldGFkYXRhID0ge1xuICAgICAgICAgICAgICAgIGR1cmF0aW9uSW5TZWNvbmRzOiB2aWRlby5kdXJhdGlvbixcbiAgICAgICAgICAgICAgICB3aWR0aDogdmlkZW8udmlkZW9XaWR0aCxcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IHZpZGVvLnZpZGVvSGVpZ2h0LFxuICAgICAgICAgICAgICAgIGFzcGVjdFJhdGlvOiB2aWRlby52aWRlb1dpZHRoIC8gdmlkZW8udmlkZW9IZWlnaHQsXG4gICAgICAgICAgICAgICAgaXNSZW1vdGU6ICgwLCBpc19yZW1vdGVfYXNzZXRfMS5pc1JlbW90ZUFzc2V0KShzcmMpLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJlc29sdmUobWV0YWRhdGEpO1xuICAgICAgICAgICAgY2FjaGVbc3JjXSA9IG1ldGFkYXRhO1xuICAgICAgICAgICAgY2xlYW51cCgpO1xuICAgICAgICB9O1xuICAgICAgICBjb25zdCBjbGVhbnVwID0gKCkgPT4ge1xuICAgICAgICAgICAgdmlkZW8ucmVtb3ZlRXZlbnRMaXN0ZW5lcignbG9hZGVkbWV0YWRhdGEnLCBvbkxvYWRlZE1ldGFkYXRhKTtcbiAgICAgICAgICAgIHZpZGVvLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgb25FcnJvcik7XG4gICAgICAgICAgICB2aWRlby5yZW1vdmUoKTtcbiAgICAgICAgfTtcbiAgICAgICAgdmlkZW8uYWRkRXZlbnRMaXN0ZW5lcignbG9hZGVkbWV0YWRhdGEnLCBvbkxvYWRlZE1ldGFkYXRhLCB7IG9uY2U6IHRydWUgfSk7XG4gICAgICAgIHZpZGVvLmFkZEV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgb25FcnJvciwgeyBvbmNlOiB0cnVlIH0pO1xuICAgIH0pO1xufTtcbi8qKlxuICogQGRlc2NyaXB0aW9uIFRha2VzIGEgc3JjIHRvIGEgdmlkZW8sIGxvYWRzIGl0IGFuZCByZXR1cm5zIG1ldGFkYXRhIGZvciB0aGUgc3BlY2lmaWVkIHNvdXJjZS5cbiAqIEBzZWUgW0RvY3VtZW50YXRpb25dKGh0dHBzOi8vd3d3LnJlbW90aW9uLmRldi9kb2NzL2dldC12aWRlby1tZXRhZGF0YSlcbiAqL1xuY29uc3QgZ2V0VmlkZW9NZXRhZGF0YSA9IChzcmMpID0+IHtcbiAgICByZXR1cm4gbGltaXQoZm4sIHNyYyk7XG59O1xuZXhwb3J0cy5nZXRWaWRlb01ldGFkYXRhID0gZ2V0VmlkZW9NZXRhZGF0YTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@remotion/media-utils/dist/get-video-metadata.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@remotion/media-utils/dist/get-wave-form-samples.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@remotion/media-utils/dist/get-wave-form-samples.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getWaveformSamples = void 0;\nconst filterData = (audioBuffer, samples) => {\n    const blockSize = Math.floor(audioBuffer.length / samples); // the number of samples in each subdivision\n    if (blockSize === 0) {\n        return [];\n    }\n    const filteredData = [];\n    for (let i = 0; i < samples; i++) {\n        const blockStart = blockSize * i; // the location of the first sample in the block\n        let sum = 0;\n        for (let j = 0; j < blockSize; j++) {\n            sum += Math.abs(audioBuffer[blockStart + j]); // find the sum of all the samples in the block\n        }\n        filteredData.push(sum / blockSize); // divide the sum by the block size to get the average\n    }\n    return filteredData;\n};\nconst normalizeData = (filteredData) => {\n    const multiplier = Math.max(...filteredData) ** -1;\n    return filteredData.map((n) => n * multiplier);\n};\nconst getWaveformSamples = (waveform, sampleAmount) => {\n    return normalizeData(filterData(waveform, sampleAmount));\n};\nexports.getWaveformSamples = getWaveformSamples;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvZ2V0LXdhdmUtZm9ybS1zYW1wbGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQjtBQUMxQjtBQUNBLGdFQUFnRTtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixhQUFhO0FBQ2pDLDBDQUEwQztBQUMxQztBQUNBLHdCQUF3QixlQUFlO0FBQ3ZDLDBEQUEwRDtBQUMxRDtBQUNBLDRDQUE0QztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiIsInNvdXJjZXMiOlsid2VicGFjazovL3JlbW90aW9uLWNhcHRpb25zLy4vbm9kZV9tb2R1bGVzL0ByZW1vdGlvbi9tZWRpYS11dGlscy9kaXN0L2dldC13YXZlLWZvcm0tc2FtcGxlcy5qcz8zMjIwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRXYXZlZm9ybVNhbXBsZXMgPSB2b2lkIDA7XG5jb25zdCBmaWx0ZXJEYXRhID0gKGF1ZGlvQnVmZmVyLCBzYW1wbGVzKSA9PiB7XG4gICAgY29uc3QgYmxvY2tTaXplID0gTWF0aC5mbG9vcihhdWRpb0J1ZmZlci5sZW5ndGggLyBzYW1wbGVzKTsgLy8gdGhlIG51bWJlciBvZiBzYW1wbGVzIGluIGVhY2ggc3ViZGl2aXNpb25cbiAgICBpZiAoYmxvY2tTaXplID09PSAwKSB7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICB9XG4gICAgY29uc3QgZmlsdGVyZWREYXRhID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzYW1wbGVzOyBpKyspIHtcbiAgICAgICAgY29uc3QgYmxvY2tTdGFydCA9IGJsb2NrU2l6ZSAqIGk7IC8vIHRoZSBsb2NhdGlvbiBvZiB0aGUgZmlyc3Qgc2FtcGxlIGluIHRoZSBibG9ja1xuICAgICAgICBsZXQgc3VtID0gMDtcbiAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBibG9ja1NpemU7IGorKykge1xuICAgICAgICAgICAgc3VtICs9IE1hdGguYWJzKGF1ZGlvQnVmZmVyW2Jsb2NrU3RhcnQgKyBqXSk7IC8vIGZpbmQgdGhlIHN1bSBvZiBhbGwgdGhlIHNhbXBsZXMgaW4gdGhlIGJsb2NrXG4gICAgICAgIH1cbiAgICAgICAgZmlsdGVyZWREYXRhLnB1c2goc3VtIC8gYmxvY2tTaXplKTsgLy8gZGl2aWRlIHRoZSBzdW0gYnkgdGhlIGJsb2NrIHNpemUgdG8gZ2V0IHRoZSBhdmVyYWdlXG4gICAgfVxuICAgIHJldHVybiBmaWx0ZXJlZERhdGE7XG59O1xuY29uc3Qgbm9ybWFsaXplRGF0YSA9IChmaWx0ZXJlZERhdGEpID0+IHtcbiAgICBjb25zdCBtdWx0aXBsaWVyID0gTWF0aC5tYXgoLi4uZmlsdGVyZWREYXRhKSAqKiAtMTtcbiAgICByZXR1cm4gZmlsdGVyZWREYXRhLm1hcCgobikgPT4gbiAqIG11bHRpcGxpZXIpO1xufTtcbmNvbnN0IGdldFdhdmVmb3JtU2FtcGxlcyA9ICh3YXZlZm9ybSwgc2FtcGxlQW1vdW50KSA9PiB7XG4gICAgcmV0dXJuIG5vcm1hbGl6ZURhdGEoZmlsdGVyRGF0YSh3YXZlZm9ybSwgc2FtcGxlQW1vdW50KSk7XG59O1xuZXhwb3J0cy5nZXRXYXZlZm9ybVNhbXBsZXMgPSBnZXRXYXZlZm9ybVNhbXBsZXM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@remotion/media-utils/dist/get-wave-form-samples.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@remotion/media-utils/dist/get-waveform-portion.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@remotion/media-utils/dist/get-waveform-portion.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getWaveformPortion = void 0;\nconst get_wave_form_samples_1 = __webpack_require__(/*! ./get-wave-form-samples */ \"(ssr)/./node_modules/@remotion/media-utils/dist/get-wave-form-samples.js\");\n/**\n * @description Takes bulky waveform data (for example fetched by getAudioData()) and returns a trimmed and simplified version of it, for simpler visualization\n * @see [Documentation](https://www.remotion.dev/docs/get-waveform-portion)\n */\nconst getWaveformPortion = ({ audioData, startTimeInSeconds, durationInSeconds, numberOfSamples, }) => {\n    const startSample = Math.floor((startTimeInSeconds / audioData.durationInSeconds) *\n        audioData.channelWaveforms[0].length);\n    const endSample = Math.floor(((startTimeInSeconds + durationInSeconds) / audioData.durationInSeconds) *\n        audioData.channelWaveforms[0].length);\n    return (0, get_wave_form_samples_1.getWaveformSamples)(audioData.channelWaveforms[0].slice(startSample, endSample), numberOfSamples).map((w, i) => {\n        return {\n            index: i,\n            amplitude: w,\n        };\n    });\n};\nexports.getWaveformPortion = getWaveformPortion;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvZ2V0LXdhdmVmb3JtLXBvcnRpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCO0FBQzFCLGdDQUFnQyxtQkFBTyxDQUFDLHlHQUF5QjtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixvRUFBb0U7QUFDbEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsMEJBQTBCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVtb3Rpb24tY2FwdGlvbnMvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvZ2V0LXdhdmVmb3JtLXBvcnRpb24uanM/OTY2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0V2F2ZWZvcm1Qb3J0aW9uID0gdm9pZCAwO1xuY29uc3QgZ2V0X3dhdmVfZm9ybV9zYW1wbGVzXzEgPSByZXF1aXJlKFwiLi9nZXQtd2F2ZS1mb3JtLXNhbXBsZXNcIik7XG4vKipcbiAqIEBkZXNjcmlwdGlvbiBUYWtlcyBidWxreSB3YXZlZm9ybSBkYXRhIChmb3IgZXhhbXBsZSBmZXRjaGVkIGJ5IGdldEF1ZGlvRGF0YSgpKSBhbmQgcmV0dXJucyBhIHRyaW1tZWQgYW5kIHNpbXBsaWZpZWQgdmVyc2lvbiBvZiBpdCwgZm9yIHNpbXBsZXIgdmlzdWFsaXphdGlvblxuICogQHNlZSBbRG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly93d3cucmVtb3Rpb24uZGV2L2RvY3MvZ2V0LXdhdmVmb3JtLXBvcnRpb24pXG4gKi9cbmNvbnN0IGdldFdhdmVmb3JtUG9ydGlvbiA9ICh7IGF1ZGlvRGF0YSwgc3RhcnRUaW1lSW5TZWNvbmRzLCBkdXJhdGlvbkluU2Vjb25kcywgbnVtYmVyT2ZTYW1wbGVzLCB9KSA9PiB7XG4gICAgY29uc3Qgc3RhcnRTYW1wbGUgPSBNYXRoLmZsb29yKChzdGFydFRpbWVJblNlY29uZHMgLyBhdWRpb0RhdGEuZHVyYXRpb25JblNlY29uZHMpICpcbiAgICAgICAgYXVkaW9EYXRhLmNoYW5uZWxXYXZlZm9ybXNbMF0ubGVuZ3RoKTtcbiAgICBjb25zdCBlbmRTYW1wbGUgPSBNYXRoLmZsb29yKCgoc3RhcnRUaW1lSW5TZWNvbmRzICsgZHVyYXRpb25JblNlY29uZHMpIC8gYXVkaW9EYXRhLmR1cmF0aW9uSW5TZWNvbmRzKSAqXG4gICAgICAgIGF1ZGlvRGF0YS5jaGFubmVsV2F2ZWZvcm1zWzBdLmxlbmd0aCk7XG4gICAgcmV0dXJuICgwLCBnZXRfd2F2ZV9mb3JtX3NhbXBsZXNfMS5nZXRXYXZlZm9ybVNhbXBsZXMpKGF1ZGlvRGF0YS5jaGFubmVsV2F2ZWZvcm1zWzBdLnNsaWNlKHN0YXJ0U2FtcGxlLCBlbmRTYW1wbGUpLCBudW1iZXJPZlNhbXBsZXMpLm1hcCgodywgaSkgPT4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaW5kZXg6IGksXG4gICAgICAgICAgICBhbXBsaXR1ZGU6IHcsXG4gICAgICAgIH07XG4gICAgfSk7XG59O1xuZXhwb3J0cy5nZXRXYXZlZm9ybVBvcnRpb24gPSBnZXRXYXZlZm9ybVBvcnRpb247XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@remotion/media-utils/dist/get-waveform-portion.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@remotion/media-utils/dist/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@remotion/media-utils/dist/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.visualizeAudio = exports.useAudioData = exports.getWaveformPortion = exports.getVideoMetadata = exports.getImageDimensions = exports.getAudioDurationInSeconds = exports.getAudioDuration = exports.getAudioData = exports.audioBufferToDataUrl = void 0;\nvar audio_url_helpers_1 = __webpack_require__(/*! ./audio-buffer/audio-url-helpers */ \"(ssr)/./node_modules/@remotion/media-utils/dist/audio-buffer/audio-url-helpers.js\");\nObject.defineProperty(exports, \"audioBufferToDataUrl\", ({ enumerable: true, get: function () { return audio_url_helpers_1.audioBufferToDataUrl; } }));\nvar get_audio_data_1 = __webpack_require__(/*! ./get-audio-data */ \"(ssr)/./node_modules/@remotion/media-utils/dist/get-audio-data.js\");\nObject.defineProperty(exports, \"getAudioData\", ({ enumerable: true, get: function () { return get_audio_data_1.getAudioData; } }));\nvar get_audio_duration_in_seconds_1 = __webpack_require__(/*! ./get-audio-duration-in-seconds */ \"(ssr)/./node_modules/@remotion/media-utils/dist/get-audio-duration-in-seconds.js\");\nObject.defineProperty(exports, \"getAudioDuration\", ({ enumerable: true, get: function () { return get_audio_duration_in_seconds_1.getAudioDuration; } }));\nObject.defineProperty(exports, \"getAudioDurationInSeconds\", ({ enumerable: true, get: function () { return get_audio_duration_in_seconds_1.getAudioDurationInSeconds; } }));\nvar get_image_dimensions_1 = __webpack_require__(/*! ./get-image-dimensions */ \"(ssr)/./node_modules/@remotion/media-utils/dist/get-image-dimensions.js\");\nObject.defineProperty(exports, \"getImageDimensions\", ({ enumerable: true, get: function () { return get_image_dimensions_1.getImageDimensions; } }));\nvar get_video_metadata_1 = __webpack_require__(/*! ./get-video-metadata */ \"(ssr)/./node_modules/@remotion/media-utils/dist/get-video-metadata.js\");\nObject.defineProperty(exports, \"getVideoMetadata\", ({ enumerable: true, get: function () { return get_video_metadata_1.getVideoMetadata; } }));\nvar get_waveform_portion_1 = __webpack_require__(/*! ./get-waveform-portion */ \"(ssr)/./node_modules/@remotion/media-utils/dist/get-waveform-portion.js\");\nObject.defineProperty(exports, \"getWaveformPortion\", ({ enumerable: true, get: function () { return get_waveform_portion_1.getWaveformPortion; } }));\n__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@remotion/media-utils/dist/types.js\"), exports);\nvar use_audio_data_1 = __webpack_require__(/*! ./use-audio-data */ \"(ssr)/./node_modules/@remotion/media-utils/dist/use-audio-data.js\");\nObject.defineProperty(exports, \"useAudioData\", ({ enumerable: true, get: function () { return use_audio_data_1.useAudioData; } }));\nvar visualize_audio_1 = __webpack_require__(/*! ./visualize-audio */ \"(ssr)/./node_modules/@remotion/media-utils/dist/visualize-audio.js\");\nObject.defineProperty(exports, \"visualizeAudio\", ({ enumerable: true, get: function () { return visualize_audio_1.visualizeAudio; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCLEdBQUcsb0JBQW9CLEdBQUcsMEJBQTBCLEdBQUcsd0JBQXdCLEdBQUcsMEJBQTBCLEdBQUcsaUNBQWlDLEdBQUcsd0JBQXdCLEdBQUcsb0JBQW9CLEdBQUcsNEJBQTRCO0FBQ3ZQLDBCQUEwQixtQkFBTyxDQUFDLDJIQUFrQztBQUNwRSx3REFBdUQsRUFBRSxxQ0FBcUMsb0RBQW9ELEVBQUM7QUFDbkosdUJBQXVCLG1CQUFPLENBQUMsMkZBQWtCO0FBQ2pELGdEQUErQyxFQUFFLHFDQUFxQyx5Q0FBeUMsRUFBQztBQUNoSSxzQ0FBc0MsbUJBQU8sQ0FBQyx5SEFBaUM7QUFDL0Usb0RBQW1ELEVBQUUscUNBQXFDLDREQUE0RCxFQUFDO0FBQ3ZKLDZEQUE0RCxFQUFFLHFDQUFxQyxxRUFBcUUsRUFBQztBQUN6Syw2QkFBNkIsbUJBQU8sQ0FBQyx1R0FBd0I7QUFDN0Qsc0RBQXFELEVBQUUscUNBQXFDLHFEQUFxRCxFQUFDO0FBQ2xKLDJCQUEyQixtQkFBTyxDQUFDLG1HQUFzQjtBQUN6RCxvREFBbUQsRUFBRSxxQ0FBcUMsaURBQWlELEVBQUM7QUFDNUksNkJBQTZCLG1CQUFPLENBQUMsdUdBQXdCO0FBQzdELHNEQUFxRCxFQUFFLHFDQUFxQyxxREFBcUQsRUFBQztBQUNsSixhQUFhLG1CQUFPLENBQUMseUVBQVM7QUFDOUIsdUJBQXVCLG1CQUFPLENBQUMsMkZBQWtCO0FBQ2pELGdEQUErQyxFQUFFLHFDQUFxQyx5Q0FBeUMsRUFBQztBQUNoSSx3QkFBd0IsbUJBQU8sQ0FBQyw2RkFBbUI7QUFDbkQsa0RBQWlELEVBQUUscUNBQXFDLDRDQUE0QyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVtb3Rpb24tY2FwdGlvbnMvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvaW5kZXguanM/OWVhNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy52aXN1YWxpemVBdWRpbyA9IGV4cG9ydHMudXNlQXVkaW9EYXRhID0gZXhwb3J0cy5nZXRXYXZlZm9ybVBvcnRpb24gPSBleHBvcnRzLmdldFZpZGVvTWV0YWRhdGEgPSBleHBvcnRzLmdldEltYWdlRGltZW5zaW9ucyA9IGV4cG9ydHMuZ2V0QXVkaW9EdXJhdGlvbkluU2Vjb25kcyA9IGV4cG9ydHMuZ2V0QXVkaW9EdXJhdGlvbiA9IGV4cG9ydHMuZ2V0QXVkaW9EYXRhID0gZXhwb3J0cy5hdWRpb0J1ZmZlclRvRGF0YVVybCA9IHZvaWQgMDtcbnZhciBhdWRpb191cmxfaGVscGVyc18xID0gcmVxdWlyZShcIi4vYXVkaW8tYnVmZmVyL2F1ZGlvLXVybC1oZWxwZXJzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiYXVkaW9CdWZmZXJUb0RhdGFVcmxcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGF1ZGlvX3VybF9oZWxwZXJzXzEuYXVkaW9CdWZmZXJUb0RhdGFVcmw7IH0gfSk7XG52YXIgZ2V0X2F1ZGlvX2RhdGFfMSA9IHJlcXVpcmUoXCIuL2dldC1hdWRpby1kYXRhXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZ2V0QXVkaW9EYXRhXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBnZXRfYXVkaW9fZGF0YV8xLmdldEF1ZGlvRGF0YTsgfSB9KTtcbnZhciBnZXRfYXVkaW9fZHVyYXRpb25faW5fc2Vjb25kc18xID0gcmVxdWlyZShcIi4vZ2V0LWF1ZGlvLWR1cmF0aW9uLWluLXNlY29uZHNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJnZXRBdWRpb0R1cmF0aW9uXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBnZXRfYXVkaW9fZHVyYXRpb25faW5fc2Vjb25kc18xLmdldEF1ZGlvRHVyYXRpb247IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJnZXRBdWRpb0R1cmF0aW9uSW5TZWNvbmRzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBnZXRfYXVkaW9fZHVyYXRpb25faW5fc2Vjb25kc18xLmdldEF1ZGlvRHVyYXRpb25JblNlY29uZHM7IH0gfSk7XG52YXIgZ2V0X2ltYWdlX2RpbWVuc2lvbnNfMSA9IHJlcXVpcmUoXCIuL2dldC1pbWFnZS1kaW1lbnNpb25zXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZ2V0SW1hZ2VEaW1lbnNpb25zXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBnZXRfaW1hZ2VfZGltZW5zaW9uc18xLmdldEltYWdlRGltZW5zaW9uczsgfSB9KTtcbnZhciBnZXRfdmlkZW9fbWV0YWRhdGFfMSA9IHJlcXVpcmUoXCIuL2dldC12aWRlby1tZXRhZGF0YVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImdldFZpZGVvTWV0YWRhdGFcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdldF92aWRlb19tZXRhZGF0YV8xLmdldFZpZGVvTWV0YWRhdGE7IH0gfSk7XG52YXIgZ2V0X3dhdmVmb3JtX3BvcnRpb25fMSA9IHJlcXVpcmUoXCIuL2dldC13YXZlZm9ybS1wb3J0aW9uXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZ2V0V2F2ZWZvcm1Qb3J0aW9uXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBnZXRfd2F2ZWZvcm1fcG9ydGlvbl8xLmdldFdhdmVmb3JtUG9ydGlvbjsgfSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlc1wiKSwgZXhwb3J0cyk7XG52YXIgdXNlX2F1ZGlvX2RhdGFfMSA9IHJlcXVpcmUoXCIuL3VzZS1hdWRpby1kYXRhXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwidXNlQXVkaW9EYXRhXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB1c2VfYXVkaW9fZGF0YV8xLnVzZUF1ZGlvRGF0YTsgfSB9KTtcbnZhciB2aXN1YWxpemVfYXVkaW9fMSA9IHJlcXVpcmUoXCIuL3Zpc3VhbGl6ZS1hdWRpb1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInZpc3VhbGl6ZUF1ZGlvXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB2aXN1YWxpemVfYXVkaW9fMS52aXN1YWxpemVBdWRpbzsgfSB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@remotion/media-utils/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@remotion/media-utils/dist/is-remote-asset.js":
/*!********************************************************************!*\
  !*** ./node_modules/@remotion/media-utils/dist/is-remote-asset.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isRemoteAsset = void 0;\nconst isRemoteAsset = (asset) => !asset.startsWith(window.origin) && !asset.startsWith('data');\nexports.isRemoteAsset = isRemoteAsset;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvaXMtcmVtb3RlLWFzc2V0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQjtBQUNBLHFCQUFxQiIsInNvdXJjZXMiOlsid2VicGFjazovL3JlbW90aW9uLWNhcHRpb25zLy4vbm9kZV9tb2R1bGVzL0ByZW1vdGlvbi9tZWRpYS11dGlscy9kaXN0L2lzLXJlbW90ZS1hc3NldC5qcz8yZTJhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc1JlbW90ZUFzc2V0ID0gdm9pZCAwO1xuY29uc3QgaXNSZW1vdGVBc3NldCA9IChhc3NldCkgPT4gIWFzc2V0LnN0YXJ0c1dpdGgod2luZG93Lm9yaWdpbikgJiYgIWFzc2V0LnN0YXJ0c1dpdGgoJ2RhdGEnKTtcbmV4cG9ydHMuaXNSZW1vdGVBc3NldCA9IGlzUmVtb3RlQXNzZXQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@remotion/media-utils/dist/is-remote-asset.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@remotion/media-utils/dist/media-tag-error-handling.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@remotion/media-utils/dist/media-tag-error-handling.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.onMediaError = void 0;\nasync function fetchWithTimeout(url, options, timeout = 3000) {\n    const controller = new AbortController();\n    const id = setTimeout(() => controller.abort(), timeout);\n    options.signal = controller.signal;\n    try {\n        const response = await fetch(url, options);\n        clearTimeout(id);\n        return response;\n    }\n    catch (e) {\n        clearTimeout(id);\n        throw new Error(`Fetch timed out after ${timeout}ms`);\n    }\n}\nconst checkFor404 = (src) => {\n    return fetchWithTimeout(src, {\n        method: 'HEAD',\n        mode: 'no-cors',\n    }).then((res) => res.status);\n};\nconst checkFor404OrSkip = async ({ suspecting404, sameOrigin, src, }) => {\n    if (!suspecting404) {\n        return Promise.resolve(null);\n    }\n    if (!sameOrigin) {\n        return Promise.resolve(null);\n    }\n    try {\n        return await checkFor404(src);\n    }\n    catch (e) {\n        return Promise.resolve(null);\n    }\n};\nconst onMediaError = ({ error, src, reject, cleanup, api, }) => {\n    const suspecting404 = error.MEDIA_ERR_SRC_NOT_SUPPORTED === error.code;\n    const isSrcSameOriginAsCurrent = new URL(src, window.location.origin)\n        .toString()\n        .startsWith(window.location.origin);\n    checkFor404OrSkip({\n        suspecting404,\n        sameOrigin: isSrcSameOriginAsCurrent,\n        src,\n    })\n        .then((status) => {\n        const err = status === 404\n            ? new Error([\n                `Failed to execute ${api}: Received a 404 error loading \"${src}\".`,\n                'Correct the URL of the file.',\n            ].join(' '))\n            : new Error([\n                `Failed to execute ${api}, Received a MediaError loading \"${src}\".`,\n                status === null\n                    ? null\n                    : `HTTP Status code of the file: ${status}.`,\n                error.message\n                    ? `Browser error message: ${error.message}`\n                    : null,\n                'Check the path of the file and if it is a valid video.',\n            ]\n                .filter(Boolean)\n                .join(' '));\n        reject(err);\n        cleanup();\n    })\n        .catch((e) => {\n        reject(e);\n        cleanup();\n    });\n};\nexports.onMediaError = onMediaError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvbWVkaWEtdGFnLWVycm9yLWhhbmRsaW5nLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELFFBQVE7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsbUNBQW1DLGlDQUFpQztBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixtQ0FBbUM7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsSUFBSSxrQ0FBa0MsSUFBSTtBQUMvRTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsSUFBSSxtQ0FBbUMsSUFBSTtBQUNoRjtBQUNBO0FBQ0EsdURBQXVELE9BQU87QUFDOUQ7QUFDQSxnREFBZ0QsY0FBYztBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxvQkFBb0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZW1vdGlvbi1jYXB0aW9ucy8uL25vZGVfbW9kdWxlcy9AcmVtb3Rpb24vbWVkaWEtdXRpbHMvZGlzdC9tZWRpYS10YWctZXJyb3ItaGFuZGxpbmcuanM/NjZhNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMub25NZWRpYUVycm9yID0gdm9pZCAwO1xuYXN5bmMgZnVuY3Rpb24gZmV0Y2hXaXRoVGltZW91dCh1cmwsIG9wdGlvbnMsIHRpbWVvdXQgPSAzMDAwKSB7XG4gICAgY29uc3QgY29udHJvbGxlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcbiAgICBjb25zdCBpZCA9IHNldFRpbWVvdXQoKCkgPT4gY29udHJvbGxlci5hYm9ydCgpLCB0aW1lb3V0KTtcbiAgICBvcHRpb25zLnNpZ25hbCA9IGNvbnRyb2xsZXIuc2lnbmFsO1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCBvcHRpb25zKTtcbiAgICAgICAgY2xlYXJUaW1lb3V0KGlkKTtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBjbGVhclRpbWVvdXQoaWQpO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEZldGNoIHRpbWVkIG91dCBhZnRlciAke3RpbWVvdXR9bXNgKTtcbiAgICB9XG59XG5jb25zdCBjaGVja0ZvcjQwNCA9IChzcmMpID0+IHtcbiAgICByZXR1cm4gZmV0Y2hXaXRoVGltZW91dChzcmMsIHtcbiAgICAgICAgbWV0aG9kOiAnSEVBRCcsXG4gICAgICAgIG1vZGU6ICduby1jb3JzJyxcbiAgICB9KS50aGVuKChyZXMpID0+IHJlcy5zdGF0dXMpO1xufTtcbmNvbnN0IGNoZWNrRm9yNDA0T3JTa2lwID0gYXN5bmMgKHsgc3VzcGVjdGluZzQwNCwgc2FtZU9yaWdpbiwgc3JjLCB9KSA9PiB7XG4gICAgaWYgKCFzdXNwZWN0aW5nNDA0KSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUobnVsbCk7XG4gICAgfVxuICAgIGlmICghc2FtZU9yaWdpbikge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG51bGwpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gYXdhaXQgY2hlY2tGb3I0MDQoc3JjKTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShudWxsKTtcbiAgICB9XG59O1xuY29uc3Qgb25NZWRpYUVycm9yID0gKHsgZXJyb3IsIHNyYywgcmVqZWN0LCBjbGVhbnVwLCBhcGksIH0pID0+IHtcbiAgICBjb25zdCBzdXNwZWN0aW5nNDA0ID0gZXJyb3IuTUVESUFfRVJSX1NSQ19OT1RfU1VQUE9SVEVEID09PSBlcnJvci5jb2RlO1xuICAgIGNvbnN0IGlzU3JjU2FtZU9yaWdpbkFzQ3VycmVudCA9IG5ldyBVUkwoc3JjLCB3aW5kb3cubG9jYXRpb24ub3JpZ2luKVxuICAgICAgICAudG9TdHJpbmcoKVxuICAgICAgICAuc3RhcnRzV2l0aCh3aW5kb3cubG9jYXRpb24ub3JpZ2luKTtcbiAgICBjaGVja0ZvcjQwNE9yU2tpcCh7XG4gICAgICAgIHN1c3BlY3Rpbmc0MDQsXG4gICAgICAgIHNhbWVPcmlnaW46IGlzU3JjU2FtZU9yaWdpbkFzQ3VycmVudCxcbiAgICAgICAgc3JjLFxuICAgIH0pXG4gICAgICAgIC50aGVuKChzdGF0dXMpID0+IHtcbiAgICAgICAgY29uc3QgZXJyID0gc3RhdHVzID09PSA0MDRcbiAgICAgICAgICAgID8gbmV3IEVycm9yKFtcbiAgICAgICAgICAgICAgICBgRmFpbGVkIHRvIGV4ZWN1dGUgJHthcGl9OiBSZWNlaXZlZCBhIDQwNCBlcnJvciBsb2FkaW5nIFwiJHtzcmN9XCIuYCxcbiAgICAgICAgICAgICAgICAnQ29ycmVjdCB0aGUgVVJMIG9mIHRoZSBmaWxlLicsXG4gICAgICAgICAgICBdLmpvaW4oJyAnKSlcbiAgICAgICAgICAgIDogbmV3IEVycm9yKFtcbiAgICAgICAgICAgICAgICBgRmFpbGVkIHRvIGV4ZWN1dGUgJHthcGl9LCBSZWNlaXZlZCBhIE1lZGlhRXJyb3IgbG9hZGluZyBcIiR7c3JjfVwiLmAsXG4gICAgICAgICAgICAgICAgc3RhdHVzID09PSBudWxsXG4gICAgICAgICAgICAgICAgICAgID8gbnVsbFxuICAgICAgICAgICAgICAgICAgICA6IGBIVFRQIFN0YXR1cyBjb2RlIG9mIHRoZSBmaWxlOiAke3N0YXR1c30uYCxcbiAgICAgICAgICAgICAgICBlcnJvci5tZXNzYWdlXG4gICAgICAgICAgICAgICAgICAgID8gYEJyb3dzZXIgZXJyb3IgbWVzc2FnZTogJHtlcnJvci5tZXNzYWdlfWBcbiAgICAgICAgICAgICAgICAgICAgOiBudWxsLFxuICAgICAgICAgICAgICAgICdDaGVjayB0aGUgcGF0aCBvZiB0aGUgZmlsZSBhbmQgaWYgaXQgaXMgYSB2YWxpZCB2aWRlby4nLFxuICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgIC5maWx0ZXIoQm9vbGVhbilcbiAgICAgICAgICAgICAgICAuam9pbignICcpKTtcbiAgICAgICAgcmVqZWN0KGVycik7XG4gICAgICAgIGNsZWFudXAoKTtcbiAgICB9KVxuICAgICAgICAuY2F0Y2goKGUpID0+IHtcbiAgICAgICAgcmVqZWN0KGUpO1xuICAgICAgICBjbGVhbnVwKCk7XG4gICAgfSk7XG59O1xuZXhwb3J0cy5vbk1lZGlhRXJyb3IgPSBvbk1lZGlhRXJyb3I7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@remotion/media-utils/dist/media-tag-error-handling.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@remotion/media-utils/dist/p-limit.js":
/*!************************************************************!*\
  !*** ./node_modules/@remotion/media-utils/dist/p-limit.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.pLimit = void 0;\nconst pLimit = (concurrency) => {\n    const queue = [];\n    let activeCount = 0;\n    const next = () => {\n        var _a;\n        activeCount--;\n        if (queue.length > 0) {\n            (_a = queue.shift()) === null || _a === void 0 ? void 0 : _a();\n        }\n    };\n    const run = async (fn, resolve, ...args) => {\n        activeCount++;\n        // eslint-disable-next-line require-await\n        const result = (async () => fn(...args))();\n        resolve(result);\n        try {\n            await result;\n        }\n        catch (_a) { }\n        next();\n    };\n    const enqueue = (fn, resolve, ...args) => {\n        queue.push(() => run(fn, resolve, ...args));\n        (async () => {\n            var _a;\n            // This function needs to wait until the next microtask before comparing\n            // `activeCount` to `concurrency`, because `activeCount` is updated asynchronously\n            // when the run function is dequeued and called. The comparison in the if-statement\n            // needs to happen asynchronously as well to get an up-to-date value for `activeCount`.\n            await Promise.resolve();\n            if (activeCount < concurrency && queue.length > 0) {\n                (_a = queue.shift()) === null || _a === void 0 ? void 0 : _a();\n            }\n        })();\n    };\n    const generator = (fn, ...args) => new Promise((resolve) => {\n        enqueue(fn, resolve, ...args);\n    });\n    Object.defineProperties(generator, {\n        activeCount: {\n            get: () => activeCount,\n        },\n        pendingCount: {\n            get: () => queue.length,\n        },\n        clearQueue: {\n            value: () => {\n                queue.length = 0;\n            },\n        },\n    });\n    return generator;\n};\nexports.pLimit = pLimit;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvcC1saW1pdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0EsY0FBYyIsInNvdXJjZXMiOlsid2VicGFjazovL3JlbW90aW9uLWNhcHRpb25zLy4vbm9kZV9tb2R1bGVzL0ByZW1vdGlvbi9tZWRpYS11dGlscy9kaXN0L3AtbGltaXQuanM/MjlhYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucExpbWl0ID0gdm9pZCAwO1xuY29uc3QgcExpbWl0ID0gKGNvbmN1cnJlbmN5KSA9PiB7XG4gICAgY29uc3QgcXVldWUgPSBbXTtcbiAgICBsZXQgYWN0aXZlQ291bnQgPSAwO1xuICAgIGNvbnN0IG5leHQgPSAoKSA9PiB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgYWN0aXZlQ291bnQtLTtcbiAgICAgICAgaWYgKHF1ZXVlLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIChfYSA9IHF1ZXVlLnNoaWZ0KCkpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYSgpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBjb25zdCBydW4gPSBhc3luYyAoZm4sIHJlc29sdmUsIC4uLmFyZ3MpID0+IHtcbiAgICAgICAgYWN0aXZlQ291bnQrKztcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlcXVpcmUtYXdhaXRcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gKGFzeW5jICgpID0+IGZuKC4uLmFyZ3MpKSgpO1xuICAgICAgICByZXNvbHZlKHJlc3VsdCk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBhd2FpdCByZXN1bHQ7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKF9hKSB7IH1cbiAgICAgICAgbmV4dCgpO1xuICAgIH07XG4gICAgY29uc3QgZW5xdWV1ZSA9IChmbiwgcmVzb2x2ZSwgLi4uYXJncykgPT4ge1xuICAgICAgICBxdWV1ZS5wdXNoKCgpID0+IHJ1bihmbiwgcmVzb2x2ZSwgLi4uYXJncykpO1xuICAgICAgICAoYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgLy8gVGhpcyBmdW5jdGlvbiBuZWVkcyB0byB3YWl0IHVudGlsIHRoZSBuZXh0IG1pY3JvdGFzayBiZWZvcmUgY29tcGFyaW5nXG4gICAgICAgICAgICAvLyBgYWN0aXZlQ291bnRgIHRvIGBjb25jdXJyZW5jeWAsIGJlY2F1c2UgYGFjdGl2ZUNvdW50YCBpcyB1cGRhdGVkIGFzeW5jaHJvbm91c2x5XG4gICAgICAgICAgICAvLyB3aGVuIHRoZSBydW4gZnVuY3Rpb24gaXMgZGVxdWV1ZWQgYW5kIGNhbGxlZC4gVGhlIGNvbXBhcmlzb24gaW4gdGhlIGlmLXN0YXRlbWVudFxuICAgICAgICAgICAgLy8gbmVlZHMgdG8gaGFwcGVuIGFzeW5jaHJvbm91c2x5IGFzIHdlbGwgdG8gZ2V0IGFuIHVwLXRvLWRhdGUgdmFsdWUgZm9yIGBhY3RpdmVDb3VudGAuXG4gICAgICAgICAgICBhd2FpdCBQcm9taXNlLnJlc29sdmUoKTtcbiAgICAgICAgICAgIGlmIChhY3RpdmVDb3VudCA8IGNvbmN1cnJlbmN5ICYmIHF1ZXVlLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAoX2EgPSBxdWV1ZS5zaGlmdCgpKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSkoKTtcbiAgICB9O1xuICAgIGNvbnN0IGdlbmVyYXRvciA9IChmbiwgLi4uYXJncykgPT4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgZW5xdWV1ZShmbiwgcmVzb2x2ZSwgLi4uYXJncyk7XG4gICAgfSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZ2VuZXJhdG9yLCB7XG4gICAgICAgIGFjdGl2ZUNvdW50OiB7XG4gICAgICAgICAgICBnZXQ6ICgpID0+IGFjdGl2ZUNvdW50LFxuICAgICAgICB9LFxuICAgICAgICBwZW5kaW5nQ291bnQ6IHtcbiAgICAgICAgICAgIGdldDogKCkgPT4gcXVldWUubGVuZ3RoLFxuICAgICAgICB9LFxuICAgICAgICBjbGVhclF1ZXVlOiB7XG4gICAgICAgICAgICB2YWx1ZTogKCkgPT4ge1xuICAgICAgICAgICAgICAgIHF1ZXVlLmxlbmd0aCA9IDA7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgIH0pO1xuICAgIHJldHVybiBnZW5lcmF0b3I7XG59O1xuZXhwb3J0cy5wTGltaXQgPSBwTGltaXQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@remotion/media-utils/dist/p-limit.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@remotion/media-utils/dist/types.js":
/*!**********************************************************!*\
  !*** ./node_modules/@remotion/media-utils/dist/types.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvdHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZW1vdGlvbi1jYXB0aW9ucy8uL25vZGVfbW9kdWxlcy9AcmVtb3Rpb24vbWVkaWEtdXRpbHMvZGlzdC90eXBlcy5qcz9iMDk5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@remotion/media-utils/dist/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@remotion/media-utils/dist/use-audio-data.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@remotion/media-utils/dist/use-audio-data.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useAudioData = void 0;\nconst react_1 = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nconst remotion_1 = __webpack_require__(/*! remotion */ \"(ssr)/./node_modules/remotion/dist/esm/index.mjs\");\nconst get_audio_data_1 = __webpack_require__(/*! ./get-audio-data */ \"(ssr)/./node_modules/@remotion/media-utils/dist/get-audio-data.js\");\n/**\n * @description Wraps the getAudioData() function into a hook and does 3 things:\n * @description Keeps the audio data in a state\n * @description Wraps the function in a delayRender() / continueRender() pattern.\n * @description Handles the case where the component gets unmounted while the fetching is in progress and a React error is thrown.\n * @see [Documentation](https://www.remotion.dev/docs/use-audio-data)\n */\nconst useAudioData = (src) => {\n    if (!src) {\n        throw new TypeError(\"useAudioData requires a 'src' parameter\");\n    }\n    const mountState = (0, react_1.useRef)({ isMounted: true });\n    (0, react_1.useEffect)(() => {\n        const { current } = mountState;\n        current.isMounted = true;\n        return () => {\n            current.isMounted = false;\n        };\n    }, []);\n    const [metadata, setMetadata] = (0, react_1.useState)(null);\n    const fetchMetadata = (0, react_1.useCallback)(async () => {\n        const handle = (0, remotion_1.delayRender)(`Waiting for audio metadata with src=\"${src}\" to be loaded`);\n        try {\n            const data = await (0, get_audio_data_1.getAudioData)(src);\n            if (mountState.current.isMounted) {\n                setMetadata(data);\n            }\n        }\n        catch (err) {\n            (0, remotion_1.cancelRender)(err);\n        }\n        (0, remotion_1.continueRender)(handle);\n    }, [src]);\n    (0, react_1.useLayoutEffect)(() => {\n        fetchMetadata();\n    }, [fetchMetadata]);\n    return metadata;\n};\nexports.useAudioData = useAudioData;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvdXNlLWF1ZGlvLWRhdGEuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CO0FBQ3BCLGdCQUFnQixtQkFBTyxDQUFDLHdHQUFPO0FBQy9CLG1CQUFtQixtQkFBTyxDQUFDLGtFQUFVO0FBQ3JDLHlCQUF5QixtQkFBTyxDQUFDLDJGQUFrQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLGlCQUFpQjtBQUM5RDtBQUNBLGdCQUFnQixVQUFVO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSwyRkFBMkYsSUFBSTtBQUMvRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxvQkFBb0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZW1vdGlvbi1jYXB0aW9ucy8uL25vZGVfbW9kdWxlcy9AcmVtb3Rpb24vbWVkaWEtdXRpbHMvZGlzdC91c2UtYXVkaW8tZGF0YS5qcz8wZWRkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy51c2VBdWRpb0RhdGEgPSB2b2lkIDA7XG5jb25zdCByZWFjdF8xID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgcmVtb3Rpb25fMSA9IHJlcXVpcmUoXCJyZW1vdGlvblwiKTtcbmNvbnN0IGdldF9hdWRpb19kYXRhXzEgPSByZXF1aXJlKFwiLi9nZXQtYXVkaW8tZGF0YVwiKTtcbi8qKlxuICogQGRlc2NyaXB0aW9uIFdyYXBzIHRoZSBnZXRBdWRpb0RhdGEoKSBmdW5jdGlvbiBpbnRvIGEgaG9vayBhbmQgZG9lcyAzIHRoaW5nczpcbiAqIEBkZXNjcmlwdGlvbiBLZWVwcyB0aGUgYXVkaW8gZGF0YSBpbiBhIHN0YXRlXG4gKiBAZGVzY3JpcHRpb24gV3JhcHMgdGhlIGZ1bmN0aW9uIGluIGEgZGVsYXlSZW5kZXIoKSAvIGNvbnRpbnVlUmVuZGVyKCkgcGF0dGVybi5cbiAqIEBkZXNjcmlwdGlvbiBIYW5kbGVzIHRoZSBjYXNlIHdoZXJlIHRoZSBjb21wb25lbnQgZ2V0cyB1bm1vdW50ZWQgd2hpbGUgdGhlIGZldGNoaW5nIGlzIGluIHByb2dyZXNzIGFuZCBhIFJlYWN0IGVycm9yIGlzIHRocm93bi5cbiAqIEBzZWUgW0RvY3VtZW50YXRpb25dKGh0dHBzOi8vd3d3LnJlbW90aW9uLmRldi9kb2NzL3VzZS1hdWRpby1kYXRhKVxuICovXG5jb25zdCB1c2VBdWRpb0RhdGEgPSAoc3JjKSA9PiB7XG4gICAgaWYgKCFzcmMpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcInVzZUF1ZGlvRGF0YSByZXF1aXJlcyBhICdzcmMnIHBhcmFtZXRlclwiKTtcbiAgICB9XG4gICAgY29uc3QgbW91bnRTdGF0ZSA9ICgwLCByZWFjdF8xLnVzZVJlZikoeyBpc01vdW50ZWQ6IHRydWUgfSk7XG4gICAgKDAsIHJlYWN0XzEudXNlRWZmZWN0KSgoKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgY3VycmVudCB9ID0gbW91bnRTdGF0ZTtcbiAgICAgICAgY3VycmVudC5pc01vdW50ZWQgPSB0cnVlO1xuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgY3VycmVudC5pc01vdW50ZWQgPSBmYWxzZTtcbiAgICAgICAgfTtcbiAgICB9LCBbXSk7XG4gICAgY29uc3QgW21ldGFkYXRhLCBzZXRNZXRhZGF0YV0gPSAoMCwgcmVhY3RfMS51c2VTdGF0ZSkobnVsbCk7XG4gICAgY29uc3QgZmV0Y2hNZXRhZGF0YSA9ICgwLCByZWFjdF8xLnVzZUNhbGxiYWNrKShhc3luYyAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGhhbmRsZSA9ICgwLCByZW1vdGlvbl8xLmRlbGF5UmVuZGVyKShgV2FpdGluZyBmb3IgYXVkaW8gbWV0YWRhdGEgd2l0aCBzcmM9XCIke3NyY31cIiB0byBiZSBsb2FkZWRgKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCAoMCwgZ2V0X2F1ZGlvX2RhdGFfMS5nZXRBdWRpb0RhdGEpKHNyYyk7XG4gICAgICAgICAgICBpZiAobW91bnRTdGF0ZS5jdXJyZW50LmlzTW91bnRlZCkge1xuICAgICAgICAgICAgICAgIHNldE1ldGFkYXRhKGRhdGEpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICgwLCByZW1vdGlvbl8xLmNhbmNlbFJlbmRlcikoZXJyKTtcbiAgICAgICAgfVxuICAgICAgICAoMCwgcmVtb3Rpb25fMS5jb250aW51ZVJlbmRlcikoaGFuZGxlKTtcbiAgICB9LCBbc3JjXSk7XG4gICAgKDAsIHJlYWN0XzEudXNlTGF5b3V0RWZmZWN0KSgoKSA9PiB7XG4gICAgICAgIGZldGNoTWV0YWRhdGEoKTtcbiAgICB9LCBbZmV0Y2hNZXRhZGF0YV0pO1xuICAgIHJldHVybiBtZXRhZGF0YTtcbn07XG5leHBvcnRzLnVzZUF1ZGlvRGF0YSA9IHVzZUF1ZGlvRGF0YTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@remotion/media-utils/dist/use-audio-data.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@remotion/media-utils/dist/visualize-audio.js":
/*!********************************************************************!*\
  !*** ./node_modules/@remotion/media-utils/dist/visualize-audio.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.visualizeAudio = void 0;\nconst no_react_1 = __webpack_require__(/*! remotion/no-react */ \"(ssr)/./node_modules/remotion/dist/esm/no-react.mjs\");\nconst get_visualization_1 = __webpack_require__(/*! ./fft/get-visualization */ \"(ssr)/./node_modules/@remotion/media-utils/dist/fft/get-visualization.js\");\nconst max_value_cached_1 = __webpack_require__(/*! ./fft/max-value-cached */ \"(ssr)/./node_modules/@remotion/media-utils/dist/fft/max-value-cached.js\");\nconst cache = {};\n/**\n * @description Takes in AudioData (preferably fetched by the useAudioData() hook) and processes it in a way that makes visualizing the audio that is playing at the current frame easy.\n * @description part of @remotion/media-utils\n * @see [Documentation](https://www.remotion.dev/docs/visualize-audio)\n */\nconst visualizeAudioFrame = ({ audioData: metadata, frame, fps, numberOfSamples, optimizeFor, }) => {\n    const cacheKey = metadata.resultId + frame + fps + numberOfSamples;\n    if (cache[cacheKey]) {\n        return cache[cacheKey];\n    }\n    const maxInt = (0, max_value_cached_1.getMaxPossibleMagnitude)(metadata);\n    return (0, get_visualization_1.getVisualization)({\n        sampleSize: numberOfSamples * 2,\n        data: metadata.channelWaveforms[0],\n        frame,\n        fps,\n        sampleRate: metadata.sampleRate,\n        maxInt,\n        optimizeFor: optimizeFor !== null && optimizeFor !== void 0 ? optimizeFor : (no_react_1.NoReactInternals.ENABLE_V5_BREAKING_CHANGES ? 'speed' : 'accuracy'),\n    });\n};\nconst visualizeAudio = ({ smoothing = true, ...parameters }) => {\n    if (!smoothing) {\n        return visualizeAudioFrame(parameters);\n    }\n    const toSmooth = [\n        parameters.frame - 1,\n        parameters.frame,\n        parameters.frame + 1,\n    ];\n    const all = toSmooth.map((s) => {\n        return visualizeAudioFrame({ ...parameters, frame: s });\n    });\n    return new Array(parameters.numberOfSamples).fill(true).map((_x, i) => {\n        return (new Array(toSmooth.length)\n            .fill(true)\n            .map((_, j) => {\n            return all[j][i];\n        })\n            .reduce((a, b) => a + b, 0) / toSmooth.length);\n    });\n};\nexports.visualizeAudio = visualizeAudio;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvdmlzdWFsaXplLWF1ZGlvLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQjtBQUN0QixtQkFBbUIsbUJBQU8sQ0FBQyw4RUFBbUI7QUFDOUMsNEJBQTRCLG1CQUFPLENBQUMseUdBQXlCO0FBQzdELDJCQUEyQixtQkFBTyxDQUFDLHVHQUF3QjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsZ0VBQWdFO0FBQy9GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsMEJBQTBCLGlDQUFpQztBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMseUJBQXlCO0FBQzlELEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0Esc0JBQXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVtb3Rpb24tY2FwdGlvbnMvLi9ub2RlX21vZHVsZXMvQHJlbW90aW9uL21lZGlhLXV0aWxzL2Rpc3QvdmlzdWFsaXplLWF1ZGlvLmpzPzk0ZDAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnZpc3VhbGl6ZUF1ZGlvID0gdm9pZCAwO1xuY29uc3Qgbm9fcmVhY3RfMSA9IHJlcXVpcmUoXCJyZW1vdGlvbi9uby1yZWFjdFwiKTtcbmNvbnN0IGdldF92aXN1YWxpemF0aW9uXzEgPSByZXF1aXJlKFwiLi9mZnQvZ2V0LXZpc3VhbGl6YXRpb25cIik7XG5jb25zdCBtYXhfdmFsdWVfY2FjaGVkXzEgPSByZXF1aXJlKFwiLi9mZnQvbWF4LXZhbHVlLWNhY2hlZFwiKTtcbmNvbnN0IGNhY2hlID0ge307XG4vKipcbiAqIEBkZXNjcmlwdGlvbiBUYWtlcyBpbiBBdWRpb0RhdGEgKHByZWZlcmFibHkgZmV0Y2hlZCBieSB0aGUgdXNlQXVkaW9EYXRhKCkgaG9vaykgYW5kIHByb2Nlc3NlcyBpdCBpbiBhIHdheSB0aGF0IG1ha2VzIHZpc3VhbGl6aW5nIHRoZSBhdWRpbyB0aGF0IGlzIHBsYXlpbmcgYXQgdGhlIGN1cnJlbnQgZnJhbWUgZWFzeS5cbiAqIEBkZXNjcmlwdGlvbiBwYXJ0IG9mIEByZW1vdGlvbi9tZWRpYS11dGlsc1xuICogQHNlZSBbRG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly93d3cucmVtb3Rpb24uZGV2L2RvY3MvdmlzdWFsaXplLWF1ZGlvKVxuICovXG5jb25zdCB2aXN1YWxpemVBdWRpb0ZyYW1lID0gKHsgYXVkaW9EYXRhOiBtZXRhZGF0YSwgZnJhbWUsIGZwcywgbnVtYmVyT2ZTYW1wbGVzLCBvcHRpbWl6ZUZvciwgfSkgPT4ge1xuICAgIGNvbnN0IGNhY2hlS2V5ID0gbWV0YWRhdGEucmVzdWx0SWQgKyBmcmFtZSArIGZwcyArIG51bWJlck9mU2FtcGxlcztcbiAgICBpZiAoY2FjaGVbY2FjaGVLZXldKSB7XG4gICAgICAgIHJldHVybiBjYWNoZVtjYWNoZUtleV07XG4gICAgfVxuICAgIGNvbnN0IG1heEludCA9ICgwLCBtYXhfdmFsdWVfY2FjaGVkXzEuZ2V0TWF4UG9zc2libGVNYWduaXR1ZGUpKG1ldGFkYXRhKTtcbiAgICByZXR1cm4gKDAsIGdldF92aXN1YWxpemF0aW9uXzEuZ2V0VmlzdWFsaXphdGlvbikoe1xuICAgICAgICBzYW1wbGVTaXplOiBudW1iZXJPZlNhbXBsZXMgKiAyLFxuICAgICAgICBkYXRhOiBtZXRhZGF0YS5jaGFubmVsV2F2ZWZvcm1zWzBdLFxuICAgICAgICBmcmFtZSxcbiAgICAgICAgZnBzLFxuICAgICAgICBzYW1wbGVSYXRlOiBtZXRhZGF0YS5zYW1wbGVSYXRlLFxuICAgICAgICBtYXhJbnQsXG4gICAgICAgIG9wdGltaXplRm9yOiBvcHRpbWl6ZUZvciAhPT0gbnVsbCAmJiBvcHRpbWl6ZUZvciAhPT0gdm9pZCAwID8gb3B0aW1pemVGb3IgOiAobm9fcmVhY3RfMS5Ob1JlYWN0SW50ZXJuYWxzLkVOQUJMRV9WNV9CUkVBS0lOR19DSEFOR0VTID8gJ3NwZWVkJyA6ICdhY2N1cmFjeScpLFxuICAgIH0pO1xufTtcbmNvbnN0IHZpc3VhbGl6ZUF1ZGlvID0gKHsgc21vb3RoaW5nID0gdHJ1ZSwgLi4ucGFyYW1ldGVycyB9KSA9PiB7XG4gICAgaWYgKCFzbW9vdGhpbmcpIHtcbiAgICAgICAgcmV0dXJuIHZpc3VhbGl6ZUF1ZGlvRnJhbWUocGFyYW1ldGVycyk7XG4gICAgfVxuICAgIGNvbnN0IHRvU21vb3RoID0gW1xuICAgICAgICBwYXJhbWV0ZXJzLmZyYW1lIC0gMSxcbiAgICAgICAgcGFyYW1ldGVycy5mcmFtZSxcbiAgICAgICAgcGFyYW1ldGVycy5mcmFtZSArIDEsXG4gICAgXTtcbiAgICBjb25zdCBhbGwgPSB0b1Ntb290aC5tYXAoKHMpID0+IHtcbiAgICAgICAgcmV0dXJuIHZpc3VhbGl6ZUF1ZGlvRnJhbWUoeyAuLi5wYXJhbWV0ZXJzLCBmcmFtZTogcyB9KTtcbiAgICB9KTtcbiAgICByZXR1cm4gbmV3IEFycmF5KHBhcmFtZXRlcnMubnVtYmVyT2ZTYW1wbGVzKS5maWxsKHRydWUpLm1hcCgoX3gsIGkpID0+IHtcbiAgICAgICAgcmV0dXJuIChuZXcgQXJyYXkodG9TbW9vdGgubGVuZ3RoKVxuICAgICAgICAgICAgLmZpbGwodHJ1ZSlcbiAgICAgICAgICAgIC5tYXAoKF8sIGopID0+IHtcbiAgICAgICAgICAgIHJldHVybiBhbGxbal1baV07XG4gICAgICAgIH0pXG4gICAgICAgICAgICAucmVkdWNlKChhLCBiKSA9PiBhICsgYiwgMCkgLyB0b1Ntb290aC5sZW5ndGgpO1xuICAgIH0pO1xufTtcbmV4cG9ydHMudmlzdWFsaXplQXVkaW8gPSB2aXN1YWxpemVBdWRpbztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@remotion/media-utils/dist/visualize-audio.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@remotion/player/dist/esm/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@remotion/player/dist/esm/index.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Player: () => (/* binding */ Player),\n/* harmony export */   PlayerInternals: () => (/* binding */ PlayerInternals),\n/* harmony export */   Thumbnail: () => (/* binding */ Thumbnail)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var remotion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! remotion */ \"(ssr)/./node_modules/remotion/dist/esm/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var remotion_no_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! remotion/no-react */ \"(ssr)/./node_modules/remotion/dist/esm/no-react.mjs\");\n/* __next_internal_client_entry_do_not_use__ Thumbnail,PlayerInternals,Player auto */ // src/icons.tsx\n\nvar ICON_SIZE = 25;\nvar fullscreenIconSize = 16;\nvar PlayIcon = ()=>{\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\", {\n        width: ICON_SIZE,\n        height: ICON_SIZE,\n        viewBox: \"0 0 25 25\",\n        fill: \"none\",\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", {\n            d: \"M8 6.375C7.40904 8.17576 7.06921 10.2486 7.01438 12.3871C6.95955 14.5255 7.19163 16.6547 7.6875 18.5625C9.95364 18.2995 12.116 17.6164 14.009 16.5655C15.902 15.5147 17.4755 14.124 18.6088 12.5C17.5158 10.8949 15.9949 9.51103 14.1585 8.45082C12.3222 7.3906 10.2174 6.68116 8 6.375Z\",\n            fill: \"white\",\n            stroke: \"white\",\n            strokeWidth: \"6.25\",\n            strokeLinejoin: \"round\"\n        })\n    });\n};\nvar PauseIcon = ()=>{\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\", {\n        viewBox: \"0 0 100 100\",\n        width: ICON_SIZE,\n        height: ICON_SIZE,\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"rect\", {\n                x: \"25\",\n                y: \"20\",\n                width: \"20\",\n                height: \"60\",\n                fill: \"#fff\",\n                ry: \"5\",\n                rx: \"5\"\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"rect\", {\n                x: \"55\",\n                y: \"20\",\n                width: \"20\",\n                height: \"60\",\n                fill: \"#fff\",\n                ry: \"5\",\n                rx: \"5\"\n            })\n        ]\n    });\n};\nvar FullscreenIcon = ({ isFullscreen })=>{\n    const strokeWidth = 6;\n    const viewSize = 32;\n    const out = isFullscreen ? 0 : strokeWidth / 2;\n    const middleInset = isFullscreen ? strokeWidth * 1.6 : strokeWidth / 2;\n    const inset = isFullscreen ? strokeWidth * 1.6 : strokeWidth * 2;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\", {\n        viewBox: `0 0 ${viewSize} ${viewSize}`,\n        height: fullscreenIconSize,\n        width: fullscreenIconSize,\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", {\n                d: `\n\t\t\t\tM ${out} ${inset}\n\t\t\t\tL ${middleInset} ${middleInset}\n\t\t\t\tL ${inset} ${out}\n\t\t\t\t`,\n                stroke: \"#fff\",\n                strokeWidth,\n                fill: \"none\"\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", {\n                d: `\n\t\t\t\tM ${viewSize - out} ${inset}\n\t\t\t\tL ${viewSize - middleInset} ${middleInset}\n\t\t\t\tL ${viewSize - inset} ${out}\n\t\t\t\t`,\n                stroke: \"#fff\",\n                strokeWidth,\n                fill: \"none\"\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", {\n                d: `\n\t\t\t\tM ${out} ${viewSize - inset}\n\t\t\t\tL ${middleInset} ${viewSize - middleInset}\n\t\t\t\tL ${inset} ${viewSize - out}\n\t\t\t\t`,\n                stroke: \"#fff\",\n                strokeWidth,\n                fill: \"none\"\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", {\n                d: `\n\t\t\t\tM ${viewSize - out} ${viewSize - inset}\n\t\t\t\tL ${viewSize - middleInset} ${viewSize - middleInset}\n\t\t\t\tL ${viewSize - inset} ${viewSize - out}\n\t\t\t\t`,\n                stroke: \"#fff\",\n                strokeWidth,\n                fill: \"none\"\n            })\n        ]\n    });\n};\nvar VolumeOffIcon = ()=>{\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\", {\n        width: ICON_SIZE,\n        height: ICON_SIZE,\n        viewBox: \"0 0 24 24\",\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", {\n            d: \"M3.63 3.63a.996.996 0 000 1.41L7.29 8.7 7 9H4c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h3l3.29 3.29c.63.63 1.71.18 1.71-.71v-4.17l4.18 4.18c-.49.37-1.02.68-1.6.91-.36.15-.58.53-.58.92 0 .72.73 1.18 1.39.91.8-.33 1.55-.77 2.22-1.31l1.34 1.34a.996.996 0 101.41-1.41L5.05 3.63c-.39-.39-1.02-.39-1.42 0zM19 12c0 .82-.15 1.61-.41 2.34l1.53 1.53c.56-1.17.88-2.48.88-3.87 0-3.83-2.4-7.11-5.78-8.4-.59-.23-1.22.23-1.22.86v.19c0 .38.25.71.61.85C17.18 6.54 19 9.06 19 12zm-8.71-6.29l-.17.17L12 7.76V6.41c0-.89-1.08-1.33-1.71-.7zM16.5 12A4.5 4.5 0 0014 7.97v1.79l2.48 2.48c.01-.08.02-.16.02-.24z\",\n            fill: \"#fff\"\n        })\n    });\n};\nvar VolumeOnIcon = ()=>{\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\", {\n        width: ICON_SIZE,\n        height: ICON_SIZE,\n        viewBox: \"0 0 24 24\",\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", {\n            d: \"M3 10v4c0 .55.45 1 1 1h3l3.29 3.29c.63.63 1.71.18 1.71-.71V6.41c0-.89-1.08-1.34-1.71-.71L7 9H4c-.55 0-1 .45-1 1zm13.5 2A4.5 4.5 0 0014 7.97v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 4.45v.2c0 .38.25.71.6.85C17.18 6.53 19 9.06 19 12s-1.82 5.47-4.4 6.5c-.36.14-.6.47-.6.85v.2c0 .63.63 1.07 1.21.85C18.6 19.11 21 15.84 21 12s-2.4-7.11-5.79-8.4c-.58-.23-1.21.22-1.21.85z\",\n            fill: \"#fff\"\n        })\n    });\n};\n// src/BufferingIndicator.tsx\n\nvar className = \"__remotion_buffering_indicator\";\nvar remotionBufferingAnimation = \"__remotion_buffering_animation\";\nvar playerStyle = {\n    width: ICON_SIZE,\n    height: ICON_SIZE,\n    overflow: \"hidden\",\n    lineHeight: \"normal\",\n    fontSize: \"inherit\"\n};\nvar studioStyle = {\n    width: 14,\n    height: 14,\n    overflow: \"hidden\",\n    lineHeight: \"normal\",\n    fontSize: \"inherit\"\n};\nvar BufferingIndicator = ({ type })=>{\n    const style = type === \"player\" ? playerStyle : studioStyle;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"style\", {\n                type: \"text/css\",\n                children: `\n\t\t\t\t@keyframes ${remotionBufferingAnimation} {\n          0% {\n            rotate: 0deg;\n          }\n          100% {\n            rotate: 360deg;\n          }\n        }\n        \n        .${className} {\n            animation: ${remotionBufferingAnimation} 1s linear infinite;\n        }        \n\t\t\t`\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                style,\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\", {\n                    viewBox: type === \"player\" ? \"0 0 22 22\" : \"0 0 18 18\",\n                    style,\n                    className,\n                    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", {\n                        d: type === \"player\" ? \"M 11 4 A 7 7 0 0 1 15.1145 16.66312\" : \"M 9 2 A 7 7 0 0 1 13.1145 14.66312\",\n                        stroke: \"white\",\n                        strokeLinecap: \"round\",\n                        fill: \"none\",\n                        strokeWidth: 3\n                    })\n                })\n            })\n        ]\n    });\n};\n// src/calculate-scale.ts\n\n// src/utils/calculate-player-size.ts\nvar calculatePlayerSize = ({ currentSize, width, height, compositionWidth, compositionHeight })=>{\n    if (width !== undefined && height === undefined) {\n        return {\n            aspectRatio: [\n                compositionWidth,\n                compositionHeight\n            ].join(\"/\")\n        };\n    }\n    if (height !== undefined && width === undefined) {\n        return {\n            aspectRatio: [\n                compositionWidth,\n                compositionHeight\n            ].join(\"/\")\n        };\n    }\n    if (!currentSize) {\n        return {\n            width: compositionWidth,\n            height: compositionHeight\n        };\n    }\n    return {\n        width: compositionWidth,\n        height: compositionHeight\n    };\n};\n// src/calculate-scale.ts\nvar calculateCanvasTransformation = ({ previewSize, compositionWidth, compositionHeight, canvasSize })=>{\n    const scale = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.calculateScale({\n        canvasSize,\n        compositionHeight,\n        compositionWidth,\n        previewSize\n    });\n    const correction = 0 - (1 - scale) / 2;\n    const xCorrection = correction * compositionWidth;\n    const yCorrection = correction * compositionHeight;\n    const width = compositionWidth * scale;\n    const height = compositionHeight * scale;\n    const centerX = canvasSize.width / 2 - width / 2;\n    const centerY = canvasSize.height / 2 - height / 2;\n    return {\n        centerX,\n        centerY,\n        xCorrection,\n        yCorrection,\n        scale\n    };\n};\nvar calculateOuterStyle = ({ config, style, canvasSize, overflowVisible, layout })=>{\n    if (!config) {\n        return {};\n    }\n    return {\n        position: \"relative\",\n        overflow: overflowVisible ? \"visible\" : \"hidden\",\n        ...calculatePlayerSize({\n            compositionHeight: config.height,\n            compositionWidth: config.width,\n            currentSize: canvasSize,\n            height: style?.height,\n            width: style?.width\n        }),\n        opacity: layout ? 1 : 0,\n        ...style\n    };\n};\nvar calculateContainerStyle = ({ config, canvasSize, layout, scale, overflowVisible })=>{\n    if (!config || !canvasSize || !layout) {\n        return {};\n    }\n    return {\n        position: \"absolute\",\n        width: config.width,\n        height: config.height,\n        display: \"flex\",\n        transform: `scale(${scale})`,\n        marginLeft: layout.xCorrection,\n        marginTop: layout.yCorrection,\n        overflow: overflowVisible ? \"visible\" : \"hidden\"\n    };\n};\nvar calculateOuter = ({ layout, scale, config, overflowVisible })=>{\n    if (!layout || !config) {\n        return {};\n    }\n    const { centerX, centerY } = layout;\n    return {\n        width: config.width * scale,\n        height: config.height * scale,\n        display: \"flex\",\n        flexDirection: \"column\",\n        position: \"absolute\",\n        left: centerX,\n        top: centerY,\n        overflow: overflowVisible ? \"visible\" : \"hidden\"\n    };\n};\n// src/emitter-context.ts\n\nvar PlayerEventEmitterContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.createContext(undefined);\nvar ThumbnailEmitterContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2__.createContext(undefined);\n// src/EmitterProvider.tsx\n\n\n// src/event-emitter.ts\nclass PlayerEmitter {\n    addEventListener(name, callback) {\n        this.listeners[name].push(callback);\n    }\n    removeEventListener(name, callback) {\n        this.listeners[name] = this.listeners[name].filter((l)=>l !== callback);\n    }\n    dispatchEvent(dispatchName, context) {\n        this.listeners[dispatchName].forEach((callback)=>{\n            callback({\n                detail: context\n            });\n        });\n    }\n    dispatchSeek(frame) {\n        this.dispatchEvent(\"seeked\", {\n            frame\n        });\n    }\n    dispatchVolumeChange(volume) {\n        this.dispatchEvent(\"volumechange\", {\n            volume\n        });\n    }\n    dispatchPause() {\n        this.dispatchEvent(\"pause\", undefined);\n    }\n    dispatchPlay() {\n        this.dispatchEvent(\"play\", undefined);\n    }\n    dispatchEnded() {\n        this.dispatchEvent(\"ended\", undefined);\n    }\n    dispatchRateChange(playbackRate) {\n        this.dispatchEvent(\"ratechange\", {\n            playbackRate\n        });\n    }\n    dispatchScaleChange(scale) {\n        this.dispatchEvent(\"scalechange\", {\n            scale\n        });\n    }\n    dispatchError(error) {\n        this.dispatchEvent(\"error\", {\n            error\n        });\n    }\n    dispatchTimeUpdate(event) {\n        this.dispatchEvent(\"timeupdate\", event);\n    }\n    dispatchFrameUpdate(event) {\n        this.dispatchEvent(\"frameupdate\", event);\n    }\n    dispatchFullscreenChange(event) {\n        this.dispatchEvent(\"fullscreenchange\", event);\n    }\n    dispatchMuteChange(event) {\n        this.dispatchEvent(\"mutechange\", event);\n    }\n    dispatchWaiting(event) {\n        this.dispatchEvent(\"waiting\", event);\n    }\n    dispatchResume(event) {\n        this.dispatchEvent(\"resume\", event);\n    }\n    constructor(){\n        this.listeners = {\n            ended: [],\n            error: [],\n            pause: [],\n            play: [],\n            ratechange: [],\n            scalechange: [],\n            seeked: [],\n            timeupdate: [],\n            frameupdate: [],\n            fullscreenchange: [],\n            volumechange: [],\n            mutechange: [],\n            waiting: [],\n            resume: []\n        };\n    }\n}\nclass ThumbnailEmitter {\n    addEventListener(name, callback) {\n        this.listeners[name].push(callback);\n    }\n    removeEventListener(name, callback) {\n        this.listeners[name] = this.listeners[name].filter((l)=>l !== callback);\n    }\n    dispatchEvent(dispatchName, context) {\n        this.listeners[dispatchName].forEach((callback)=>{\n            callback({\n                detail: context\n            });\n        });\n    }\n    dispatchError(error) {\n        this.dispatchEvent(\"error\", {\n            error\n        });\n    }\n    dispatchWaiting(event) {\n        this.dispatchEvent(\"waiting\", event);\n    }\n    dispatchResume(event) {\n        this.dispatchEvent(\"resume\", event);\n    }\n    constructor(){\n        this.listeners = {\n            error: [],\n            waiting: [],\n            resume: []\n        };\n    }\n}\n// src/use-buffer-state-emitter.ts\n\n\nvar useBufferStateEmitter = (emitter)=>{\n    const bufferManager = (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.BufferingContextReact);\n    if (!bufferManager) {\n        throw new Error(\"BufferingContextReact not found\");\n    }\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        const clear1 = bufferManager.listenForBuffering(()=>{\n            bufferManager.buffering.current = true;\n            emitter.dispatchWaiting({});\n        });\n        const clear2 = bufferManager.listenForResume(()=>{\n            bufferManager.buffering.current = false;\n            emitter.dispatchResume({});\n        });\n        return ()=>{\n            clear1.remove();\n            clear2.remove();\n        };\n    }, [\n        bufferManager,\n        emitter\n    ]);\n};\n// src/EmitterProvider.tsx\n\nvar PlayerEmitterProvider = ({ children, currentPlaybackRate })=>{\n    const [emitter] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(()=>new PlayerEmitter);\n    const bufferManager = (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.BufferingContextReact);\n    if (!bufferManager) {\n        throw new Error(\"BufferingContextReact not found\");\n    }\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (currentPlaybackRate) {\n            emitter.dispatchRateChange(currentPlaybackRate);\n        }\n    }, [\n        emitter,\n        currentPlaybackRate\n    ]);\n    useBufferStateEmitter(emitter);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PlayerEventEmitterContext.Provider, {\n        value: emitter,\n        children\n    });\n};\n// src/use-hover-state.ts\n\nvar useHoverState = (ref, hideControlsWhenPointerDoesntMove)=>{\n    const [hovered, setHovered] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        const { current } = ref;\n        if (!current) {\n            return;\n        }\n        let hoverTimeout;\n        const addHoverTimeout = ()=>{\n            if (hideControlsWhenPointerDoesntMove) {\n                clearTimeout(hoverTimeout);\n                hoverTimeout = setTimeout(()=>{\n                    setHovered(false);\n                }, hideControlsWhenPointerDoesntMove === true ? 3000 : hideControlsWhenPointerDoesntMove);\n            }\n        };\n        const onHover = ()=>{\n            setHovered(true);\n            addHoverTimeout();\n        };\n        const onLeave = ()=>{\n            setHovered(false);\n            clearTimeout(hoverTimeout);\n        };\n        const onMove = ()=>{\n            setHovered(true);\n            addHoverTimeout();\n        };\n        current.addEventListener(\"mouseenter\", onHover);\n        current.addEventListener(\"mouseleave\", onLeave);\n        current.addEventListener(\"mousemove\", onMove);\n        return ()=>{\n            current.removeEventListener(\"mouseenter\", onHover);\n            current.removeEventListener(\"mouseleave\", onLeave);\n            current.removeEventListener(\"mousemove\", onMove);\n            clearTimeout(hoverTimeout);\n        };\n    }, [\n        hideControlsWhenPointerDoesntMove,\n        ref\n    ]);\n    return hovered;\n};\n// src/use-playback.ts\n\n\n// src/browser-mediasession.ts\n\n// src/use-player.ts\n\n\nvar usePlayer = ()=>{\n    const [playing, setPlaying, imperativePlaying] = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.Timeline.usePlayingState();\n    const [hasPlayed, setHasPlayed] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const frame = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.Timeline.useTimelinePosition();\n    const playStart = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(frame);\n    const setFrame = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.Timeline.useTimelineSetFrame();\n    const setTimelinePosition = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.Timeline.useTimelineSetFrame();\n    const audioContext = (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.SharedAudioContext);\n    const { audioAndVideoTags } = (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.Timeline.TimelineContext);\n    const frameRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(frame);\n    frameRef.current = frame;\n    const video = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.useVideo();\n    const config = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.useUnsafeVideoConfig();\n    const emitter = (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(PlayerEventEmitterContext);\n    const lastFrame = (config?.durationInFrames ?? 1) - 1;\n    const isLastFrame = frame === lastFrame;\n    const isFirstFrame = frame === 0;\n    if (!emitter) {\n        throw new TypeError(\"Expected Player event emitter context\");\n    }\n    const bufferingContext = (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.BufferingContextReact);\n    if (!bufferingContext) {\n        throw new Error(\"Missing the buffering context. Most likely you have a Remotion version mismatch.\");\n    }\n    const { buffering } = bufferingContext;\n    const seek = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((newFrame)=>{\n        if (video?.id) {\n            setTimelinePosition((c)=>({\n                    ...c,\n                    [video.id]: newFrame\n                }));\n        }\n        frameRef.current = newFrame;\n        emitter.dispatchSeek(newFrame);\n    }, [\n        emitter,\n        setTimelinePosition,\n        video?.id\n    ]);\n    const play = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((e)=>{\n        if (imperativePlaying.current) {\n            return;\n        }\n        setHasPlayed(true);\n        if (isLastFrame) {\n            seek(0);\n        }\n        if (audioContext && audioContext.numberOfAudioTags > 0 && e) {\n            audioContext.playAllAudios();\n        }\n        audioAndVideoTags.current.forEach((a)=>a.play());\n        imperativePlaying.current = true;\n        setPlaying(true);\n        playStart.current = frameRef.current;\n        emitter.dispatchPlay();\n    }, [\n        imperativePlaying,\n        isLastFrame,\n        audioContext,\n        setPlaying,\n        emitter,\n        seek,\n        audioAndVideoTags\n    ]);\n    const pause = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(()=>{\n        if (imperativePlaying.current) {\n            imperativePlaying.current = false;\n            setPlaying(false);\n            emitter.dispatchPause();\n        }\n    }, [\n        emitter,\n        imperativePlaying,\n        setPlaying\n    ]);\n    const pauseAndReturnToPlayStart = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(()=>{\n        if (imperativePlaying.current) {\n            imperativePlaying.current = false;\n            frameRef.current = playStart.current;\n            if (config) {\n                setTimelinePosition((c)=>({\n                        ...c,\n                        [config.id]: playStart.current\n                    }));\n                setPlaying(false);\n                emitter.dispatchPause();\n            }\n        }\n    }, [\n        config,\n        emitter,\n        imperativePlaying,\n        setPlaying,\n        setTimelinePosition\n    ]);\n    const videoId = video?.id;\n    const frameBack = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((frames)=>{\n        if (!videoId) {\n            return null;\n        }\n        if (imperativePlaying.current) {\n            return;\n        }\n        setFrame((c)=>{\n            const prev = c[videoId] ?? window.remotion_initialFrame ?? 0;\n            return {\n                ...c,\n                [videoId]: Math.max(0, prev - frames)\n            };\n        });\n    }, [\n        imperativePlaying,\n        setFrame,\n        videoId\n    ]);\n    const frameForward = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((frames)=>{\n        if (!videoId) {\n            return null;\n        }\n        if (imperativePlaying.current) {\n            return;\n        }\n        setFrame((c)=>{\n            const prev = c[videoId] ?? window.remotion_initialFrame ?? 0;\n            return {\n                ...c,\n                [videoId]: Math.min(lastFrame, prev + frames)\n            };\n        });\n    }, [\n        videoId,\n        imperativePlaying,\n        lastFrame,\n        setFrame\n    ]);\n    const returnValue = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return {\n            frameBack,\n            frameForward,\n            isLastFrame,\n            emitter,\n            playing,\n            play,\n            pause,\n            seek,\n            isFirstFrame,\n            getCurrentFrame: ()=>frameRef.current,\n            isPlaying: ()=>imperativePlaying.current,\n            isBuffering: ()=>buffering.current,\n            pauseAndReturnToPlayStart,\n            hasPlayed,\n            remotionInternal_currentFrameRef: frameRef\n        };\n    }, [\n        frameBack,\n        frameForward,\n        isLastFrame,\n        emitter,\n        playing,\n        play,\n        pause,\n        seek,\n        isFirstFrame,\n        pauseAndReturnToPlayStart,\n        hasPlayed,\n        imperativePlaying,\n        buffering\n    ]);\n    return returnValue;\n};\n// src/browser-mediasession.ts\nvar useBrowserMediaSession = ({ browserMediaControlsBehavior, videoConfig, playbackRate })=>{\n    const { playing, pause, play, emitter, getCurrentFrame, seek } = usePlayer();\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (!navigator.mediaSession) {\n            return;\n        }\n        if (browserMediaControlsBehavior.mode === \"do-nothing\") {\n            return;\n        }\n        if (playing) {\n            navigator.mediaSession.playbackState = \"playing\";\n        } else {\n            navigator.mediaSession.playbackState = \"paused\";\n        }\n    }, [\n        browserMediaControlsBehavior.mode,\n        playing\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (!navigator.mediaSession) {\n            return;\n        }\n        if (browserMediaControlsBehavior.mode === \"do-nothing\") {\n            return;\n        }\n        const onTimeUpdate = ()=>{\n            if (!videoConfig) {\n                return;\n            }\n            if (navigator.mediaSession) {\n                navigator.mediaSession.setPositionState({\n                    duration: videoConfig.durationInFrames / videoConfig.fps,\n                    playbackRate,\n                    position: getCurrentFrame() / videoConfig.fps\n                });\n            }\n        };\n        emitter.addEventListener(\"timeupdate\", onTimeUpdate);\n        return ()=>{\n            emitter.removeEventListener(\"timeupdate\", onTimeUpdate);\n        };\n    }, [\n        browserMediaControlsBehavior.mode,\n        emitter,\n        getCurrentFrame,\n        playbackRate,\n        videoConfig\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (!navigator.mediaSession) {\n            return;\n        }\n        if (browserMediaControlsBehavior.mode === \"do-nothing\") {\n            return;\n        }\n        navigator.mediaSession.setActionHandler(\"play\", ()=>{\n            if (browserMediaControlsBehavior.mode === \"register-media-session\") {\n                play();\n            }\n        });\n        navigator.mediaSession.setActionHandler(\"pause\", ()=>{\n            if (browserMediaControlsBehavior.mode === \"register-media-session\") {\n                pause();\n            }\n        });\n        navigator.mediaSession.setActionHandler(\"seekto\", (event)=>{\n            if (browserMediaControlsBehavior.mode === \"register-media-session\" && event.seekTime !== undefined && videoConfig) {\n                seek(Math.round(event.seekTime * videoConfig.fps));\n            }\n        });\n        navigator.mediaSession.setActionHandler(\"seekbackward\", ()=>{\n            if (browserMediaControlsBehavior.mode === \"register-media-session\" && videoConfig) {\n                seek(Math.max(0, Math.round((getCurrentFrame() - 10) * videoConfig.fps)));\n            }\n        });\n        navigator.mediaSession.setActionHandler(\"seekforward\", ()=>{\n            if (browserMediaControlsBehavior.mode === \"register-media-session\" && videoConfig) {\n                seek(Math.max(videoConfig.durationInFrames - 1, Math.round((getCurrentFrame() + 10) * videoConfig.fps)));\n            }\n        });\n        navigator.mediaSession.setActionHandler(\"previoustrack\", ()=>{\n            if (browserMediaControlsBehavior.mode === \"register-media-session\") {\n                seek(0);\n            }\n        });\n        return ()=>{\n            navigator.mediaSession.metadata = null;\n            navigator.mediaSession.setActionHandler(\"play\", null);\n            navigator.mediaSession.setActionHandler(\"pause\", null);\n            navigator.mediaSession.setActionHandler(\"seekto\", null);\n            navigator.mediaSession.setActionHandler(\"seekbackward\", null);\n            navigator.mediaSession.setActionHandler(\"seekforward\", null);\n            navigator.mediaSession.setActionHandler(\"previoustrack\", null);\n        };\n    }, [\n        browserMediaControlsBehavior.mode,\n        getCurrentFrame,\n        pause,\n        play,\n        seek,\n        videoConfig\n    ]);\n};\n// src/calculate-next-frame.ts\nvar calculateNextFrame = ({ time, currentFrame: startFrame, playbackSpeed, fps, actualLastFrame, actualFirstFrame, framesAdvanced, shouldLoop })=>{\n    const op = playbackSpeed < 0 ? Math.ceil : Math.floor;\n    const framesToAdvance = op(time * playbackSpeed / (1000 / fps)) - framesAdvanced;\n    const nextFrame = framesToAdvance + startFrame;\n    const isCurrentFrameOutside = startFrame > actualLastFrame || startFrame < actualFirstFrame;\n    const isNextFrameOutside = nextFrame > actualLastFrame || nextFrame < actualFirstFrame;\n    const hasEnded = !shouldLoop && isNextFrameOutside && !isCurrentFrameOutside;\n    if (playbackSpeed > 0) {\n        if (isNextFrameOutside) {\n            return {\n                nextFrame: actualFirstFrame,\n                framesToAdvance,\n                hasEnded\n            };\n        }\n        return {\n            nextFrame,\n            framesToAdvance,\n            hasEnded\n        };\n    }\n    if (isNextFrameOutside) {\n        return {\n            nextFrame: actualLastFrame,\n            framesToAdvance,\n            hasEnded\n        };\n    }\n    return {\n        nextFrame,\n        framesToAdvance,\n        hasEnded\n    };\n};\n// src/is-backgrounded.ts\n\nvar getIsBackgrounded = ()=>{\n    if (typeof document === \"undefined\") {\n        return false;\n    }\n    return document.visibilityState === \"hidden\";\n};\nvar useIsBackgrounded = ()=>{\n    const isBackgrounded = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(getIsBackgrounded());\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        const onVisibilityChange = ()=>{\n            isBackgrounded.current = getIsBackgrounded();\n        };\n        document.addEventListener(\"visibilitychange\", onVisibilityChange);\n        return ()=>{\n            document.removeEventListener(\"visibilitychange\", onVisibilityChange);\n        };\n    }, []);\n    return isBackgrounded;\n};\n// src/use-playback.ts\nvar usePlayback = ({ loop, playbackRate, moveToBeginningWhenEnded, inFrame, outFrame, frameRef, browserMediaControlsBehavior })=>{\n    const config = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.useUnsafeVideoConfig();\n    const frame = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.Timeline.useTimelinePosition();\n    const { playing, pause, emitter } = usePlayer();\n    const setFrame = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.Timeline.useTimelineSetFrame();\n    const buffering = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const isBackgroundedRef = useIsBackgrounded();\n    const lastTimeUpdateEvent = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.BufferingContextReact);\n    if (!context) {\n        throw new Error(\"Missing the buffering context. Most likely you have a Remotion version mismatch.\");\n    }\n    useBrowserMediaSession({\n        browserMediaControlsBehavior,\n        playbackRate,\n        videoConfig: config\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        const onBufferClear = context.listenForBuffering(()=>{\n            buffering.current = performance.now();\n        });\n        const onResumeClear = context.listenForResume(()=>{\n            buffering.current = null;\n        });\n        return ()=>{\n            onBufferClear.remove();\n            onResumeClear.remove();\n        };\n    }, [\n        context\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (!config) {\n            return;\n        }\n        if (!playing) {\n            return;\n        }\n        let hasBeenStopped = false;\n        let reqAnimFrameCall = null;\n        let startedTime = performance.now();\n        let framesAdvanced = 0;\n        const cancelQueuedFrame = ()=>{\n            if (reqAnimFrameCall !== null) {\n                if (reqAnimFrameCall.type === \"raf\") {\n                    cancelAnimationFrame(reqAnimFrameCall.id);\n                } else {\n                    clearTimeout(reqAnimFrameCall.id);\n                }\n            }\n        };\n        const stop = ()=>{\n            hasBeenStopped = true;\n            cancelQueuedFrame();\n        };\n        const callback = ()=>{\n            const time = performance.now() - startedTime;\n            const actualLastFrame = outFrame ?? config.durationInFrames - 1;\n            const actualFirstFrame = inFrame ?? 0;\n            const currentFrame = frameRef.current;\n            const { nextFrame, framesToAdvance, hasEnded } = calculateNextFrame({\n                time,\n                currentFrame,\n                playbackSpeed: playbackRate,\n                fps: config.fps,\n                actualFirstFrame,\n                actualLastFrame,\n                framesAdvanced,\n                shouldLoop: loop\n            });\n            framesAdvanced += framesToAdvance;\n            if (nextFrame !== frameRef.current && (!hasEnded || moveToBeginningWhenEnded)) {\n                setFrame((c)=>({\n                        ...c,\n                        [config.id]: nextFrame\n                    }));\n            }\n            if (hasEnded) {\n                stop();\n                pause();\n                emitter.dispatchEnded();\n                return;\n            }\n            if (!hasBeenStopped) {\n                queueNextFrame();\n            }\n        };\n        const queueNextFrame = ()=>{\n            if (buffering.current) {\n                const stopListening = context.listenForResume(()=>{\n                    stopListening.remove();\n                    if (hasBeenStopped) {\n                        return;\n                    }\n                    startedTime = performance.now();\n                    framesAdvanced = 0;\n                    callback();\n                });\n                return;\n            }\n            if (isBackgroundedRef.current) {\n                reqAnimFrameCall = {\n                    type: \"timeout\",\n                    id: setTimeout(callback, 1000 / config.fps)\n                };\n            } else {\n                reqAnimFrameCall = {\n                    type: \"raf\",\n                    id: requestAnimationFrame(callback)\n                };\n            }\n        };\n        queueNextFrame();\n        const onVisibilityChange = ()=>{\n            if (document.visibilityState === \"visible\") {\n                return;\n            }\n            cancelQueuedFrame();\n            callback();\n        };\n        window.addEventListener(\"visibilitychange\", onVisibilityChange);\n        return ()=>{\n            window.removeEventListener(\"visibilitychange\", onVisibilityChange);\n            stop();\n        };\n    }, [\n        config,\n        loop,\n        pause,\n        playing,\n        setFrame,\n        emitter,\n        playbackRate,\n        inFrame,\n        outFrame,\n        moveToBeginningWhenEnded,\n        isBackgroundedRef,\n        frameRef,\n        buffering,\n        context\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        const interval = setInterval(()=>{\n            if (lastTimeUpdateEvent.current === frameRef.current) {\n                return;\n            }\n            emitter.dispatchTimeUpdate({\n                frame: frameRef.current\n            });\n            lastTimeUpdateEvent.current = frameRef.current;\n        }, 250);\n        return ()=>clearInterval(interval);\n    }, [\n        emitter,\n        frameRef\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        emitter.dispatchFrameUpdate({\n            frame\n        });\n    }, [\n        emitter,\n        frame\n    ]);\n};\n// src/utils/use-element-size.ts\n\nvar elementSizeHooks = [];\nvar updateAllElementsSizes = ()=>{\n    for (const listener of elementSizeHooks){\n        listener();\n    }\n};\nvar useElementSize = (ref, options)=>{\n    const [size, setSize] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(()=>{\n        if (!ref.current) {\n            return null;\n        }\n        const rect = ref.current.getClientRects();\n        if (!rect[0]) {\n            return null;\n        }\n        return {\n            width: rect[0].width,\n            height: rect[0].height,\n            left: rect[0].x,\n            top: rect[0].y,\n            windowSize: {\n                height: window.innerHeight,\n                width: window.innerWidth\n            }\n        };\n    });\n    const observer = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        if (typeof ResizeObserver === \"undefined\") {\n            return null;\n        }\n        return new ResizeObserver((entries)=>{\n            const { contentRect, target } = entries[0];\n            const newSize = target.getClientRects();\n            if (!newSize?.[0]) {\n                setSize(null);\n                return;\n            }\n            const probableCssParentScale = contentRect.width === 0 ? 1 : newSize[0].width / contentRect.width;\n            const width = options.shouldApplyCssTransforms ? newSize[0].width : newSize[0].width * (1 / probableCssParentScale);\n            const height = options.shouldApplyCssTransforms ? newSize[0].height : newSize[0].height * (1 / probableCssParentScale);\n            setSize({\n                width,\n                height,\n                left: newSize[0].x,\n                top: newSize[0].y,\n                windowSize: {\n                    height: window.innerHeight,\n                    width: window.innerWidth\n                }\n            });\n        });\n    }, [\n        options.shouldApplyCssTransforms\n    ]);\n    const updateSize = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(()=>{\n        if (!ref.current) {\n            return;\n        }\n        const rect = ref.current.getClientRects();\n        if (!rect[0]) {\n            setSize(null);\n            return;\n        }\n        setSize((prevState)=>{\n            const isSame = prevState && prevState.width === rect[0].width && prevState.height === rect[0].height && prevState.left === rect[0].x && prevState.top === rect[0].y && prevState.windowSize.height === window.innerHeight && prevState.windowSize.width === window.innerWidth;\n            if (isSame) {\n                return prevState;\n            }\n            return {\n                width: rect[0].width,\n                height: rect[0].height,\n                left: rect[0].x,\n                top: rect[0].y,\n                windowSize: {\n                    height: window.innerHeight,\n                    width: window.innerWidth\n                }\n            };\n        });\n    }, [\n        ref\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (!observer) {\n            return;\n        }\n        const { current } = ref;\n        if (current) {\n            observer.observe(current);\n        }\n        return ()=>{\n            if (current) {\n                observer.unobserve(current);\n            }\n        };\n    }, [\n        observer,\n        ref,\n        updateSize\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (!options.triggerOnWindowResize) {\n            return;\n        }\n        window.addEventListener(\"resize\", updateSize);\n        return ()=>{\n            window.removeEventListener(\"resize\", updateSize);\n        };\n    }, [\n        options.triggerOnWindowResize,\n        updateSize\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        elementSizeHooks.push(updateSize);\n        return ()=>{\n            elementSizeHooks = elementSizeHooks.filter((e)=>e !== updateSize);\n        };\n    }, [\n        updateSize\n    ]);\n    return (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        if (!size) {\n            return null;\n        }\n        return {\n            ...size,\n            refresh: updateSize\n        };\n    }, [\n        size,\n        updateSize\n    ]);\n};\n// src/Player.tsx\n\n\n// src/PlayerUI.tsx\n\n\n// src/PlayerControls.tsx\n\n\n// src/DefaultPlayPauseButton.tsx\n\nvar DefaultPlayPauseButton = ({ playing, buffering })=>{\n    if (playing && buffering) {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(BufferingIndicator, {\n            type: \"player\"\n        });\n    }\n    if (playing) {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PauseIcon, {});\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PlayIcon, {});\n};\n// src/MediaVolumeSlider.tsx\n\n\n// src/render-volume-slider.tsx\n\n\n\nvar KNOB_SIZE = 12;\nvar BAR_HEIGHT = 5;\nvar DefaultVolumeSlider = ({ volume, isVertical, onBlur, inputRef, setVolume })=>{\n    const sliderContainer = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        const paddingLeft = 5;\n        const common = {\n            paddingLeft,\n            height: ICON_SIZE,\n            width: VOLUME_SLIDER_WIDTH,\n            display: \"inline-flex\",\n            alignItems: \"center\"\n        };\n        if (isVertical) {\n            return {\n                ...common,\n                position: \"absolute\",\n                transform: `rotate(-90deg) translateX(${VOLUME_SLIDER_WIDTH / 2 + ICON_SIZE / 2}px)`\n            };\n        }\n        return {\n            ...common\n        };\n    }, [\n        isVertical\n    ]);\n    const randomId = typeof react__WEBPACK_IMPORTED_MODULE_2__.useId === \"undefined\" ? \"volume-slider\" : react__WEBPACK_IMPORTED_MODULE_2__.useId();\n    const [randomClass] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(()=>`__remotion-volume-slider-${(0,remotion__WEBPACK_IMPORTED_MODULE_1__.random)(randomId)}`.replace(\".\", \"\"));\n    const onVolumeChange = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((e)=>{\n        setVolume(parseFloat(e.target.value));\n    }, [\n        setVolume\n    ]);\n    const inputStyle = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        const commonStyle = {\n            WebkitAppearance: \"none\",\n            backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n            borderRadius: BAR_HEIGHT / 2,\n            cursor: \"pointer\",\n            height: BAR_HEIGHT,\n            width: VOLUME_SLIDER_WIDTH,\n            backgroundImage: `linear-gradient(\n\t\t\t\tto right,\n\t\t\t\twhite ${volume * 100}%, rgba(255, 255, 255, 0) ${volume * 100}%\n\t\t\t)`\n        };\n        if (isVertical) {\n            return {\n                ...commonStyle,\n                bottom: ICON_SIZE + VOLUME_SLIDER_WIDTH / 2\n            };\n        }\n        return commonStyle;\n    }, [\n        isVertical,\n        volume\n    ]);\n    const sliderStyle = `\n\t.${randomClass}::-webkit-slider-thumb {\n\t\t-webkit-appearance: none;\n\t\tbackground-color: white;\n\t\tborder-radius: ${KNOB_SIZE / 2}px;\n\t\tbox-shadow: 0 0 2px black;\n\t\theight: ${KNOB_SIZE}px;\n\t\twidth: ${KNOB_SIZE}px;\n\t}\n\n\t.${randomClass}::-moz-range-thumb {\n\t\t-webkit-appearance: none;\n\t\tbackground-color: white;\n\t\tborder-radius: ${KNOB_SIZE / 2}px;\n\t\tbox-shadow: 0 0 2px black;\n\t\theight: ${KNOB_SIZE}px;\n\t\twidth: ${KNOB_SIZE}px;\n\t}\n`;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n        style: sliderContainer,\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"style\", {\n                dangerouslySetInnerHTML: {\n                    __html: sliderStyle\n                }\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n                ref: inputRef,\n                \"aria-label\": \"Change volume\",\n                className: randomClass,\n                max: 1,\n                min: 0,\n                onBlur,\n                onChange: onVolumeChange,\n                step: 0.01,\n                type: \"range\",\n                value: volume,\n                style: inputStyle\n            })\n        ]\n    });\n};\nvar renderDefaultVolumeSlider = (props)=>{\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DefaultVolumeSlider, {\n        ...props\n    });\n};\n// src/MediaVolumeSlider.tsx\n\nvar VOLUME_SLIDER_WIDTH = 100;\nvar MediaVolumeSlider = ({ displayVerticalVolumeSlider, renderMuteButton, renderVolumeSlider })=>{\n    const [mediaMuted, setMediaMuted] = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.useMediaMutedState();\n    const [mediaVolume, setMediaVolume] = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.useMediaVolumeState();\n    const [focused, setFocused] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const parentDivRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const inputRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const hover = useHoverState(parentDivRef, false);\n    const onBlur = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(()=>{\n        setTimeout(()=>{\n            if (inputRef.current && document.activeElement !== inputRef.current) {\n                setFocused(false);\n            }\n        }, 10);\n    }, []);\n    const isVolume0 = mediaVolume === 0;\n    const onClick = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(()=>{\n        if (isVolume0) {\n            setMediaVolume(1);\n            setMediaMuted(false);\n            return;\n        }\n        setMediaMuted((mute)=>!mute);\n    }, [\n        isVolume0,\n        setMediaMuted,\n        setMediaVolume\n    ]);\n    const parentDivStyle = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return {\n            display: \"inline-flex\",\n            background: \"none\",\n            border: \"none\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            touchAction: \"none\",\n            ...displayVerticalVolumeSlider && {\n                position: \"relative\"\n            }\n        };\n    }, [\n        displayVerticalVolumeSlider\n    ]);\n    const volumeContainer = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return {\n            display: \"inline\",\n            width: ICON_SIZE,\n            height: ICON_SIZE,\n            cursor: \"pointer\",\n            appearance: \"none\",\n            background: \"none\",\n            border: \"none\",\n            padding: 0\n        };\n    }, []);\n    const renderDefaultMuteButton = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(({ muted, volume })=>{\n        const isMutedOrZero = muted || volume === 0;\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", {\n            \"aria-label\": isMutedOrZero ? \"Unmute sound\" : \"Mute sound\",\n            title: isMutedOrZero ? \"Unmute sound\" : \"Mute sound\",\n            onClick,\n            onBlur,\n            onFocus: ()=>setFocused(true),\n            style: volumeContainer,\n            type: \"button\",\n            children: isMutedOrZero ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(VolumeOffIcon, {}) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(VolumeOnIcon, {})\n        });\n    }, [\n        onBlur,\n        onClick,\n        volumeContainer\n    ]);\n    const muteButton = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return renderMuteButton ? renderMuteButton({\n            muted: mediaMuted,\n            volume: mediaVolume\n        }) : renderDefaultMuteButton({\n            muted: mediaMuted,\n            volume: mediaVolume\n        });\n    }, [\n        mediaMuted,\n        mediaVolume,\n        renderDefaultMuteButton,\n        renderMuteButton\n    ]);\n    const volumeSlider = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return (focused || hover) && !mediaMuted && !remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.isIosSafari() ? (renderVolumeSlider ?? renderDefaultVolumeSlider)({\n            isVertical: displayVerticalVolumeSlider,\n            volume: mediaVolume,\n            onBlur: ()=>setFocused(false),\n            inputRef,\n            setVolume: setMediaVolume\n        }) : null;\n    }, [\n        displayVerticalVolumeSlider,\n        focused,\n        hover,\n        mediaMuted,\n        mediaVolume,\n        renderVolumeSlider,\n        setMediaVolume\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n        ref: parentDivRef,\n        style: parentDivStyle,\n        children: [\n            muteButton,\n            volumeSlider\n        ]\n    });\n};\n// src/PlaybackrateControl.tsx\n\n\n// src/utils/use-component-visible.ts\n\nfunction useComponentVisible(initialIsVisible) {\n    const [isComponentVisible, setIsComponentVisible] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(initialIsVisible);\n    const ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        const handleClickOutside = (event)=>{\n            if (ref.current && !ref.current.contains(event.target)) {\n                setIsComponentVisible(false);\n            }\n        };\n        document.addEventListener(\"pointerup\", handleClickOutside, true);\n        return ()=>{\n            document.removeEventListener(\"pointerup\", handleClickOutside, true);\n        };\n    }, []);\n    return {\n        ref,\n        isComponentVisible,\n        setIsComponentVisible\n    };\n}\n// src/PlaybackrateControl.tsx\n\nvar BOTTOM = 35;\nvar THRESHOLD = 70;\nvar rateDiv = {\n    height: 30,\n    paddingRight: 15,\n    paddingLeft: 12,\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\"\n};\nvar checkmarkContainer = {\n    width: 22,\n    display: \"flex\",\n    alignItems: \"center\"\n};\nvar checkmarkStyle = {\n    width: 14,\n    height: 14,\n    color: \"black\"\n};\nvar Checkmark = ()=>/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\", {\n        viewBox: \"0 0 512 512\",\n        style: checkmarkStyle,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", {\n            fill: \"currentColor\",\n            d: \"M435.848 83.466L172.804 346.51l-96.652-96.652c-4.686-4.686-12.284-4.686-16.971 0l-28.284 28.284c-4.686 4.686-4.686 12.284 0 16.971l133.421 133.421c4.686 4.686 12.284 4.686 16.971 0l299.813-299.813c4.686-4.686 4.686-12.284 0-16.971l-28.284-28.284c-4.686-4.686-12.284-4.686-16.97 0z\"\n        })\n    });\nvar PlaybackrateOption = ({ rate, onSelect, selectedRate, keyboardSelectedRate })=>{\n    const onClick = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((e)=>{\n        e.stopPropagation();\n        e.preventDefault();\n        onSelect(rate);\n    }, [\n        onSelect,\n        rate\n    ]);\n    const [hovered, setHovered] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const onMouseEnter = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(()=>{\n        setHovered(true);\n    }, []);\n    const onMouseLeave = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(()=>{\n        setHovered(false);\n    }, []);\n    const isFocused = keyboardSelectedRate === rate;\n    const actualStyle = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return {\n            ...rateDiv,\n            backgroundColor: hovered || isFocused ? \"#eee\" : \"transparent\"\n        };\n    }, [\n        hovered,\n        isFocused\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n        onMouseEnter,\n        onMouseLeave,\n        tabIndex: 0,\n        style: actualStyle,\n        onClick,\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                style: checkmarkContainer,\n                children: rate === selectedRate ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Checkmark, {}) : null\n            }),\n            rate.toFixed(1),\n            \"x\"\n        ]\n    }, rate);\n};\nvar PlaybackPopup = ({ setIsComponentVisible, playbackRates, canvasSize })=>{\n    const { setPlaybackRate, playbackRate } = (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.Timeline.TimelineContext);\n    const [keyboardSelectedRate, setKeyboardSelectedRate] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(playbackRate);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        const listener = (e)=>{\n            e.preventDefault();\n            if (e.key === \"ArrowUp\") {\n                const currentIndex = playbackRates.findIndex((rate)=>rate === keyboardSelectedRate);\n                if (currentIndex === 0) {\n                    return;\n                }\n                if (currentIndex === -1) {\n                    setKeyboardSelectedRate(playbackRates[0]);\n                } else {\n                    setKeyboardSelectedRate(playbackRates[currentIndex - 1]);\n                }\n            } else if (e.key === \"ArrowDown\") {\n                const currentIndex = playbackRates.findIndex((rate)=>rate === keyboardSelectedRate);\n                if (currentIndex === playbackRates.length - 1) {\n                    return;\n                }\n                if (currentIndex === -1) {\n                    setKeyboardSelectedRate(playbackRates[playbackRates.length - 1]);\n                } else {\n                    setKeyboardSelectedRate(playbackRates[currentIndex + 1]);\n                }\n            } else if (e.key === \"Enter\") {\n                setPlaybackRate(keyboardSelectedRate);\n                setIsComponentVisible(false);\n            }\n        };\n        window.addEventListener(\"keydown\", listener);\n        return ()=>{\n            window.removeEventListener(\"keydown\", listener);\n        };\n    }, [\n        playbackRates,\n        keyboardSelectedRate,\n        setPlaybackRate,\n        setIsComponentVisible\n    ]);\n    const onSelect = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((rate)=>{\n        setPlaybackRate(rate);\n        setIsComponentVisible(false);\n    }, [\n        setIsComponentVisible,\n        setPlaybackRate\n    ]);\n    const playbackPopup = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return {\n            position: \"absolute\",\n            right: 0,\n            width: 125,\n            maxHeight: canvasSize.height - THRESHOLD - BOTTOM,\n            bottom: 35,\n            background: \"#fff\",\n            borderRadius: 4,\n            overflow: \"auto\",\n            color: \"black\",\n            textAlign: \"left\"\n        };\n    }, [\n        canvasSize.height\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n        style: playbackPopup,\n        children: playbackRates.map((rate)=>{\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PlaybackrateOption, {\n                selectedRate: playbackRate,\n                onSelect,\n                rate,\n                keyboardSelectedRate\n            }, rate);\n        })\n    });\n};\nvar label = {\n    fontSize: 13,\n    fontWeight: \"bold\",\n    color: \"white\",\n    border: \"2px solid white\",\n    borderRadius: 20,\n    paddingLeft: 8,\n    paddingRight: 8,\n    paddingTop: 2,\n    paddingBottom: 2\n};\nvar playerButtonStyle = {\n    appearance: \"none\",\n    backgroundColor: \"transparent\",\n    border: \"none\",\n    cursor: \"pointer\",\n    paddingLeft: 0,\n    paddingRight: 0,\n    paddingTop: 6,\n    paddingBottom: 6,\n    height: 37,\n    display: \"inline-flex\",\n    marginBottom: 0,\n    marginTop: 0,\n    alignItems: \"center\"\n};\nvar button = {\n    ...playerButtonStyle,\n    position: \"relative\"\n};\nvar PlaybackrateControl = ({ playbackRates, canvasSize })=>{\n    const { ref, isComponentVisible, setIsComponentVisible } = useComponentVisible(false);\n    const { playbackRate } = (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.Timeline.TimelineContext);\n    const onClick = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((e)=>{\n        e.stopPropagation();\n        e.preventDefault();\n        setIsComponentVisible((prevIsComponentVisible)=>!prevIsComponentVisible);\n    }, [\n        setIsComponentVisible\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n        ref,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"button\", {\n            type: \"button\",\n            \"aria-label\": \"Change playback rate\",\n            style: button,\n            onClick,\n            children: [\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                    style: label,\n                    children: [\n                        playbackRate,\n                        \"x\"\n                    ]\n                }),\n                isComponentVisible && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PlaybackPopup, {\n                    canvasSize,\n                    playbackRates,\n                    setIsComponentVisible\n                })\n            ]\n        })\n    });\n};\n// src/PlayerSeekBar.tsx\n\n\n\nvar getFrameFromX = (clientX, durationInFrames, width)=>{\n    const pos = clientX;\n    const frame = Math.round((0,remotion__WEBPACK_IMPORTED_MODULE_1__.interpolate)(pos, [\n        0,\n        width\n    ], [\n        0,\n        durationInFrames - 1\n    ], {\n        extrapolateLeft: \"clamp\",\n        extrapolateRight: \"clamp\"\n    }));\n    return frame;\n};\nvar BAR_HEIGHT2 = 5;\nvar KNOB_SIZE2 = 12;\nvar VERTICAL_PADDING = 4;\nvar containerStyle = {\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    paddingTop: VERTICAL_PADDING,\n    paddingBottom: VERTICAL_PADDING,\n    boxSizing: \"border-box\",\n    cursor: \"pointer\",\n    position: \"relative\",\n    touchAction: \"none\"\n};\nvar barBackground = {\n    height: BAR_HEIGHT2,\n    backgroundColor: \"rgba(255, 255, 255, 0.25)\",\n    width: \"100%\",\n    borderRadius: BAR_HEIGHT2 / 2\n};\nvar findBodyInWhichDivIsLocated = (div)=>{\n    let current = div;\n    while(current.parentElement){\n        current = current.parentElement;\n    }\n    return current;\n};\nvar PlayerSeekBar = ({ durationInFrames, onSeekEnd, onSeekStart, inFrame, outFrame })=>{\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const barHovered = useHoverState(containerRef, false);\n    const size = useElementSize(containerRef, {\n        triggerOnWindowResize: true,\n        shouldApplyCssTransforms: true\n    });\n    const { seek, play, pause, playing } = usePlayer();\n    const frame = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.Timeline.useTimelinePosition();\n    const [dragging, setDragging] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)({\n        dragging: false\n    });\n    const width = size?.width ?? 0;\n    const onPointerDown = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((e)=>{\n        if (e.button !== 0) {\n            return;\n        }\n        const posLeft = containerRef.current?.getBoundingClientRect().left;\n        const _frame = getFrameFromX(e.clientX - posLeft, durationInFrames, width);\n        pause();\n        seek(_frame);\n        setDragging({\n            dragging: true,\n            wasPlaying: playing\n        });\n        onSeekStart();\n    }, [\n        durationInFrames,\n        width,\n        pause,\n        seek,\n        playing,\n        onSeekStart\n    ]);\n    const onPointerMove = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((e)=>{\n        if (!size) {\n            throw new Error(\"Player has no size\");\n        }\n        if (!dragging.dragging) {\n            return;\n        }\n        const posLeft = containerRef.current?.getBoundingClientRect().left;\n        const _frame = getFrameFromX(e.clientX - posLeft, durationInFrames, size.width);\n        seek(_frame);\n    }, [\n        dragging.dragging,\n        durationInFrames,\n        seek,\n        size\n    ]);\n    const onPointerUp = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(()=>{\n        setDragging({\n            dragging: false\n        });\n        if (!dragging.dragging) {\n            return;\n        }\n        if (dragging.wasPlaying) {\n            play();\n        } else {\n            pause();\n        }\n        onSeekEnd();\n    }, [\n        dragging,\n        onSeekEnd,\n        pause,\n        play\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (!dragging.dragging) {\n            return;\n        }\n        const body = findBodyInWhichDivIsLocated(containerRef.current);\n        body.addEventListener(\"pointermove\", onPointerMove);\n        body.addEventListener(\"pointerup\", onPointerUp);\n        return ()=>{\n            body.removeEventListener(\"pointermove\", onPointerMove);\n            body.removeEventListener(\"pointerup\", onPointerUp);\n        };\n    }, [\n        dragging.dragging,\n        onPointerMove,\n        onPointerUp\n    ]);\n    const knobStyle = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return {\n            height: KNOB_SIZE2,\n            width: KNOB_SIZE2,\n            borderRadius: KNOB_SIZE2 / 2,\n            position: \"absolute\",\n            top: VERTICAL_PADDING - KNOB_SIZE2 / 2 + 5 / 2,\n            backgroundColor: \"white\",\n            left: Math.max(0, frame / Math.max(1, durationInFrames - 1) * width - KNOB_SIZE2 / 2),\n            boxShadow: \"0 0 2px black\",\n            opacity: Number(barHovered)\n        };\n    }, [\n        barHovered,\n        durationInFrames,\n        frame,\n        width\n    ]);\n    const fillStyle = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return {\n            height: BAR_HEIGHT2,\n            backgroundColor: \"rgba(255, 255, 255, 1)\",\n            width: (frame - (inFrame ?? 0)) / (durationInFrames - 1) * 100 + \"%\",\n            marginLeft: (inFrame ?? 0) / (durationInFrames - 1) * 100 + \"%\",\n            borderRadius: BAR_HEIGHT2 / 2\n        };\n    }, [\n        durationInFrames,\n        frame,\n        inFrame\n    ]);\n    const active = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return {\n            height: BAR_HEIGHT2,\n            backgroundColor: \"rgba(255, 255, 255, 0.25)\",\n            width: ((outFrame ?? durationInFrames - 1) - (inFrame ?? 0)) / (durationInFrames - 1) * 100 + \"%\",\n            marginLeft: (inFrame ?? 0) / (durationInFrames - 1) * 100 + \"%\",\n            borderRadius: BAR_HEIGHT2 / 2,\n            position: \"absolute\"\n        };\n    }, [\n        durationInFrames,\n        inFrame,\n        outFrame\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n        ref: containerRef,\n        onPointerDown,\n        style: containerStyle,\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                style: barBackground,\n                children: [\n                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                        style: active\n                    }),\n                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                        style: fillStyle\n                    })\n                ]\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                style: knobStyle\n            })\n        ]\n    });\n};\n// src/format-time.ts\nvar formatTime = (timeInSeconds)=>{\n    const minutes = Math.floor(timeInSeconds / 60);\n    const seconds = Math.floor(timeInSeconds - minutes * 60);\n    return `${String(minutes)}:${String(seconds).padStart(2, \"0\")}`;\n};\n// src/use-video-controls-resize.ts\n\nvar X_SPACER = 10;\nvar X_PADDING = 12;\nvar useVideoControlsResize = ({ allowFullscreen: allowFullScreen, playerWidth })=>{\n    const resizeInfo = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        const playPauseIconSize = ICON_SIZE;\n        const volumeIconSize = ICON_SIZE;\n        const _fullscreenIconSize = allowFullScreen ? fullscreenIconSize : 0;\n        const elementsSize = volumeIconSize + playPauseIconSize + _fullscreenIconSize + X_PADDING * 2 + X_SPACER * 2;\n        const maxTimeLabelWidth = playerWidth - elementsSize;\n        const maxTimeLabelWidthWithoutNegativeValue = Math.max(maxTimeLabelWidth, 0);\n        const availableTimeLabelWidthIfVolumeOpen = maxTimeLabelWidthWithoutNegativeValue - VOLUME_SLIDER_WIDTH;\n        const computedLabelWidth = availableTimeLabelWidthIfVolumeOpen < VOLUME_SLIDER_WIDTH ? maxTimeLabelWidthWithoutNegativeValue : availableTimeLabelWidthIfVolumeOpen;\n        const minWidthForHorizontalDisplay = computedLabelWidth + elementsSize + VOLUME_SLIDER_WIDTH;\n        const displayVerticalVolumeSlider = playerWidth < minWidthForHorizontalDisplay;\n        return {\n            maxTimeLabelWidth: maxTimeLabelWidthWithoutNegativeValue === 0 ? null : maxTimeLabelWidthWithoutNegativeValue,\n            displayVerticalVolumeSlider\n        };\n    }, [\n        allowFullScreen,\n        playerWidth\n    ]);\n    return resizeInfo;\n};\n// src/PlayerControls.tsx\n\nvar gradientSteps = [\n    0,\n    0.013,\n    0.049,\n    0.104,\n    0.175,\n    0.259,\n    0.352,\n    0.45,\n    0.55,\n    0.648,\n    0.741,\n    0.825,\n    0.896,\n    0.951,\n    0.987\n];\nvar gradientOpacities = [\n    0,\n    8.1,\n    15.5,\n    22.5,\n    29,\n    35.3,\n    41.2,\n    47.1,\n    52.9,\n    58.8,\n    64.7,\n    71,\n    77.5,\n    84.5,\n    91.9\n];\nvar globalGradientOpacity = 1 / 0.7;\nvar containerStyle2 = {\n    boxSizing: \"border-box\",\n    position: \"absolute\",\n    bottom: 0,\n    width: \"100%\",\n    paddingTop: 40,\n    paddingBottom: 10,\n    backgroundImage: `linear-gradient(to bottom,${gradientSteps.map((g, i)=>{\n        return `hsla(0, 0%, 0%, ${g}) ${gradientOpacities[i] * globalGradientOpacity}%`;\n    }).join(\", \")}, hsl(0, 0%, 0%) 100%)`,\n    backgroundSize: \"auto 145px\",\n    display: \"flex\",\n    paddingRight: X_PADDING,\n    paddingLeft: X_PADDING,\n    flexDirection: \"column\",\n    transition: \"opacity 0.3s\"\n};\nvar controlsRow = {\n    display: \"flex\",\n    flexDirection: \"row\",\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\"\n};\nvar leftPartStyle = {\n    display: \"flex\",\n    flexDirection: \"row\",\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    alignItems: \"center\"\n};\nvar xSpacer = {\n    width: 12\n};\nvar ySpacer = {\n    height: 8\n};\nvar flex1 = {\n    flex: 1\n};\nvar fullscreen = {};\nvar Controls = ({ durationInFrames, isFullscreen, fps, player, showVolumeControls, onFullscreenButtonClick, allowFullscreen, onExitFullscreenButtonClick, spaceKeyToPlayOrPause, onSeekEnd, onSeekStart, inFrame, outFrame, initiallyShowControls, canvasSize, renderPlayPauseButton, renderFullscreenButton, alwaysShowControls, showPlaybackRateControl, containerRef, buffering, hideControlsWhenPointerDoesntMove, onPointerDown, onDoubleClick, renderMuteButton, renderVolumeSlider })=>{\n    const playButtonRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const frame = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.Timeline.useTimelinePosition();\n    const [supportsFullscreen, setSupportsFullscreen] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const hovered = useHoverState(containerRef, hideControlsWhenPointerDoesntMove);\n    const { maxTimeLabelWidth, displayVerticalVolumeSlider } = useVideoControlsResize({\n        allowFullscreen,\n        playerWidth: canvasSize?.width ?? 0\n    });\n    const [shouldShowInitially, setInitiallyShowControls] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(()=>{\n        if (typeof initiallyShowControls === \"boolean\") {\n            return initiallyShowControls;\n        }\n        if (typeof initiallyShowControls === \"number\") {\n            if (initiallyShowControls % 1 !== 0) {\n                throw new Error(\"initiallyShowControls must be an integer or a boolean\");\n            }\n            if (Number.isNaN(initiallyShowControls)) {\n                throw new Error(\"initiallyShowControls must not be NaN\");\n            }\n            if (!Number.isFinite(initiallyShowControls)) {\n                throw new Error(\"initiallyShowControls must be finite\");\n            }\n            if (initiallyShowControls <= 0) {\n                throw new Error(\"initiallyShowControls must be a positive integer\");\n            }\n            return initiallyShowControls;\n        }\n        throw new TypeError(\"initiallyShowControls must be a number or a boolean\");\n    });\n    const containerCss = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        const shouldShow = hovered || !player.playing || shouldShowInitially || alwaysShowControls;\n        return {\n            ...containerStyle2,\n            opacity: Number(shouldShow)\n        };\n    }, [\n        hovered,\n        shouldShowInitially,\n        player.playing,\n        alwaysShowControls\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (playButtonRef.current && spaceKeyToPlayOrPause) {\n            playButtonRef.current.focus({\n                preventScroll: true\n            });\n        }\n    }, [\n        player.playing,\n        spaceKeyToPlayOrPause\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        setSupportsFullscreen((typeof document !== \"undefined\" && (document.fullscreenEnabled || document.webkitFullscreenEnabled)) ?? false);\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (shouldShowInitially === false) {\n            return;\n        }\n        const time = shouldShowInitially === true ? 2000 : shouldShowInitially;\n        const timeout = setTimeout(()=>{\n            setInitiallyShowControls(false);\n        }, time);\n        return ()=>{\n            clearInterval(timeout);\n        };\n    }, [\n        shouldShowInitially\n    ]);\n    const timeLabel = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return {\n            color: \"white\",\n            fontFamily: \"sans-serif\",\n            fontSize: 14,\n            maxWidth: maxTimeLabelWidth === null ? undefined : maxTimeLabelWidth,\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\"\n        };\n    }, [\n        maxTimeLabelWidth\n    ]);\n    const playbackRates = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        if (showPlaybackRateControl === true) {\n            return [\n                0.5,\n                0.8,\n                1,\n                1.2,\n                1.5,\n                1.8,\n                2,\n                2.5,\n                3\n            ];\n        }\n        if (Array.isArray(showPlaybackRateControl)) {\n            for (const rate of showPlaybackRateControl){\n                if (typeof rate !== \"number\") {\n                    throw new Error(\"Every item in showPlaybackRateControl must be a number\");\n                }\n                if (rate <= 0) {\n                    throw new Error(\"Every item in showPlaybackRateControl must be positive\");\n                }\n            }\n            return showPlaybackRateControl;\n        }\n        return null;\n    }, [\n        showPlaybackRateControl\n    ]);\n    const ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const flexRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const onPointerDownIfContainer = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((e)=>{\n        if (e.target === ref.current || e.target === flexRef.current) {\n            onPointerDown?.(e);\n        }\n    }, [\n        onPointerDown\n    ]);\n    const onDoubleClickIfContainer = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((e)=>{\n        if (e.target === ref.current || e.target === flexRef.current) {\n            onDoubleClick?.(e);\n        }\n    }, [\n        onDoubleClick\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n        ref,\n        style: containerCss,\n        onPointerDown: onPointerDownIfContainer,\n        onDoubleClick: onDoubleClickIfContainer,\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                ref: flexRef,\n                style: controlsRow,\n                children: [\n                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                        style: leftPartStyle,\n                        children: [\n                            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", {\n                                ref: playButtonRef,\n                                type: \"button\",\n                                style: playerButtonStyle,\n                                onClick: player.playing ? player.pause : player.play,\n                                \"aria-label\": player.playing ? \"Pause video\" : \"Play video\",\n                                title: player.playing ? \"Pause video\" : \"Play video\",\n                                children: renderPlayPauseButton === null ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DefaultPlayPauseButton, {\n                                    buffering,\n                                    playing: player.playing\n                                }) : renderPlayPauseButton({\n                                    playing: player.playing,\n                                    isBuffering: buffering\n                                }) ?? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DefaultPlayPauseButton, {\n                                    buffering,\n                                    playing: player.playing\n                                })\n                            }),\n                            showVolumeControls ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                children: [\n                                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                                        style: xSpacer\n                                    }),\n                                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MediaVolumeSlider, {\n                                        renderMuteButton,\n                                        renderVolumeSlider,\n                                        displayVerticalVolumeSlider\n                                    })\n                                ]\n                            }) : null,\n                            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                                style: xSpacer\n                            }),\n                            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                                style: timeLabel,\n                                children: [\n                                    formatTime(frame / fps),\n                                    \" / \",\n                                    formatTime(durationInFrames / fps)\n                                ]\n                            }),\n                            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                                style: xSpacer\n                            })\n                        ]\n                    }),\n                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                        style: flex1\n                    }),\n                    playbackRates && canvasSize && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PlaybackrateControl, {\n                        canvasSize,\n                        playbackRates\n                    }),\n                    playbackRates && supportsFullscreen && allowFullscreen ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                        style: xSpacer\n                    }) : null,\n                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                        style: fullscreen,\n                        children: supportsFullscreen && allowFullscreen ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", {\n                            type: \"button\",\n                            \"aria-label\": isFullscreen ? \"Exit fullscreen\" : \"Enter Fullscreen\",\n                            title: isFullscreen ? \"Exit fullscreen\" : \"Enter Fullscreen\",\n                            style: playerButtonStyle,\n                            onClick: isFullscreen ? onExitFullscreenButtonClick : onFullscreenButtonClick,\n                            children: renderFullscreenButton === null ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(FullscreenIcon, {\n                                isFullscreen\n                            }) : renderFullscreenButton({\n                                isFullscreen\n                            })\n                        }) : null\n                    })\n                ]\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                style: ySpacer\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PlayerSeekBar, {\n                onSeekEnd,\n                onSeekStart,\n                durationInFrames,\n                inFrame,\n                outFrame\n            })\n        ]\n    });\n};\n// src/error-boundary.tsx\n\n\nvar errorStyle = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flex: 1,\n    height: \"100%\",\n    width: \"100%\"\n};\nclass ErrorBoundary extends react__WEBPACK_IMPORTED_MODULE_2__.Component {\n    static getDerivedStateFromError(error) {\n        return {\n            hasError: error\n        };\n    }\n    componentDidCatch(error) {\n        this.props.onError(error);\n    }\n    render() {\n        if (this.state.hasError) {\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                style: errorStyle,\n                children: this.props.errorFallback({\n                    error: this.state.hasError\n                })\n            });\n        }\n        return this.props.children;\n    }\n    constructor(...args){\n        super(...args);\n        this.state = {\n            hasError: null\n        };\n    }\n}\n// src/player-css-classname.ts\nvar PLAYER_CSS_CLASSNAME = \"__remotion-player\";\n// src/utils/is-node.ts\nvar IS_NODE = typeof document === \"undefined\";\n// src/utils/use-click-prevention-on-double-click.ts\n\n// src/utils/cancellable-promise.ts\nvar cancellablePromise = (promise)=>{\n    let isCanceled = false;\n    const wrappedPromise = new Promise((resolve, reject)=>{\n        promise.then((value)=>{\n            if (isCanceled) {\n                reject({\n                    isCanceled,\n                    value\n                });\n                return;\n            }\n            resolve(value);\n        }).catch((error)=>{\n            reject({\n                isCanceled,\n                error\n            });\n        });\n    });\n    return {\n        promise: wrappedPromise,\n        cancel: ()=>{\n            isCanceled = true;\n        }\n    };\n};\n// src/utils/delay.ts\nvar delay = (n)=>new Promise((resolve)=>setTimeout(resolve, n));\n// src/utils/use-cancellable-promises.ts\n\nvar useCancellablePromises = ()=>{\n    const pendingPromises = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)([]);\n    const appendPendingPromise = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((promise)=>{\n        pendingPromises.current = [\n            ...pendingPromises.current,\n            promise\n        ];\n    }, []);\n    const removePendingPromise = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((promise)=>{\n        pendingPromises.current = pendingPromises.current.filter((p)=>p !== promise);\n    }, []);\n    const clearPendingPromises = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(()=>pendingPromises.current.map((p)=>p.cancel()), []);\n    const api = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>({\n            appendPendingPromise,\n            removePendingPromise,\n            clearPendingPromises\n        }), [\n        appendPendingPromise,\n        clearPendingPromises,\n        removePendingPromise\n    ]);\n    return api;\n};\n// src/utils/use-click-prevention-on-double-click.ts\nvar useClickPreventionOnDoubleClick = (onClick, onDoubleClick, doubleClickToFullscreen)=>{\n    const api = useCancellablePromises();\n    const handleClick = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(async (e)=>{\n        if (e instanceof PointerEvent ? e.pointerType === \"touch\" : e.nativeEvent.pointerType === \"touch\") {\n            onClick(e);\n            return;\n        }\n        api.clearPendingPromises();\n        const waitForClick = cancellablePromise(delay(200));\n        api.appendPendingPromise(waitForClick);\n        try {\n            await waitForClick.promise;\n            api.removePendingPromise(waitForClick);\n            onClick(e);\n        } catch (errorInfo) {\n            const info = errorInfo;\n            api.removePendingPromise(waitForClick);\n            if (!info.isCanceled) {\n                throw info.error;\n            }\n        }\n    }, [\n        api,\n        onClick\n    ]);\n    const handlePointerDown = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(()=>{\n        document.addEventListener(\"pointerup\", (newEvt)=>{\n            handleClick(newEvt);\n        }, {\n            once: true\n        });\n    }, [\n        handleClick\n    ]);\n    const handleDoubleClick = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(()=>{\n        api.clearPendingPromises();\n        onDoubleClick();\n    }, [\n        api,\n        onDoubleClick\n    ]);\n    const returnValue = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        if (!doubleClickToFullscreen) {\n            return {\n                handlePointerDown: onClick,\n                handleDoubleClick: ()=>{\n                    return;\n                }\n            };\n        }\n        return {\n            handlePointerDown,\n            handleDoubleClick\n        };\n    }, [\n        doubleClickToFullscreen,\n        handleDoubleClick,\n        handlePointerDown,\n        onClick\n    ]);\n    return returnValue;\n};\n// src/PlayerUI.tsx\n\nvar reactVersion = react__WEBPACK_IMPORTED_MODULE_2__.version.split(\".\")[0];\nif (reactVersion === \"0\") {\n    throw new Error(`Version ${reactVersion} of \"react\" is not supported by Remotion`);\n}\nvar doesReactVersionSupportSuspense = parseInt(reactVersion, 10) >= 18;\nvar PlayerUI = ({ controls, style, loop, autoPlay, allowFullscreen, inputProps, clickToPlay, showVolumeControls, doubleClickToFullscreen, spaceKeyToPlayOrPause, errorFallback, playbackRate, renderLoading, renderPoster, className: className2, moveToBeginningWhenEnded, showPosterWhenUnplayed, showPosterWhenEnded, showPosterWhenPaused, showPosterWhenBuffering, inFrame, outFrame, initiallyShowControls, renderFullscreen: renderFullscreenButton, renderPlayPauseButton, renderMuteButton, renderVolumeSlider, alwaysShowControls, showPlaybackRateControl, posterFillMode, bufferStateDelayInMilliseconds, hideControlsWhenPointerDoesntMove, overflowVisible, browserMediaControlsBehavior }, ref)=>{\n    const config = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.useUnsafeVideoConfig();\n    const video = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.useVideo();\n    const container = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const canvasSize = useElementSize(container, {\n        triggerOnWindowResize: false,\n        shouldApplyCssTransforms: false\n    });\n    const [hasPausedToResume, setHasPausedToResume] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [shouldAutoplay, setShouldAutoPlay] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(autoPlay);\n    const [isFullscreen, setIsFullscreen] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(()=>false);\n    const [seeking, setSeeking] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const supportsFullScreen = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        if (typeof document === \"undefined\") {\n            return false;\n        }\n        return Boolean(document.fullscreenEnabled || document.webkitFullscreenEnabled);\n    }, []);\n    const player = usePlayer();\n    usePlayback({\n        loop,\n        playbackRate,\n        moveToBeginningWhenEnded,\n        inFrame,\n        outFrame,\n        frameRef: player.remotionInternal_currentFrameRef,\n        browserMediaControlsBehavior\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (hasPausedToResume && !player.playing) {\n            setHasPausedToResume(false);\n            player.play();\n        }\n    }, [\n        hasPausedToResume,\n        player\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        const { current } = container;\n        if (!current) {\n            return;\n        }\n        const onFullscreenChange = ()=>{\n            const newValue = document.fullscreenElement === current || document.webkitFullscreenElement === current;\n            setIsFullscreen(newValue);\n        };\n        document.addEventListener(\"fullscreenchange\", onFullscreenChange);\n        document.addEventListener(\"webkitfullscreenchange\", onFullscreenChange);\n        return ()=>{\n            document.removeEventListener(\"fullscreenchange\", onFullscreenChange);\n            document.removeEventListener(\"webkitfullscreenchange\", onFullscreenChange);\n        };\n    }, []);\n    const toggle = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((e)=>{\n        if (player.isPlaying()) {\n            player.pause();\n        } else {\n            player.play(e);\n        }\n    }, [\n        player\n    ]);\n    const requestFullscreen = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(()=>{\n        if (!allowFullscreen) {\n            throw new Error(\"allowFullscreen is false\");\n        }\n        if (!supportsFullScreen) {\n            throw new Error(\"Browser doesnt support fullscreen\");\n        }\n        if (!container.current) {\n            throw new Error(\"No player ref found\");\n        }\n        if (container.current.webkitRequestFullScreen) {\n            container.current.webkitRequestFullScreen();\n        } else {\n            container.current.requestFullscreen();\n        }\n    }, [\n        allowFullscreen,\n        supportsFullScreen\n    ]);\n    const exitFullscreen = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(()=>{\n        if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        } else {\n            document.exitFullscreen();\n        }\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        const { current } = container;\n        if (!current) {\n            return;\n        }\n        const fullscreenChange = ()=>{\n            const element = document.webkitFullscreenElement ?? document.fullscreenElement;\n            if (element && element === container.current) {\n                player.emitter.dispatchFullscreenChange({\n                    isFullscreen: true\n                });\n            } else {\n                player.emitter.dispatchFullscreenChange({\n                    isFullscreen: false\n                });\n            }\n        };\n        current.addEventListener(\"webkitfullscreenchange\", fullscreenChange);\n        current.addEventListener(\"fullscreenchange\", fullscreenChange);\n        return ()=>{\n            current.removeEventListener(\"webkitfullscreenchange\", fullscreenChange);\n            current.removeEventListener(\"fullscreenchange\", fullscreenChange);\n        };\n    }, [\n        player.emitter\n    ]);\n    const durationInFrames = config?.durationInFrames ?? 1;\n    const layout = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        if (!config || !canvasSize) {\n            return null;\n        }\n        return calculateCanvasTransformation({\n            canvasSize,\n            compositionHeight: config.height,\n            compositionWidth: config.width,\n            previewSize: \"auto\"\n        });\n    }, [\n        canvasSize,\n        config\n    ]);\n    const scale = layout?.scale ?? 1;\n    const initialScaleIgnored = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (!initialScaleIgnored.current) {\n            initialScaleIgnored.current = true;\n            return;\n        }\n        player.emitter.dispatchScaleChange(scale);\n    }, [\n        player.emitter,\n        scale\n    ]);\n    const { setMediaVolume, setMediaMuted } = (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.SetMediaVolumeContext);\n    const { mediaMuted, mediaVolume } = (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.MediaVolumeContext);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        player.emitter.dispatchVolumeChange(mediaVolume);\n    }, [\n        player.emitter,\n        mediaVolume\n    ]);\n    const isMuted = mediaMuted || mediaVolume === 0;\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        player.emitter.dispatchMuteChange({\n            isMuted\n        });\n    }, [\n        player.emitter,\n        isMuted\n    ]);\n    const [showBufferIndicator, setShowBufferState] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        let timeout = null;\n        let stopped = false;\n        const onBuffer = ()=>{\n            stopped = false;\n            requestAnimationFrame(()=>{\n                if (bufferStateDelayInMilliseconds === 0) {\n                    setShowBufferState(true);\n                } else {\n                    timeout = setTimeout(()=>{\n                        if (!stopped) {\n                            setShowBufferState(true);\n                        }\n                    }, bufferStateDelayInMilliseconds);\n                }\n            });\n        };\n        const onResume = ()=>{\n            requestAnimationFrame(()=>{\n                stopped = true;\n                setShowBufferState(false);\n                if (timeout) {\n                    clearTimeout(timeout);\n                }\n            });\n        };\n        player.emitter.addEventListener(\"waiting\", onBuffer);\n        player.emitter.addEventListener(\"resume\", onResume);\n        return ()=>{\n            player.emitter.removeEventListener(\"waiting\", onBuffer);\n            player.emitter.removeEventListener(\"resume\", onResume);\n            setShowBufferState(false);\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n            stopped = true;\n        };\n    }, [\n        bufferStateDelayInMilliseconds,\n        player.emitter\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useImperativeHandle)(ref, ()=>{\n        const methods = {\n            play: player.play,\n            pause: ()=>{\n                setHasPausedToResume(false);\n                player.pause();\n            },\n            toggle,\n            getContainerNode: ()=>container.current,\n            getCurrentFrame: player.getCurrentFrame,\n            isPlaying: player.isPlaying,\n            seekTo: (f)=>{\n                const lastFrame = durationInFrames - 1;\n                const frameToSeekTo = Math.max(0, Math.min(lastFrame, f));\n                if (player.isPlaying()) {\n                    const pauseToResume = frameToSeekTo !== lastFrame || loop;\n                    setHasPausedToResume(pauseToResume);\n                    player.pause();\n                }\n                if (frameToSeekTo === lastFrame && !loop) {\n                    player.emitter.dispatchEnded();\n                }\n                player.seek(frameToSeekTo);\n            },\n            isFullscreen: ()=>{\n                const { current } = container;\n                if (!current) {\n                    return false;\n                }\n                return document.fullscreenElement === current || document.webkitFullscreenElement === current;\n            },\n            requestFullscreen,\n            exitFullscreen,\n            getVolume: ()=>{\n                if (mediaMuted) {\n                    return 0;\n                }\n                return mediaVolume;\n            },\n            setVolume: (vol)=>{\n                if (typeof vol !== \"number\") {\n                    throw new TypeError(`setVolume() takes a number, got value of type ${typeof vol}`);\n                }\n                if (isNaN(vol)) {\n                    throw new TypeError(`setVolume() got a number that is NaN. Volume must be between 0 and 1.`);\n                }\n                if (vol < 0 || vol > 1) {\n                    throw new TypeError(`setVolume() got a number that is out of range. Must be between 0 and 1, got ${typeof vol}`);\n                }\n                setMediaVolume(vol);\n            },\n            isMuted: ()=>isMuted,\n            mute: ()=>{\n                setMediaMuted(true);\n            },\n            unmute: ()=>{\n                setMediaMuted(false);\n            },\n            getScale: ()=>scale,\n            pauseAndReturnToPlayStart: ()=>{\n                player.pauseAndReturnToPlayStart();\n            }\n        };\n        return Object.assign(player.emitter, methods);\n    }, [\n        durationInFrames,\n        exitFullscreen,\n        loop,\n        mediaMuted,\n        isMuted,\n        mediaVolume,\n        player,\n        requestFullscreen,\n        setMediaMuted,\n        setMediaVolume,\n        toggle,\n        scale\n    ]);\n    const VideoComponent = video ? video.component : null;\n    const outerStyle = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return calculateOuterStyle({\n            canvasSize,\n            config,\n            style,\n            overflowVisible,\n            layout\n        });\n    }, [\n        canvasSize,\n        config,\n        layout,\n        overflowVisible,\n        style\n    ]);\n    const outer = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return calculateOuter({\n            config,\n            layout,\n            scale,\n            overflowVisible\n        });\n    }, [\n        config,\n        layout,\n        overflowVisible,\n        scale\n    ]);\n    const containerStyle3 = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return calculateContainerStyle({\n            canvasSize,\n            config,\n            layout,\n            scale,\n            overflowVisible\n        });\n    }, [\n        canvasSize,\n        config,\n        layout,\n        overflowVisible,\n        scale\n    ]);\n    const onError = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((error)=>{\n        player.pause();\n        player.emitter.dispatchError(error);\n    }, [\n        player\n    ]);\n    const onFullscreenButtonClick = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((e)=>{\n        e.stopPropagation();\n        requestFullscreen();\n    }, [\n        requestFullscreen\n    ]);\n    const onExitFullscreenButtonClick = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((e)=>{\n        e.stopPropagation();\n        exitFullscreen();\n    }, [\n        exitFullscreen\n    ]);\n    const onSingleClick = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((e)=>{\n        const rightClick = e instanceof MouseEvent ? e.button === 2 : e.nativeEvent.button;\n        if (rightClick) {\n            return;\n        }\n        toggle(e);\n    }, [\n        toggle\n    ]);\n    const onSeekStart = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(()=>{\n        setSeeking(true);\n    }, []);\n    const onSeekEnd = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(()=>{\n        setSeeking(false);\n    }, []);\n    const onDoubleClick = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(()=>{\n        if (isFullscreen) {\n            exitFullscreen();\n        } else {\n            requestFullscreen();\n        }\n    }, [\n        exitFullscreen,\n        isFullscreen,\n        requestFullscreen\n    ]);\n    const { handlePointerDown, handleDoubleClick } = useClickPreventionOnDoubleClick(onSingleClick, onDoubleClick, doubleClickToFullscreen && allowFullscreen && supportsFullScreen);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (shouldAutoplay) {\n            player.play();\n            setShouldAutoPlay(false);\n        }\n    }, [\n        shouldAutoplay,\n        player\n    ]);\n    const loadingMarkup = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return renderLoading ? renderLoading({\n            height: outerStyle.height,\n            width: outerStyle.width,\n            isBuffering: showBufferIndicator\n        }) : null;\n    }, [\n        outerStyle.height,\n        outerStyle.width,\n        renderLoading,\n        showBufferIndicator\n    ]);\n    const currentScale = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return {\n            type: \"scale\",\n            scale\n        };\n    }, [\n        scale\n    ]);\n    if (!config) {\n        return null;\n    }\n    const poster = renderPoster ? renderPoster({\n        height: posterFillMode === \"player-size\" ? outerStyle.height : config.height,\n        width: posterFillMode === \"player-size\" ? outerStyle.width : config.width,\n        isBuffering: showBufferIndicator\n    }) : null;\n    if (poster === undefined) {\n        throw new TypeError(\"renderPoster() must return a React element, but undefined was returned\");\n    }\n    const shouldShowPoster = poster && [\n        showPosterWhenPaused && !player.isPlaying() && !seeking,\n        showPosterWhenEnded && player.isLastFrame && !player.isPlaying(),\n        showPosterWhenUnplayed && !player.hasPlayed && !player.isPlaying(),\n        showPosterWhenBuffering && showBufferIndicator && player.isPlaying()\n    ].some(Boolean);\n    const { left, top, width, height, ...outerWithoutScale } = outer;\n    const content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                style: outer,\n                onPointerDown: clickToPlay ? handlePointerDown : undefined,\n                onDoubleClick: doubleClickToFullscreen ? handleDoubleClick : undefined,\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                    style: containerStyle3,\n                    className: PLAYER_CSS_CLASSNAME,\n                    children: [\n                        VideoComponent ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ErrorBoundary, {\n                            onError,\n                            errorFallback,\n                            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.ClipComposition, {\n                                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.CurrentScaleContext.Provider, {\n                                    value: currentScale,\n                                    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(VideoComponent, {\n                                        ...video?.props ?? {},\n                                        ...inputProps ?? {}\n                                    })\n                                })\n                            })\n                        }) : null,\n                        shouldShowPoster && posterFillMode === \"composition-size\" ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                            style: {\n                                ...outerWithoutScale,\n                                width: config.width,\n                                height: config.height\n                            },\n                            onPointerDown: clickToPlay ? handlePointerDown : undefined,\n                            onDoubleClick: doubleClickToFullscreen ? handleDoubleClick : undefined,\n                            children: poster\n                        }) : null\n                    ]\n                })\n            }),\n            shouldShowPoster && posterFillMode === \"player-size\" ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                style: outer,\n                onPointerDown: clickToPlay ? handlePointerDown : undefined,\n                onDoubleClick: doubleClickToFullscreen ? handleDoubleClick : undefined,\n                children: poster\n            }) : null,\n            controls ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Controls, {\n                fps: config.fps,\n                durationInFrames: config.durationInFrames,\n                player,\n                containerRef: container,\n                onFullscreenButtonClick,\n                isFullscreen,\n                allowFullscreen,\n                showVolumeControls,\n                onExitFullscreenButtonClick,\n                spaceKeyToPlayOrPause,\n                onSeekEnd,\n                onSeekStart,\n                inFrame,\n                outFrame,\n                initiallyShowControls,\n                canvasSize,\n                renderFullscreenButton,\n                renderPlayPauseButton,\n                alwaysShowControls,\n                showPlaybackRateControl,\n                buffering: showBufferIndicator,\n                hideControlsWhenPointerDoesntMove,\n                onDoubleClick: doubleClickToFullscreen ? handleDoubleClick : undefined,\n                onPointerDown: clickToPlay ? handlePointerDown : undefined,\n                renderMuteButton,\n                renderVolumeSlider\n            }) : null\n        ]\n    });\n    if (IS_NODE && !doesReactVersionSupportSuspense) {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n            ref: container,\n            style: outerStyle,\n            className: className2,\n            children: content\n        });\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n        ref: container,\n        style: outerStyle,\n        className: className2,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react__WEBPACK_IMPORTED_MODULE_2__.Suspense, {\n            fallback: loadingMarkup,\n            children: content\n        })\n    });\n};\nvar PlayerUI_default = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(PlayerUI);\n// src/SharedPlayerContext.tsx\n\n\n// src/volume-persistance.ts\nvar VOLUME_PERSISTANCE_KEY = \"remotion.volumePreference\";\nvar persistVolume = (volume)=>{\n    if (true) {\n        return;\n    }\n    try {\n        window.localStorage.setItem(VOLUME_PERSISTANCE_KEY, String(volume));\n    } catch (e) {\n        console.log(\"Could not persist volume\", e);\n    }\n};\nvar getPreferredVolume = ()=>{\n    if (true) {\n        return 1;\n    }\n    try {\n        const val = window.localStorage.getItem(VOLUME_PERSISTANCE_KEY);\n        return val ? Number(val) : 1;\n    } catch (e) {\n        return 1;\n    }\n};\n// src/SharedPlayerContext.tsx\n\nvar PLAYER_COMP_ID = \"player-comp\";\nvar SharedPlayerContexts = ({ children, timelineContext, fps, compositionHeight, compositionWidth, durationInFrames, component, numberOfSharedAudioTags, initiallyMuted })=>{\n    const compositionManagerContext = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        const context = {\n            compositions: [\n                {\n                    component,\n                    durationInFrames,\n                    height: compositionHeight,\n                    width: compositionWidth,\n                    fps,\n                    id: PLAYER_COMP_ID,\n                    nonce: 777,\n                    folderName: null,\n                    parentFolderName: null,\n                    schema: null,\n                    calculateMetadata: null\n                }\n            ],\n            folders: [],\n            registerFolder: ()=>{\n                return;\n            },\n            unregisterFolder: ()=>{\n                return;\n            },\n            registerComposition: ()=>{\n                return;\n            },\n            unregisterComposition: ()=>{\n                return;\n            },\n            currentCompositionMetadata: null,\n            setCurrentCompositionMetadata: ()=>{\n                return;\n            },\n            canvasContent: {\n                type: \"composition\",\n                compositionId: \"player-comp\"\n            },\n            setCanvasContent: ()=>{\n                return;\n            },\n            updateCompositionDefaultProps: ()=>{\n                return;\n            }\n        };\n        return context;\n    }, [\n        component,\n        durationInFrames,\n        compositionHeight,\n        compositionWidth,\n        fps\n    ]);\n    const [mediaMuted, setMediaMuted] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(()=>initiallyMuted);\n    const [mediaVolume, setMediaVolume] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(()=>getPreferredVolume());\n    const mediaVolumeContextValue = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return {\n            mediaMuted,\n            mediaVolume\n        };\n    }, [\n        mediaMuted,\n        mediaVolume\n    ]);\n    const setMediaVolumeAndPersist = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((vol)=>{\n        setMediaVolume(vol);\n        persistVolume(vol);\n    }, []);\n    const setMediaVolumeContextValue = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return {\n            setMediaMuted,\n            setMediaVolume: setMediaVolumeAndPersist\n        };\n    }, [\n        setMediaVolumeAndPersist\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.CanUseRemotionHooksProvider, {\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.Timeline.TimelineContext.Provider, {\n            value: timelineContext,\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.CompositionManager.Provider, {\n                value: compositionManagerContext,\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.ResolveCompositionConfig, {\n                    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.PrefetchProvider, {\n                        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.DurationsContextProvider, {\n                            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.MediaVolumeContext.Provider, {\n                                value: mediaVolumeContextValue,\n                                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.NativeLayersProvider, {\n                                    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.SetMediaVolumeContext.Provider, {\n                                        value: setMediaVolumeContextValue,\n                                        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.SharedAudioContextProvider, {\n                                            numberOfAudioTags: numberOfSharedAudioTags,\n                                            component,\n                                            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.BufferingProvider, {\n                                                children\n                                            })\n                                        })\n                                    })\n                                })\n                            })\n                        })\n                    })\n                })\n            })\n        })\n    });\n};\n// src/utils/validate-in-out-frame.ts\nvar validateSingleFrame = (frame, variableName)=>{\n    if (typeof frame === \"undefined\" || frame === null) {\n        return frame ?? null;\n    }\n    if (typeof frame !== \"number\") {\n        throw new TypeError(`\"${variableName}\" must be a number, but is ${JSON.stringify(frame)}`);\n    }\n    if (Number.isNaN(frame)) {\n        throw new TypeError(`\"${variableName}\" must not be NaN, but is ${JSON.stringify(frame)}`);\n    }\n    if (!Number.isFinite(frame)) {\n        throw new TypeError(`\"${variableName}\" must be finite, but is ${JSON.stringify(frame)}`);\n    }\n    if (frame % 1 !== 0) {\n        throw new TypeError(`\"${variableName}\" must be an integer, but is ${JSON.stringify(frame)}`);\n    }\n    return frame;\n};\nvar validateInOutFrames = ({ inFrame, durationInFrames, outFrame })=>{\n    const validatedInFrame = validateSingleFrame(inFrame, \"inFrame\");\n    const validatedOutFrame = validateSingleFrame(outFrame, \"outFrame\");\n    if (validatedInFrame === null && validatedOutFrame === null) {\n        return;\n    }\n    if (validatedInFrame !== null && validatedInFrame > durationInFrames - 1) {\n        throw new Error(\"inFrame must be less than (durationInFrames - 1), but is \" + validatedInFrame);\n    }\n    if (validatedOutFrame !== null && validatedOutFrame > durationInFrames - 1) {\n        throw new Error(\"outFrame must be less than (durationInFrames - 1), but is \" + validatedOutFrame);\n    }\n    if (validatedInFrame !== null && validatedInFrame < 0) {\n        throw new Error(\"inFrame must be greater than 0, but is \" + validatedInFrame);\n    }\n    if (validatedOutFrame !== null && validatedOutFrame <= 0) {\n        throw new Error(`outFrame must be greater than 0, but is ${validatedOutFrame}. If you want to render a single frame, use <Thumbnail /> instead.`);\n    }\n    if (validatedOutFrame !== null && validatedInFrame !== null && validatedOutFrame <= validatedInFrame) {\n        throw new Error(\"outFrame must be greater than inFrame, but is \" + validatedOutFrame + \" <= \" + validatedInFrame);\n    }\n};\n// src/utils/validate-initial-frame.ts\nvar validateInitialFrame = ({ initialFrame, durationInFrames })=>{\n    if (typeof durationInFrames !== \"number\") {\n        throw new Error(`\\`durationInFrames\\` must be a number, but is ${JSON.stringify(durationInFrames)}`);\n    }\n    if (typeof initialFrame === \"undefined\") {\n        return;\n    }\n    if (typeof initialFrame !== \"number\") {\n        throw new Error(`\\`initialFrame\\` must be a number, but is ${JSON.stringify(initialFrame)}`);\n    }\n    if (Number.isNaN(initialFrame)) {\n        throw new Error(`\\`initialFrame\\` must be a number, but is NaN`);\n    }\n    if (!Number.isFinite(initialFrame)) {\n        throw new Error(`\\`initialFrame\\` must be a number, but is Infinity`);\n    }\n    if (initialFrame % 1 !== 0) {\n        throw new Error(`\\`initialFrame\\` must be an integer, but is ${JSON.stringify(initialFrame)}`);\n    }\n    if (initialFrame > durationInFrames - 1) {\n        throw new Error(`\\`initialFrame\\` must be less or equal than \\`durationInFrames - 1\\`, but is ${JSON.stringify(initialFrame)}`);\n    }\n};\n// src/utils/validate-playbackrate.ts\nvar validatePlaybackRate = (playbackRate)=>{\n    if (playbackRate === undefined) {\n        return;\n    }\n    if (playbackRate > 4) {\n        throw new Error(`The highest possible playback rate is 4. You passed: ${playbackRate}`);\n    }\n    if (playbackRate < -4) {\n        throw new Error(`The lowest possible playback rate is -4. You passed: ${playbackRate}`);\n    }\n    if (playbackRate === 0) {\n        throw new Error(`A playback rate of 0 is not supported.`);\n    }\n};\n// src/validate.ts\n\nvar validateFps = remotion_no_react__WEBPACK_IMPORTED_MODULE_3__.NoReactInternals.validateFps;\nvar validateDimension = remotion_no_react__WEBPACK_IMPORTED_MODULE_3__.NoReactInternals.validateDimension;\nvar validateDurationInFrames = remotion_no_react__WEBPACK_IMPORTED_MODULE_3__.NoReactInternals.validateDurationInFrames;\nvar validateDefaultAndInputProps = remotion_no_react__WEBPACK_IMPORTED_MODULE_3__.NoReactInternals.validateDefaultAndInputProps;\n// src/Player.tsx\n\nvar componentOrNullIfLazy = (props)=>{\n    if (\"component\" in props) {\n        return props.component;\n    }\n    return null;\n};\nvar PlayerFn = ({ durationInFrames, compositionHeight, compositionWidth, fps, inputProps, style, controls = false, loop = false, autoPlay = false, showVolumeControls = true, allowFullscreen = true, clickToPlay, doubleClickToFullscreen = false, spaceKeyToPlayOrPause = true, moveToBeginningWhenEnded = true, numberOfSharedAudioTags = 5, errorFallback = ()=>\"⚠️\", playbackRate = 1, renderLoading, className: className2, showPosterWhenUnplayed, showPosterWhenEnded, showPosterWhenPaused, showPosterWhenBuffering, initialFrame, renderPoster, inFrame, outFrame, initiallyShowControls, renderFullscreenButton, renderPlayPauseButton, renderVolumeSlider, alwaysShowControls = false, initiallyMuted = false, showPlaybackRateControl = false, posterFillMode = \"player-size\", bufferStateDelayInMilliseconds, hideControlsWhenPointerDoesntMove = true, overflowVisible = false, renderMuteButton, browserMediaControlsBehavior: passedBrowserMediaControlsBehavior, ...componentProps }, ref)=>{\n    if (false) {}\n    if (componentProps.defaultProps !== undefined) {\n        throw new Error(\"The <Player /> component does not accept `defaultProps`, but some were passed. Use `inputProps` instead.\");\n    }\n    const componentForValidation = componentOrNullIfLazy(componentProps);\n    if (componentForValidation?.type === remotion__WEBPACK_IMPORTED_MODULE_1__.Composition) {\n        throw new TypeError(`'component' should not be an instance of <Composition/>. Pass the React component directly, and set the duration, fps and dimensions as separate props. See https://www.remotion.dev/docs/player/examples for an example.`);\n    }\n    if (componentForValidation === remotion__WEBPACK_IMPORTED_MODULE_1__.Composition) {\n        throw new TypeError(`'component' must not be the 'Composition' component. Pass your own React component directly, and set the duration, fps and dimensions as separate props. See https://www.remotion.dev/docs/player/examples for an example.`);\n    }\n    const component = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.useLazyComponent(componentProps);\n    validateInitialFrame({\n        initialFrame,\n        durationInFrames\n    });\n    const [frame, setFrame] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(()=>({\n            [PLAYER_COMP_ID]: initialFrame ?? 0\n        }));\n    const [playing, setPlaying] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [rootId] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"player-comp\");\n    const rootRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const audioAndVideoTags = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)([]);\n    const imperativePlaying = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(false);\n    const [currentPlaybackRate, setCurrentPlaybackRate] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(playbackRate);\n    if (typeof compositionHeight !== \"number\") {\n        throw new TypeError(`'compositionHeight' must be a number but got '${typeof compositionHeight}' instead`);\n    }\n    if (typeof compositionWidth !== \"number\") {\n        throw new TypeError(`'compositionWidth' must be a number but got '${typeof compositionWidth}' instead`);\n    }\n    validateDimension(compositionHeight, \"compositionHeight\", \"of the <Player /> component\");\n    validateDimension(compositionWidth, \"compositionWidth\", \"of the <Player /> component\");\n    validateDurationInFrames(durationInFrames, {\n        component: \"of the <Player/> component\",\n        allowFloats: false\n    });\n    validateFps(fps, \"as a prop of the <Player/> component\", false);\n    validateDefaultAndInputProps(inputProps, \"inputProps\", null);\n    validateInOutFrames({\n        durationInFrames,\n        inFrame,\n        outFrame\n    });\n    if (typeof controls !== \"boolean\" && typeof controls !== \"undefined\") {\n        throw new TypeError(`'controls' must be a boolean or undefined but got '${typeof controls}' instead`);\n    }\n    if (typeof autoPlay !== \"boolean\" && typeof autoPlay !== \"undefined\") {\n        throw new TypeError(`'autoPlay' must be a boolean or undefined but got '${typeof autoPlay}' instead`);\n    }\n    if (typeof loop !== \"boolean\" && typeof loop !== \"undefined\") {\n        throw new TypeError(`'loop' must be a boolean or undefined but got '${typeof loop}' instead`);\n    }\n    if (typeof doubleClickToFullscreen !== \"boolean\" && typeof doubleClickToFullscreen !== \"undefined\") {\n        throw new TypeError(`'doubleClickToFullscreen' must be a boolean or undefined but got '${typeof doubleClickToFullscreen}' instead`);\n    }\n    if (typeof showVolumeControls !== \"boolean\" && typeof showVolumeControls !== \"undefined\") {\n        throw new TypeError(`'showVolumeControls' must be a boolean or undefined but got '${typeof showVolumeControls}' instead`);\n    }\n    if (typeof allowFullscreen !== \"boolean\" && typeof allowFullscreen !== \"undefined\") {\n        throw new TypeError(`'allowFullscreen' must be a boolean or undefined but got '${typeof allowFullscreen}' instead`);\n    }\n    if (typeof clickToPlay !== \"boolean\" && typeof clickToPlay !== \"undefined\") {\n        throw new TypeError(`'clickToPlay' must be a boolean or undefined but got '${typeof clickToPlay}' instead`);\n    }\n    if (typeof spaceKeyToPlayOrPause !== \"boolean\" && typeof spaceKeyToPlayOrPause !== \"undefined\") {\n        throw new TypeError(`'spaceKeyToPlayOrPause' must be a boolean or undefined but got '${typeof spaceKeyToPlayOrPause}' instead`);\n    }\n    if (typeof numberOfSharedAudioTags !== \"number\" || numberOfSharedAudioTags % 1 !== 0 || !Number.isFinite(numberOfSharedAudioTags) || Number.isNaN(numberOfSharedAudioTags) || numberOfSharedAudioTags < 0) {\n        throw new TypeError(`'numberOfSharedAudioTags' must be an integer but got '${numberOfSharedAudioTags}' instead`);\n    }\n    validatePlaybackRate(currentPlaybackRate);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        setCurrentPlaybackRate(playbackRate);\n    }, [\n        playbackRate\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useImperativeHandle)(ref, ()=>rootRef.current, []);\n    const timelineContextValue = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return {\n            frame,\n            playing,\n            rootId,\n            playbackRate: currentPlaybackRate,\n            imperativePlaying,\n            setPlaybackRate: (rate)=>{\n                setCurrentPlaybackRate(rate);\n            },\n            audioAndVideoTags\n        };\n    }, [\n        frame,\n        currentPlaybackRate,\n        playing,\n        rootId\n    ]);\n    const setTimelineContextValue = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return {\n            setFrame,\n            setPlaying\n        };\n    }, [\n        setFrame\n    ]);\n    if (false) {}\n    const actualInputProps = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>inputProps ?? {}, [\n        inputProps\n    ]);\n    const browserMediaControlsBehavior = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return passedBrowserMediaControlsBehavior ?? {\n            mode: \"prevent-media-session\"\n        };\n    }, [\n        passedBrowserMediaControlsBehavior\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.IsPlayerContextProvider, {\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SharedPlayerContexts, {\n            timelineContext: timelineContextValue,\n            component,\n            compositionHeight,\n            compositionWidth,\n            durationInFrames,\n            fps,\n            numberOfSharedAudioTags,\n            initiallyMuted,\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.Timeline.SetTimelineContext.Provider, {\n                value: setTimelineContextValue,\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PlayerEmitterProvider, {\n                    currentPlaybackRate,\n                    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PlayerUI_default, {\n                        ref: rootRef,\n                        posterFillMode,\n                        renderLoading,\n                        autoPlay: Boolean(autoPlay),\n                        loop: Boolean(loop),\n                        controls: Boolean(controls),\n                        errorFallback,\n                        style,\n                        inputProps: actualInputProps,\n                        allowFullscreen: Boolean(allowFullscreen),\n                        moveToBeginningWhenEnded: Boolean(moveToBeginningWhenEnded),\n                        clickToPlay: typeof clickToPlay === \"boolean\" ? clickToPlay : Boolean(controls),\n                        showVolumeControls: Boolean(showVolumeControls),\n                        doubleClickToFullscreen: Boolean(doubleClickToFullscreen),\n                        spaceKeyToPlayOrPause: Boolean(spaceKeyToPlayOrPause),\n                        playbackRate: currentPlaybackRate,\n                        className: className2 ?? undefined,\n                        showPosterWhenUnplayed: Boolean(showPosterWhenUnplayed),\n                        showPosterWhenEnded: Boolean(showPosterWhenEnded),\n                        showPosterWhenPaused: Boolean(showPosterWhenPaused),\n                        showPosterWhenBuffering: Boolean(showPosterWhenBuffering),\n                        renderPoster,\n                        inFrame: inFrame ?? null,\n                        outFrame: outFrame ?? null,\n                        initiallyShowControls: initiallyShowControls ?? true,\n                        renderFullscreen: renderFullscreenButton ?? null,\n                        renderPlayPauseButton: renderPlayPauseButton ?? null,\n                        renderMuteButton: renderMuteButton ?? null,\n                        renderVolumeSlider: renderVolumeSlider ?? null,\n                        alwaysShowControls,\n                        showPlaybackRateControl,\n                        bufferStateDelayInMilliseconds: bufferStateDelayInMilliseconds ?? 300,\n                        hideControlsWhenPointerDoesntMove,\n                        overflowVisible,\n                        browserMediaControlsBehavior\n                    })\n                })\n            })\n        })\n    });\n};\nvar forward = react__WEBPACK_IMPORTED_MODULE_2__.forwardRef;\nvar Player = forward(PlayerFn);\n// src/Thumbnail.tsx\n\n\n// src/ThumbnailUI.tsx\n\n\n// src/use-thumbnail.ts\n\nvar useThumbnail = ()=>{\n    const emitter = (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(ThumbnailEmitterContext);\n    if (!emitter) {\n        throw new TypeError(\"Expected Player event emitter context\");\n    }\n    const returnValue = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return {\n            emitter\n        };\n    }, [\n        emitter\n    ]);\n    return returnValue;\n};\n// src/ThumbnailUI.tsx\n\nvar reactVersion2 = react__WEBPACK_IMPORTED_MODULE_2__.version.split(\".\")[0];\nif (reactVersion2 === \"0\") {\n    throw new Error(`Version ${reactVersion2} of \"react\" is not supported by Remotion`);\n}\nvar doesReactVersionSupportSuspense2 = parseInt(reactVersion2, 10) >= 18;\nvar ThumbnailUI = ({ style, inputProps, errorFallback, renderLoading, className: className2, overflowVisible }, ref)=>{\n    const config = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.useUnsafeVideoConfig();\n    const video = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.useVideo();\n    const container = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const canvasSize = useElementSize(container, {\n        triggerOnWindowResize: false,\n        shouldApplyCssTransforms: false\n    });\n    const layout = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        if (!config || !canvasSize) {\n            return null;\n        }\n        return calculateCanvasTransformation({\n            canvasSize,\n            compositionHeight: config.height,\n            compositionWidth: config.width,\n            previewSize: \"auto\"\n        });\n    }, [\n        canvasSize,\n        config\n    ]);\n    const scale = layout?.scale ?? 1;\n    const thumbnail = useThumbnail();\n    useBufferStateEmitter(thumbnail.emitter);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useImperativeHandle)(ref, ()=>{\n        const methods = {\n            getContainerNode: ()=>container.current,\n            getScale: ()=>scale\n        };\n        return Object.assign(thumbnail.emitter, methods);\n    }, [\n        scale,\n        thumbnail.emitter\n    ]);\n    const VideoComponent = video ? video.component : null;\n    const outerStyle = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return calculateOuterStyle({\n            config,\n            style,\n            canvasSize,\n            overflowVisible,\n            layout\n        });\n    }, [\n        canvasSize,\n        config,\n        layout,\n        overflowVisible,\n        style\n    ]);\n    const outer = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return calculateOuter({\n            config,\n            layout,\n            scale,\n            overflowVisible\n        });\n    }, [\n        config,\n        layout,\n        overflowVisible,\n        scale\n    ]);\n    const containerStyle3 = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return calculateContainerStyle({\n            canvasSize,\n            config,\n            layout,\n            scale,\n            overflowVisible\n        });\n    }, [\n        canvasSize,\n        config,\n        layout,\n        overflowVisible,\n        scale\n    ]);\n    const onError = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((error)=>{\n        thumbnail.emitter.dispatchError(error);\n    }, [\n        thumbnail.emitter\n    ]);\n    const loadingMarkup = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return renderLoading ? renderLoading({\n            height: outerStyle.height,\n            width: outerStyle.width,\n            isBuffering: false\n        }) : null;\n    }, [\n        outerStyle.height,\n        outerStyle.width,\n        renderLoading\n    ]);\n    const currentScaleContext = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return {\n            type: \"scale\",\n            scale\n        };\n    }, [\n        scale\n    ]);\n    if (!config) {\n        return null;\n    }\n    const content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n        style: outer,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n            style: containerStyle3,\n            className: PLAYER_CSS_CLASSNAME,\n            children: VideoComponent ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ErrorBoundary, {\n                onError,\n                errorFallback,\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.CurrentScaleContext.Provider, {\n                    value: currentScaleContext,\n                    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(VideoComponent, {\n                        ...video?.props ?? {},\n                        ...inputProps ?? {}\n                    })\n                })\n            }) : null\n        })\n    });\n    if (IS_NODE && !doesReactVersionSupportSuspense2) {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n            ref: container,\n            style: outerStyle,\n            className: className2,\n            children: content\n        });\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n        ref: container,\n        style: outerStyle,\n        className: className2,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react__WEBPACK_IMPORTED_MODULE_2__.Suspense, {\n            fallback: loadingMarkup,\n            children: content\n        })\n    });\n};\nvar ThumbnailUI_default = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(ThumbnailUI);\n// src/Thumbnail.tsx\n\nvar ThumbnailFn = ({ frameToDisplay, style, inputProps, compositionHeight, compositionWidth, durationInFrames, fps, className: className2, errorFallback = ()=>\"⚠️\", renderLoading, overflowVisible = false, ...componentProps }, ref)=>{\n    if (false) {}\n    const [thumbnailId] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(()=>String((0,remotion__WEBPACK_IMPORTED_MODULE_1__.random)(null)));\n    const rootRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const timelineState = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        const value = {\n            playing: false,\n            frame: {\n                [PLAYER_COMP_ID]: frameToDisplay\n            },\n            rootId: thumbnailId,\n            imperativePlaying: {\n                current: false\n            },\n            playbackRate: 1,\n            setPlaybackRate: ()=>{\n                throw new Error(\"thumbnail\");\n            },\n            audioAndVideoTags: {\n                current: []\n            }\n        };\n        return value;\n    }, [\n        frameToDisplay,\n        thumbnailId\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useImperativeHandle)(ref, ()=>rootRef.current, []);\n    const Component = remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.useLazyComponent(componentProps);\n    const [emitter] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(()=>new ThumbnailEmitter);\n    const passedInputProps = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        return inputProps ?? {};\n    }, [\n        inputProps\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(remotion__WEBPACK_IMPORTED_MODULE_1__.Internals.IsPlayerContextProvider, {\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SharedPlayerContexts, {\n            timelineContext: timelineState,\n            component: Component,\n            compositionHeight,\n            compositionWidth,\n            durationInFrames,\n            fps,\n            numberOfSharedAudioTags: 0,\n            initiallyMuted: true,\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ThumbnailEmitterContext.Provider, {\n                value: emitter,\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ThumbnailUI_default, {\n                    ref: rootRef,\n                    className: className2,\n                    errorFallback,\n                    inputProps: passedInputProps,\n                    renderLoading,\n                    style,\n                    overflowVisible\n                })\n            })\n        })\n    });\n};\nvar forward2 = react__WEBPACK_IMPORTED_MODULE_2__.forwardRef;\nvar Thumbnail = forward2(ThumbnailFn);\n// src/index.ts\nvar PlayerInternals = {\n    PlayerEventEmitterContext,\n    PlayerEmitter,\n    usePlayer,\n    usePlayback,\n    useElementSize,\n    calculateCanvasTransformation,\n    useHoverState,\n    updateAllElementsSizes,\n    PlayerEmitterProvider,\n    BufferingIndicator\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@remotion/player/dist/esm/index.mjs\n");

/***/ })

};
;